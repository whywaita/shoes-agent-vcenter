/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterVmGuestCustomizationSetSpec struct for VcenterVmGuestCustomizationSetSpec
type VcenterVmGuestCustomizationSetSpec struct {
	// The name of the customization specification that has be retrieved from the virtual center inventory and applied for the virtual machine. Either one of Customization.SetSpec.name or Customization.SetSpec.spec or none of them should be specified. If unset and Customization.SetSpec.spec is also unset when executing Customization.set operationg, then any pending customization for the virtual machine will be cleared.
	Name *string `json:"name,omitempty"`
	Spec *VcenterGuestCustomizationSpec `json:"spec,omitempty"`
}

// NewVcenterVmGuestCustomizationSetSpec instantiates a new VcenterVmGuestCustomizationSetSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterVmGuestCustomizationSetSpec() *VcenterVmGuestCustomizationSetSpec {
	this := VcenterVmGuestCustomizationSetSpec{}
	return &this
}

// NewVcenterVmGuestCustomizationSetSpecWithDefaults instantiates a new VcenterVmGuestCustomizationSetSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterVmGuestCustomizationSetSpecWithDefaults() *VcenterVmGuestCustomizationSetSpec {
	this := VcenterVmGuestCustomizationSetSpec{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VcenterVmGuestCustomizationSetSpec) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmGuestCustomizationSetSpec) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VcenterVmGuestCustomizationSetSpec) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VcenterVmGuestCustomizationSetSpec) SetName(v string) {
	o.Name = &v
}

// GetSpec returns the Spec field value if set, zero value otherwise.
func (o *VcenterVmGuestCustomizationSetSpec) GetSpec() VcenterGuestCustomizationSpec {
	if o == nil || o.Spec == nil {
		var ret VcenterGuestCustomizationSpec
		return ret
	}
	return *o.Spec
}

// GetSpecOk returns a tuple with the Spec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmGuestCustomizationSetSpec) GetSpecOk() (*VcenterGuestCustomizationSpec, bool) {
	if o == nil || o.Spec == nil {
		return nil, false
	}
	return o.Spec, true
}

// HasSpec returns a boolean if a field has been set.
func (o *VcenterVmGuestCustomizationSetSpec) HasSpec() bool {
	if o != nil && o.Spec != nil {
		return true
	}

	return false
}

// SetSpec gets a reference to the given VcenterGuestCustomizationSpec and assigns it to the Spec field.
func (o *VcenterVmGuestCustomizationSetSpec) SetSpec(v VcenterGuestCustomizationSpec) {
	o.Spec = &v
}

func (o VcenterVmGuestCustomizationSetSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Spec != nil {
		toSerialize["spec"] = o.Spec
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterVmGuestCustomizationSetSpec struct {
	value *VcenterVmGuestCustomizationSetSpec
	isSet bool
}

func (v NullableVcenterVmGuestCustomizationSetSpec) Get() *VcenterVmGuestCustomizationSetSpec {
	return v.value
}

func (v *NullableVcenterVmGuestCustomizationSetSpec) Set(val *VcenterVmGuestCustomizationSetSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterVmGuestCustomizationSetSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterVmGuestCustomizationSetSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterVmGuestCustomizationSetSpec(val *VcenterVmGuestCustomizationSetSpec) *NullableVcenterVmGuestCustomizationSetSpec {
	return &NullableVcenterVmGuestCustomizationSetSpec{value: val, isSet: true}
}

func (v NullableVcenterVmGuestCustomizationSetSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterVmGuestCustomizationSetSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


