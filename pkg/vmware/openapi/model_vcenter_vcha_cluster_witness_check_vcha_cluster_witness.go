/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterVchaClusterWitnessCheckVchaClusterWitness struct for VcenterVchaClusterWitnessCheckVchaClusterWitness
type VcenterVchaClusterWitnessCheckVchaClusterWitness struct {
	Spec *VcenterVchaClusterWitnessCheckSpec `json:"spec,omitempty"`
}

// NewVcenterVchaClusterWitnessCheckVchaClusterWitness instantiates a new VcenterVchaClusterWitnessCheckVchaClusterWitness object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterVchaClusterWitnessCheckVchaClusterWitness() *VcenterVchaClusterWitnessCheckVchaClusterWitness {
	this := VcenterVchaClusterWitnessCheckVchaClusterWitness{}
	return &this
}

// NewVcenterVchaClusterWitnessCheckVchaClusterWitnessWithDefaults instantiates a new VcenterVchaClusterWitnessCheckVchaClusterWitness object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterVchaClusterWitnessCheckVchaClusterWitnessWithDefaults() *VcenterVchaClusterWitnessCheckVchaClusterWitness {
	this := VcenterVchaClusterWitnessCheckVchaClusterWitness{}
	return &this
}

// GetSpec returns the Spec field value if set, zero value otherwise.
func (o *VcenterVchaClusterWitnessCheckVchaClusterWitness) GetSpec() VcenterVchaClusterWitnessCheckSpec {
	if o == nil || o.Spec == nil {
		var ret VcenterVchaClusterWitnessCheckSpec
		return ret
	}
	return *o.Spec
}

// GetSpecOk returns a tuple with the Spec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVchaClusterWitnessCheckVchaClusterWitness) GetSpecOk() (*VcenterVchaClusterWitnessCheckSpec, bool) {
	if o == nil || o.Spec == nil {
		return nil, false
	}
	return o.Spec, true
}

// HasSpec returns a boolean if a field has been set.
func (o *VcenterVchaClusterWitnessCheckVchaClusterWitness) HasSpec() bool {
	if o != nil && o.Spec != nil {
		return true
	}

	return false
}

// SetSpec gets a reference to the given VcenterVchaClusterWitnessCheckSpec and assigns it to the Spec field.
func (o *VcenterVchaClusterWitnessCheckVchaClusterWitness) SetSpec(v VcenterVchaClusterWitnessCheckSpec) {
	o.Spec = &v
}

func (o VcenterVchaClusterWitnessCheckVchaClusterWitness) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Spec != nil {
		toSerialize["spec"] = o.Spec
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterVchaClusterWitnessCheckVchaClusterWitness struct {
	value *VcenterVchaClusterWitnessCheckVchaClusterWitness
	isSet bool
}

func (v NullableVcenterVchaClusterWitnessCheckVchaClusterWitness) Get() *VcenterVchaClusterWitnessCheckVchaClusterWitness {
	return v.value
}

func (v *NullableVcenterVchaClusterWitnessCheckVchaClusterWitness) Set(val *VcenterVchaClusterWitnessCheckVchaClusterWitness) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterVchaClusterWitnessCheckVchaClusterWitness) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterVchaClusterWitnessCheckVchaClusterWitness) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterVchaClusterWitnessCheckVchaClusterWitness(val *VcenterVchaClusterWitnessCheckVchaClusterWitness) *NullableVcenterVchaClusterWitnessCheckVchaClusterWitness {
	return &NullableVcenterVchaClusterWitnessCheckVchaClusterWitness{value: val, isSet: true}
}

func (v NullableVcenterVchaClusterWitnessCheckVchaClusterWitness) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterVchaClusterWitnessCheckVchaClusterWitness) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


