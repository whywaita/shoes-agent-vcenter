/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicy struct for VcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicy
type VcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicy struct {
	Type VcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicyType `json:"type"`
	// Identifier of the storage policy to use.
	Policy *string `json:"policy,omitempty"`
}

// NewVcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicy instantiates a new VcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicy(type_ VcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicyType) *VcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicy {
	this := VcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicy{}
	this.Type = type_
	return &this
}

// NewVcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicyWithDefaults instantiates a new VcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicyWithDefaults() *VcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicy {
	this := VcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicy{}
	return &this
}

// GetType returns the Type field value
func (o *VcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicy) GetType() VcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicyType {
	if o == nil {
		var ret VcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicyType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *VcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicy) GetTypeOk() (*VcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicyType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *VcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicy) SetType(v VcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicyType) {
	o.Type = v
}

// GetPolicy returns the Policy field value if set, zero value otherwise.
func (o *VcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicy) GetPolicy() string {
	if o == nil || o.Policy == nil {
		var ret string
		return ret
	}
	return *o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicy) GetPolicyOk() (*string, bool) {
	if o == nil || o.Policy == nil {
		return nil, false
	}
	return o.Policy, true
}

// HasPolicy returns a boolean if a field has been set.
func (o *VcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicy) HasPolicy() bool {
	if o != nil && o.Policy != nil {
		return true
	}

	return false
}

// SetPolicy gets a reference to the given string and assigns it to the Policy field.
func (o *VcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicy) SetPolicy(v string) {
	o.Policy = &v
}

func (o VcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if o.Policy != nil {
		toSerialize["policy"] = o.Policy
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicy struct {
	value *VcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicy
	isSet bool
}

func (v NullableVcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicy) Get() *VcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicy {
	return v.value
}

func (v *NullableVcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicy) Set(val *VcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicy(val *VcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicy) *NullableVcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicy {
	return &NullableVcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicy{value: val, isSet: true}
}

func (v NullableVcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterVmTemplateLibraryItemsDeploySpecDiskStoragePolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


