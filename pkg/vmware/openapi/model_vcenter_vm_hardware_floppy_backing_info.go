/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterVmHardwareFloppyBackingInfo struct for VcenterVmHardwareFloppyBackingInfo
type VcenterVmHardwareFloppyBackingInfo struct {
	Type VcenterVmHardwareFloppyBackingType `json:"type"`
	// Path of the image file backing the virtual floppy drive. This field is optional and it is only relevant when the value of Floppy.BackingInfo.type is IMAGE_FILE.
	ImageFile *string `json:"image_file,omitempty"`
	// Name of the host device backing the virtual floppy drive.    This field will be unset if Floppy.BackingInfo.auto-detect is true and the virtual floppy drive is not connected or no suitable device is available on the host.
	HostDevice *string `json:"host_device,omitempty"`
	// Flag indicating whether the virtual floppy drive is configured to automatically detect a suitable host device. This field is optional and it is only relevant when the value of Floppy.BackingInfo.type is HOST_DEVICE.
	AutoDetect *bool `json:"auto_detect,omitempty"`
}

// NewVcenterVmHardwareFloppyBackingInfo instantiates a new VcenterVmHardwareFloppyBackingInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterVmHardwareFloppyBackingInfo(type_ VcenterVmHardwareFloppyBackingType) *VcenterVmHardwareFloppyBackingInfo {
	this := VcenterVmHardwareFloppyBackingInfo{}
	this.Type = type_
	return &this
}

// NewVcenterVmHardwareFloppyBackingInfoWithDefaults instantiates a new VcenterVmHardwareFloppyBackingInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterVmHardwareFloppyBackingInfoWithDefaults() *VcenterVmHardwareFloppyBackingInfo {
	this := VcenterVmHardwareFloppyBackingInfo{}
	return &this
}

// GetType returns the Type field value
func (o *VcenterVmHardwareFloppyBackingInfo) GetType() VcenterVmHardwareFloppyBackingType {
	if o == nil {
		var ret VcenterVmHardwareFloppyBackingType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *VcenterVmHardwareFloppyBackingInfo) GetTypeOk() (*VcenterVmHardwareFloppyBackingType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *VcenterVmHardwareFloppyBackingInfo) SetType(v VcenterVmHardwareFloppyBackingType) {
	o.Type = v
}

// GetImageFile returns the ImageFile field value if set, zero value otherwise.
func (o *VcenterVmHardwareFloppyBackingInfo) GetImageFile() string {
	if o == nil || o.ImageFile == nil {
		var ret string
		return ret
	}
	return *o.ImageFile
}

// GetImageFileOk returns a tuple with the ImageFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmHardwareFloppyBackingInfo) GetImageFileOk() (*string, bool) {
	if o == nil || o.ImageFile == nil {
		return nil, false
	}
	return o.ImageFile, true
}

// HasImageFile returns a boolean if a field has been set.
func (o *VcenterVmHardwareFloppyBackingInfo) HasImageFile() bool {
	if o != nil && o.ImageFile != nil {
		return true
	}

	return false
}

// SetImageFile gets a reference to the given string and assigns it to the ImageFile field.
func (o *VcenterVmHardwareFloppyBackingInfo) SetImageFile(v string) {
	o.ImageFile = &v
}

// GetHostDevice returns the HostDevice field value if set, zero value otherwise.
func (o *VcenterVmHardwareFloppyBackingInfo) GetHostDevice() string {
	if o == nil || o.HostDevice == nil {
		var ret string
		return ret
	}
	return *o.HostDevice
}

// GetHostDeviceOk returns a tuple with the HostDevice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmHardwareFloppyBackingInfo) GetHostDeviceOk() (*string, bool) {
	if o == nil || o.HostDevice == nil {
		return nil, false
	}
	return o.HostDevice, true
}

// HasHostDevice returns a boolean if a field has been set.
func (o *VcenterVmHardwareFloppyBackingInfo) HasHostDevice() bool {
	if o != nil && o.HostDevice != nil {
		return true
	}

	return false
}

// SetHostDevice gets a reference to the given string and assigns it to the HostDevice field.
func (o *VcenterVmHardwareFloppyBackingInfo) SetHostDevice(v string) {
	o.HostDevice = &v
}

// GetAutoDetect returns the AutoDetect field value if set, zero value otherwise.
func (o *VcenterVmHardwareFloppyBackingInfo) GetAutoDetect() bool {
	if o == nil || o.AutoDetect == nil {
		var ret bool
		return ret
	}
	return *o.AutoDetect
}

// GetAutoDetectOk returns a tuple with the AutoDetect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmHardwareFloppyBackingInfo) GetAutoDetectOk() (*bool, bool) {
	if o == nil || o.AutoDetect == nil {
		return nil, false
	}
	return o.AutoDetect, true
}

// HasAutoDetect returns a boolean if a field has been set.
func (o *VcenterVmHardwareFloppyBackingInfo) HasAutoDetect() bool {
	if o != nil && o.AutoDetect != nil {
		return true
	}

	return false
}

// SetAutoDetect gets a reference to the given bool and assigns it to the AutoDetect field.
func (o *VcenterVmHardwareFloppyBackingInfo) SetAutoDetect(v bool) {
	o.AutoDetect = &v
}

func (o VcenterVmHardwareFloppyBackingInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if o.ImageFile != nil {
		toSerialize["image_file"] = o.ImageFile
	}
	if o.HostDevice != nil {
		toSerialize["host_device"] = o.HostDevice
	}
	if o.AutoDetect != nil {
		toSerialize["auto_detect"] = o.AutoDetect
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterVmHardwareFloppyBackingInfo struct {
	value *VcenterVmHardwareFloppyBackingInfo
	isSet bool
}

func (v NullableVcenterVmHardwareFloppyBackingInfo) Get() *VcenterVmHardwareFloppyBackingInfo {
	return v.value
}

func (v *NullableVcenterVmHardwareFloppyBackingInfo) Set(val *VcenterVmHardwareFloppyBackingInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterVmHardwareFloppyBackingInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterVmHardwareFloppyBackingInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterVmHardwareFloppyBackingInfo(val *VcenterVmHardwareFloppyBackingInfo) *NullableVcenterVmHardwareFloppyBackingInfo {
	return &NullableVcenterVmHardwareFloppyBackingInfo{value: val, isSet: true}
}

func (v NullableVcenterVmHardwareFloppyBackingInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterVmHardwareFloppyBackingInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


