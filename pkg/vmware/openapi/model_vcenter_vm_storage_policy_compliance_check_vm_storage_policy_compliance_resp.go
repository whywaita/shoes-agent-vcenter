/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterVmStoragePolicyComplianceCheckVmStoragePolicyComplianceResp struct for VcenterVmStoragePolicyComplianceCheckVmStoragePolicyComplianceResp
type VcenterVmStoragePolicyComplianceCheckVmStoragePolicyComplianceResp struct {
	Value VcenterVmStoragePolicyComplianceInfo `json:"value"`
}

// NewVcenterVmStoragePolicyComplianceCheckVmStoragePolicyComplianceResp instantiates a new VcenterVmStoragePolicyComplianceCheckVmStoragePolicyComplianceResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterVmStoragePolicyComplianceCheckVmStoragePolicyComplianceResp(value VcenterVmStoragePolicyComplianceInfo) *VcenterVmStoragePolicyComplianceCheckVmStoragePolicyComplianceResp {
	this := VcenterVmStoragePolicyComplianceCheckVmStoragePolicyComplianceResp{}
	this.Value = value
	return &this
}

// NewVcenterVmStoragePolicyComplianceCheckVmStoragePolicyComplianceRespWithDefaults instantiates a new VcenterVmStoragePolicyComplianceCheckVmStoragePolicyComplianceResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterVmStoragePolicyComplianceCheckVmStoragePolicyComplianceRespWithDefaults() *VcenterVmStoragePolicyComplianceCheckVmStoragePolicyComplianceResp {
	this := VcenterVmStoragePolicyComplianceCheckVmStoragePolicyComplianceResp{}
	return &this
}

// GetValue returns the Value field value
func (o *VcenterVmStoragePolicyComplianceCheckVmStoragePolicyComplianceResp) GetValue() VcenterVmStoragePolicyComplianceInfo {
	if o == nil {
		var ret VcenterVmStoragePolicyComplianceInfo
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *VcenterVmStoragePolicyComplianceCheckVmStoragePolicyComplianceResp) GetValueOk() (*VcenterVmStoragePolicyComplianceInfo, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *VcenterVmStoragePolicyComplianceCheckVmStoragePolicyComplianceResp) SetValue(v VcenterVmStoragePolicyComplianceInfo) {
	o.Value = v
}

func (o VcenterVmStoragePolicyComplianceCheckVmStoragePolicyComplianceResp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterVmStoragePolicyComplianceCheckVmStoragePolicyComplianceResp struct {
	value *VcenterVmStoragePolicyComplianceCheckVmStoragePolicyComplianceResp
	isSet bool
}

func (v NullableVcenterVmStoragePolicyComplianceCheckVmStoragePolicyComplianceResp) Get() *VcenterVmStoragePolicyComplianceCheckVmStoragePolicyComplianceResp {
	return v.value
}

func (v *NullableVcenterVmStoragePolicyComplianceCheckVmStoragePolicyComplianceResp) Set(val *VcenterVmStoragePolicyComplianceCheckVmStoragePolicyComplianceResp) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterVmStoragePolicyComplianceCheckVmStoragePolicyComplianceResp) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterVmStoragePolicyComplianceCheckVmStoragePolicyComplianceResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterVmStoragePolicyComplianceCheckVmStoragePolicyComplianceResp(val *VcenterVmStoragePolicyComplianceCheckVmStoragePolicyComplianceResp) *NullableVcenterVmStoragePolicyComplianceCheckVmStoragePolicyComplianceResp {
	return &NullableVcenterVmStoragePolicyComplianceCheckVmStoragePolicyComplianceResp{value: val, isSet: true}
}

func (v NullableVcenterVmStoragePolicyComplianceCheckVmStoragePolicyComplianceResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterVmStoragePolicyComplianceCheckVmStoragePolicyComplianceResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


