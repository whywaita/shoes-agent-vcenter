/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterVmTemplateLibraryItemsEthernetUpdateSpec struct for VcenterVmTemplateLibraryItemsEthernetUpdateSpec
type VcenterVmTemplateLibraryItemsEthernetUpdateSpec struct {
	// Identifier of the network backing the virtual Ethernet adapter.
	Network *string `json:"network,omitempty"`
}

// NewVcenterVmTemplateLibraryItemsEthernetUpdateSpec instantiates a new VcenterVmTemplateLibraryItemsEthernetUpdateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterVmTemplateLibraryItemsEthernetUpdateSpec() *VcenterVmTemplateLibraryItemsEthernetUpdateSpec {
	this := VcenterVmTemplateLibraryItemsEthernetUpdateSpec{}
	return &this
}

// NewVcenterVmTemplateLibraryItemsEthernetUpdateSpecWithDefaults instantiates a new VcenterVmTemplateLibraryItemsEthernetUpdateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterVmTemplateLibraryItemsEthernetUpdateSpecWithDefaults() *VcenterVmTemplateLibraryItemsEthernetUpdateSpec {
	this := VcenterVmTemplateLibraryItemsEthernetUpdateSpec{}
	return &this
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *VcenterVmTemplateLibraryItemsEthernetUpdateSpec) GetNetwork() string {
	if o == nil || o.Network == nil {
		var ret string
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmTemplateLibraryItemsEthernetUpdateSpec) GetNetworkOk() (*string, bool) {
	if o == nil || o.Network == nil {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *VcenterVmTemplateLibraryItemsEthernetUpdateSpec) HasNetwork() bool {
	if o != nil && o.Network != nil {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given string and assigns it to the Network field.
func (o *VcenterVmTemplateLibraryItemsEthernetUpdateSpec) SetNetwork(v string) {
	o.Network = &v
}

func (o VcenterVmTemplateLibraryItemsEthernetUpdateSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Network != nil {
		toSerialize["network"] = o.Network
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterVmTemplateLibraryItemsEthernetUpdateSpec struct {
	value *VcenterVmTemplateLibraryItemsEthernetUpdateSpec
	isSet bool
}

func (v NullableVcenterVmTemplateLibraryItemsEthernetUpdateSpec) Get() *VcenterVmTemplateLibraryItemsEthernetUpdateSpec {
	return v.value
}

func (v *NullableVcenterVmTemplateLibraryItemsEthernetUpdateSpec) Set(val *VcenterVmTemplateLibraryItemsEthernetUpdateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterVmTemplateLibraryItemsEthernetUpdateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterVmTemplateLibraryItemsEthernetUpdateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterVmTemplateLibraryItemsEthernetUpdateSpec(val *VcenterVmTemplateLibraryItemsEthernetUpdateSpec) *NullableVcenterVmTemplateLibraryItemsEthernetUpdateSpec {
	return &NullableVcenterVmTemplateLibraryItemsEthernetUpdateSpec{value: val, isSet: true}
}

func (v NullableVcenterVmTemplateLibraryItemsEthernetUpdateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterVmTemplateLibraryItemsEthernetUpdateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


