/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// VcenterVmGuestFilesystemTransfersFileCreationAttributes struct for VcenterVmGuestFilesystemTransfersFileCreationAttributes
type VcenterVmGuestFilesystemTransfersFileCreationAttributes struct {
	// The size in bytes of the file to be transferred into the guest.
	Size int64 `json:"size"`
	// Whether an existing file should be overwritten. If unset any existing file will not be overwritten.
	Overwrite *bool `json:"overwrite,omitempty"`
	// The date and time the file was last modified. If unset the value will be the time when the file is transferred into the guest.
	LastModified *time.Time `json:"last_modified,omitempty"`
	// The date and time the file was last accessed. If unset the value will be the time when the file is transferred into the guest.
	LastAccessed *time.Time `json:"last_accessed,omitempty"`
	Windows *VcenterVmGuestFilesystemTransfersWindowsFileAttributesCreateSpec `json:"windows,omitempty"`
	Posix *VcenterVmGuestFilesystemTransfersPosixFileAttributesCreateSpec `json:"posix,omitempty"`
}

// NewVcenterVmGuestFilesystemTransfersFileCreationAttributes instantiates a new VcenterVmGuestFilesystemTransfersFileCreationAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterVmGuestFilesystemTransfersFileCreationAttributes(size int64) *VcenterVmGuestFilesystemTransfersFileCreationAttributes {
	this := VcenterVmGuestFilesystemTransfersFileCreationAttributes{}
	this.Size = size
	return &this
}

// NewVcenterVmGuestFilesystemTransfersFileCreationAttributesWithDefaults instantiates a new VcenterVmGuestFilesystemTransfersFileCreationAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterVmGuestFilesystemTransfersFileCreationAttributesWithDefaults() *VcenterVmGuestFilesystemTransfersFileCreationAttributes {
	this := VcenterVmGuestFilesystemTransfersFileCreationAttributes{}
	return &this
}

// GetSize returns the Size field value
func (o *VcenterVmGuestFilesystemTransfersFileCreationAttributes) GetSize() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *VcenterVmGuestFilesystemTransfersFileCreationAttributes) GetSizeOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *VcenterVmGuestFilesystemTransfersFileCreationAttributes) SetSize(v int64) {
	o.Size = v
}

// GetOverwrite returns the Overwrite field value if set, zero value otherwise.
func (o *VcenterVmGuestFilesystemTransfersFileCreationAttributes) GetOverwrite() bool {
	if o == nil || o.Overwrite == nil {
		var ret bool
		return ret
	}
	return *o.Overwrite
}

// GetOverwriteOk returns a tuple with the Overwrite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmGuestFilesystemTransfersFileCreationAttributes) GetOverwriteOk() (*bool, bool) {
	if o == nil || o.Overwrite == nil {
		return nil, false
	}
	return o.Overwrite, true
}

// HasOverwrite returns a boolean if a field has been set.
func (o *VcenterVmGuestFilesystemTransfersFileCreationAttributes) HasOverwrite() bool {
	if o != nil && o.Overwrite != nil {
		return true
	}

	return false
}

// SetOverwrite gets a reference to the given bool and assigns it to the Overwrite field.
func (o *VcenterVmGuestFilesystemTransfersFileCreationAttributes) SetOverwrite(v bool) {
	o.Overwrite = &v
}

// GetLastModified returns the LastModified field value if set, zero value otherwise.
func (o *VcenterVmGuestFilesystemTransfersFileCreationAttributes) GetLastModified() time.Time {
	if o == nil || o.LastModified == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmGuestFilesystemTransfersFileCreationAttributes) GetLastModifiedOk() (*time.Time, bool) {
	if o == nil || o.LastModified == nil {
		return nil, false
	}
	return o.LastModified, true
}

// HasLastModified returns a boolean if a field has been set.
func (o *VcenterVmGuestFilesystemTransfersFileCreationAttributes) HasLastModified() bool {
	if o != nil && o.LastModified != nil {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given time.Time and assigns it to the LastModified field.
func (o *VcenterVmGuestFilesystemTransfersFileCreationAttributes) SetLastModified(v time.Time) {
	o.LastModified = &v
}

// GetLastAccessed returns the LastAccessed field value if set, zero value otherwise.
func (o *VcenterVmGuestFilesystemTransfersFileCreationAttributes) GetLastAccessed() time.Time {
	if o == nil || o.LastAccessed == nil {
		var ret time.Time
		return ret
	}
	return *o.LastAccessed
}

// GetLastAccessedOk returns a tuple with the LastAccessed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmGuestFilesystemTransfersFileCreationAttributes) GetLastAccessedOk() (*time.Time, bool) {
	if o == nil || o.LastAccessed == nil {
		return nil, false
	}
	return o.LastAccessed, true
}

// HasLastAccessed returns a boolean if a field has been set.
func (o *VcenterVmGuestFilesystemTransfersFileCreationAttributes) HasLastAccessed() bool {
	if o != nil && o.LastAccessed != nil {
		return true
	}

	return false
}

// SetLastAccessed gets a reference to the given time.Time and assigns it to the LastAccessed field.
func (o *VcenterVmGuestFilesystemTransfersFileCreationAttributes) SetLastAccessed(v time.Time) {
	o.LastAccessed = &v
}

// GetWindows returns the Windows field value if set, zero value otherwise.
func (o *VcenterVmGuestFilesystemTransfersFileCreationAttributes) GetWindows() VcenterVmGuestFilesystemTransfersWindowsFileAttributesCreateSpec {
	if o == nil || o.Windows == nil {
		var ret VcenterVmGuestFilesystemTransfersWindowsFileAttributesCreateSpec
		return ret
	}
	return *o.Windows
}

// GetWindowsOk returns a tuple with the Windows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmGuestFilesystemTransfersFileCreationAttributes) GetWindowsOk() (*VcenterVmGuestFilesystemTransfersWindowsFileAttributesCreateSpec, bool) {
	if o == nil || o.Windows == nil {
		return nil, false
	}
	return o.Windows, true
}

// HasWindows returns a boolean if a field has been set.
func (o *VcenterVmGuestFilesystemTransfersFileCreationAttributes) HasWindows() bool {
	if o != nil && o.Windows != nil {
		return true
	}

	return false
}

// SetWindows gets a reference to the given VcenterVmGuestFilesystemTransfersWindowsFileAttributesCreateSpec and assigns it to the Windows field.
func (o *VcenterVmGuestFilesystemTransfersFileCreationAttributes) SetWindows(v VcenterVmGuestFilesystemTransfersWindowsFileAttributesCreateSpec) {
	o.Windows = &v
}

// GetPosix returns the Posix field value if set, zero value otherwise.
func (o *VcenterVmGuestFilesystemTransfersFileCreationAttributes) GetPosix() VcenterVmGuestFilesystemTransfersPosixFileAttributesCreateSpec {
	if o == nil || o.Posix == nil {
		var ret VcenterVmGuestFilesystemTransfersPosixFileAttributesCreateSpec
		return ret
	}
	return *o.Posix
}

// GetPosixOk returns a tuple with the Posix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmGuestFilesystemTransfersFileCreationAttributes) GetPosixOk() (*VcenterVmGuestFilesystemTransfersPosixFileAttributesCreateSpec, bool) {
	if o == nil || o.Posix == nil {
		return nil, false
	}
	return o.Posix, true
}

// HasPosix returns a boolean if a field has been set.
func (o *VcenterVmGuestFilesystemTransfersFileCreationAttributes) HasPosix() bool {
	if o != nil && o.Posix != nil {
		return true
	}

	return false
}

// SetPosix gets a reference to the given VcenterVmGuestFilesystemTransfersPosixFileAttributesCreateSpec and assigns it to the Posix field.
func (o *VcenterVmGuestFilesystemTransfersFileCreationAttributes) SetPosix(v VcenterVmGuestFilesystemTransfersPosixFileAttributesCreateSpec) {
	o.Posix = &v
}

func (o VcenterVmGuestFilesystemTransfersFileCreationAttributes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["size"] = o.Size
	}
	if o.Overwrite != nil {
		toSerialize["overwrite"] = o.Overwrite
	}
	if o.LastModified != nil {
		toSerialize["last_modified"] = o.LastModified
	}
	if o.LastAccessed != nil {
		toSerialize["last_accessed"] = o.LastAccessed
	}
	if o.Windows != nil {
		toSerialize["windows"] = o.Windows
	}
	if o.Posix != nil {
		toSerialize["posix"] = o.Posix
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterVmGuestFilesystemTransfersFileCreationAttributes struct {
	value *VcenterVmGuestFilesystemTransfersFileCreationAttributes
	isSet bool
}

func (v NullableVcenterVmGuestFilesystemTransfersFileCreationAttributes) Get() *VcenterVmGuestFilesystemTransfersFileCreationAttributes {
	return v.value
}

func (v *NullableVcenterVmGuestFilesystemTransfersFileCreationAttributes) Set(val *VcenterVmGuestFilesystemTransfersFileCreationAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterVmGuestFilesystemTransfersFileCreationAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterVmGuestFilesystemTransfersFileCreationAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterVmGuestFilesystemTransfersFileCreationAttributes(val *VcenterVmGuestFilesystemTransfersFileCreationAttributes) *NullableVcenterVmGuestFilesystemTransfersFileCreationAttributes {
	return &NullableVcenterVmGuestFilesystemTransfersFileCreationAttributes{value: val, isSet: true}
}

func (v NullableVcenterVmGuestFilesystemTransfersFileCreationAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterVmGuestFilesystemTransfersFileCreationAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


