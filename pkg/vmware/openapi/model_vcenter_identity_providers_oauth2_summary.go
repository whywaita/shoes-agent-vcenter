/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterIdentityProvidersOauth2Summary struct for VcenterIdentityProvidersOauth2Summary
type VcenterIdentityProvidersOauth2Summary struct {
	// Authentication/authorization endpoint of the provider
	AuthEndpoint string `json:"auth_endpoint"`
	// Token endpoint of the provider
	TokenEndpoint string `json:"token_endpoint"`
	// Client identifier to connect to the provider
	ClientId string `json:"client_id"`
	// The authentication data used as part of request header to acquire or refresh an OAuth2 token. The data format depends on the authentication method used. Example of basic authentication format: Authorization: Basic [base64Encode(clientId + \":\" + secret)]
	AuthenticationHeader string `json:"authentication_header"`
	//  key/value pairs that are to be appended to the authEndpoint request.   How to append to authEndpoint request:  If the map is not empty, a \"?\" is added to the endpoint URL, and combination of each k and each string in the v is added with an \"&\" delimiter. Details:    - If the value contains only one string, then the key is added with \"k=v\".    - If the value is an empty list, then the key is added without a \"=v\".    - If the value contains multiple strings, then the key is repeated in the query-string for each string in the value. 
	AuthQueryParams []VcenterIdentityProvidersCreateSpecAuthQueryParams `json:"auth_query_params"`
}

// NewVcenterIdentityProvidersOauth2Summary instantiates a new VcenterIdentityProvidersOauth2Summary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterIdentityProvidersOauth2Summary(authEndpoint string, tokenEndpoint string, clientId string, authenticationHeader string, authQueryParams []VcenterIdentityProvidersCreateSpecAuthQueryParams) *VcenterIdentityProvidersOauth2Summary {
	this := VcenterIdentityProvidersOauth2Summary{}
	this.AuthEndpoint = authEndpoint
	this.TokenEndpoint = tokenEndpoint
	this.ClientId = clientId
	this.AuthenticationHeader = authenticationHeader
	this.AuthQueryParams = authQueryParams
	return &this
}

// NewVcenterIdentityProvidersOauth2SummaryWithDefaults instantiates a new VcenterIdentityProvidersOauth2Summary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterIdentityProvidersOauth2SummaryWithDefaults() *VcenterIdentityProvidersOauth2Summary {
	this := VcenterIdentityProvidersOauth2Summary{}
	return &this
}

// GetAuthEndpoint returns the AuthEndpoint field value
func (o *VcenterIdentityProvidersOauth2Summary) GetAuthEndpoint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthEndpoint
}

// GetAuthEndpointOk returns a tuple with the AuthEndpoint field value
// and a boolean to check if the value has been set.
func (o *VcenterIdentityProvidersOauth2Summary) GetAuthEndpointOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AuthEndpoint, true
}

// SetAuthEndpoint sets field value
func (o *VcenterIdentityProvidersOauth2Summary) SetAuthEndpoint(v string) {
	o.AuthEndpoint = v
}

// GetTokenEndpoint returns the TokenEndpoint field value
func (o *VcenterIdentityProvidersOauth2Summary) GetTokenEndpoint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenEndpoint
}

// GetTokenEndpointOk returns a tuple with the TokenEndpoint field value
// and a boolean to check if the value has been set.
func (o *VcenterIdentityProvidersOauth2Summary) GetTokenEndpointOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TokenEndpoint, true
}

// SetTokenEndpoint sets field value
func (o *VcenterIdentityProvidersOauth2Summary) SetTokenEndpoint(v string) {
	o.TokenEndpoint = v
}

// GetClientId returns the ClientId field value
func (o *VcenterIdentityProvidersOauth2Summary) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *VcenterIdentityProvidersOauth2Summary) GetClientIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *VcenterIdentityProvidersOauth2Summary) SetClientId(v string) {
	o.ClientId = v
}

// GetAuthenticationHeader returns the AuthenticationHeader field value
func (o *VcenterIdentityProvidersOauth2Summary) GetAuthenticationHeader() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthenticationHeader
}

// GetAuthenticationHeaderOk returns a tuple with the AuthenticationHeader field value
// and a boolean to check if the value has been set.
func (o *VcenterIdentityProvidersOauth2Summary) GetAuthenticationHeaderOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AuthenticationHeader, true
}

// SetAuthenticationHeader sets field value
func (o *VcenterIdentityProvidersOauth2Summary) SetAuthenticationHeader(v string) {
	o.AuthenticationHeader = v
}

// GetAuthQueryParams returns the AuthQueryParams field value
func (o *VcenterIdentityProvidersOauth2Summary) GetAuthQueryParams() []VcenterIdentityProvidersCreateSpecAuthQueryParams {
	if o == nil {
		var ret []VcenterIdentityProvidersCreateSpecAuthQueryParams
		return ret
	}

	return o.AuthQueryParams
}

// GetAuthQueryParamsOk returns a tuple with the AuthQueryParams field value
// and a boolean to check if the value has been set.
func (o *VcenterIdentityProvidersOauth2Summary) GetAuthQueryParamsOk() (*[]VcenterIdentityProvidersCreateSpecAuthQueryParams, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AuthQueryParams, true
}

// SetAuthQueryParams sets field value
func (o *VcenterIdentityProvidersOauth2Summary) SetAuthQueryParams(v []VcenterIdentityProvidersCreateSpecAuthQueryParams) {
	o.AuthQueryParams = v
}

func (o VcenterIdentityProvidersOauth2Summary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["auth_endpoint"] = o.AuthEndpoint
	}
	if true {
		toSerialize["token_endpoint"] = o.TokenEndpoint
	}
	if true {
		toSerialize["client_id"] = o.ClientId
	}
	if true {
		toSerialize["authentication_header"] = o.AuthenticationHeader
	}
	if true {
		toSerialize["auth_query_params"] = o.AuthQueryParams
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterIdentityProvidersOauth2Summary struct {
	value *VcenterIdentityProvidersOauth2Summary
	isSet bool
}

func (v NullableVcenterIdentityProvidersOauth2Summary) Get() *VcenterIdentityProvidersOauth2Summary {
	return v.value
}

func (v *NullableVcenterIdentityProvidersOauth2Summary) Set(val *VcenterIdentityProvidersOauth2Summary) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterIdentityProvidersOauth2Summary) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterIdentityProvidersOauth2Summary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterIdentityProvidersOauth2Summary(val *VcenterIdentityProvidersOauth2Summary) *NullableVcenterIdentityProvidersOauth2Summary {
	return &NullableVcenterIdentityProvidersOauth2Summary{value: val, isSet: true}
}

func (v NullableVcenterIdentityProvidersOauth2Summary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterIdentityProvidersOauth2Summary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


