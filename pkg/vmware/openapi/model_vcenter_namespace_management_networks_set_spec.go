/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterNamespaceManagementNetworksSetSpec struct for VcenterNamespaceManagementNetworksSetSpec
type VcenterNamespaceManagementNetworksSetSpec struct {
	NetworkProvider VcenterNamespaceManagementClustersNetworkProvider `json:"network_provider"`
	VsphereNetwork *VcenterNamespaceManagementNetworksVsphereDVPGNetworkSetSpec `json:"vsphere_network,omitempty"`
}

// NewVcenterNamespaceManagementNetworksSetSpec instantiates a new VcenterNamespaceManagementNetworksSetSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterNamespaceManagementNetworksSetSpec(networkProvider VcenterNamespaceManagementClustersNetworkProvider) *VcenterNamespaceManagementNetworksSetSpec {
	this := VcenterNamespaceManagementNetworksSetSpec{}
	this.NetworkProvider = networkProvider
	return &this
}

// NewVcenterNamespaceManagementNetworksSetSpecWithDefaults instantiates a new VcenterNamespaceManagementNetworksSetSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterNamespaceManagementNetworksSetSpecWithDefaults() *VcenterNamespaceManagementNetworksSetSpec {
	this := VcenterNamespaceManagementNetworksSetSpec{}
	return &this
}

// GetNetworkProvider returns the NetworkProvider field value
func (o *VcenterNamespaceManagementNetworksSetSpec) GetNetworkProvider() VcenterNamespaceManagementClustersNetworkProvider {
	if o == nil {
		var ret VcenterNamespaceManagementClustersNetworkProvider
		return ret
	}

	return o.NetworkProvider
}

// GetNetworkProviderOk returns a tuple with the NetworkProvider field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespaceManagementNetworksSetSpec) GetNetworkProviderOk() (*VcenterNamespaceManagementClustersNetworkProvider, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NetworkProvider, true
}

// SetNetworkProvider sets field value
func (o *VcenterNamespaceManagementNetworksSetSpec) SetNetworkProvider(v VcenterNamespaceManagementClustersNetworkProvider) {
	o.NetworkProvider = v
}

// GetVsphereNetwork returns the VsphereNetwork field value if set, zero value otherwise.
func (o *VcenterNamespaceManagementNetworksSetSpec) GetVsphereNetwork() VcenterNamespaceManagementNetworksVsphereDVPGNetworkSetSpec {
	if o == nil || o.VsphereNetwork == nil {
		var ret VcenterNamespaceManagementNetworksVsphereDVPGNetworkSetSpec
		return ret
	}
	return *o.VsphereNetwork
}

// GetVsphereNetworkOk returns a tuple with the VsphereNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterNamespaceManagementNetworksSetSpec) GetVsphereNetworkOk() (*VcenterNamespaceManagementNetworksVsphereDVPGNetworkSetSpec, bool) {
	if o == nil || o.VsphereNetwork == nil {
		return nil, false
	}
	return o.VsphereNetwork, true
}

// HasVsphereNetwork returns a boolean if a field has been set.
func (o *VcenterNamespaceManagementNetworksSetSpec) HasVsphereNetwork() bool {
	if o != nil && o.VsphereNetwork != nil {
		return true
	}

	return false
}

// SetVsphereNetwork gets a reference to the given VcenterNamespaceManagementNetworksVsphereDVPGNetworkSetSpec and assigns it to the VsphereNetwork field.
func (o *VcenterNamespaceManagementNetworksSetSpec) SetVsphereNetwork(v VcenterNamespaceManagementNetworksVsphereDVPGNetworkSetSpec) {
	o.VsphereNetwork = &v
}

func (o VcenterNamespaceManagementNetworksSetSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["network_provider"] = o.NetworkProvider
	}
	if o.VsphereNetwork != nil {
		toSerialize["vsphere_network"] = o.VsphereNetwork
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterNamespaceManagementNetworksSetSpec struct {
	value *VcenterNamespaceManagementNetworksSetSpec
	isSet bool
}

func (v NullableVcenterNamespaceManagementNetworksSetSpec) Get() *VcenterNamespaceManagementNetworksSetSpec {
	return v.value
}

func (v *NullableVcenterNamespaceManagementNetworksSetSpec) Set(val *VcenterNamespaceManagementNetworksSetSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterNamespaceManagementNetworksSetSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterNamespaceManagementNetworksSetSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterNamespaceManagementNetworksSetSpec(val *VcenterNamespaceManagementNetworksSetSpec) *NullableVcenterNamespaceManagementNetworksSetSpec {
	return &NullableVcenterNamespaceManagementNetworksSetSpec{value: val, isSet: true}
}

func (v NullableVcenterNamespaceManagementNetworksSetSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterNamespaceManagementNetworksSetSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


