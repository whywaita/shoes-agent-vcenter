/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterVchaClusterDeploymentTypeInfo struct for VcenterVchaClusterDeploymentTypeInfo
type VcenterVchaClusterDeploymentTypeInfo struct {
	DeploymentType VcenterVchaClusterDeploymentTypeType `json:"deployment_type"`
}

// NewVcenterVchaClusterDeploymentTypeInfo instantiates a new VcenterVchaClusterDeploymentTypeInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterVchaClusterDeploymentTypeInfo(deploymentType VcenterVchaClusterDeploymentTypeType) *VcenterVchaClusterDeploymentTypeInfo {
	this := VcenterVchaClusterDeploymentTypeInfo{}
	this.DeploymentType = deploymentType
	return &this
}

// NewVcenterVchaClusterDeploymentTypeInfoWithDefaults instantiates a new VcenterVchaClusterDeploymentTypeInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterVchaClusterDeploymentTypeInfoWithDefaults() *VcenterVchaClusterDeploymentTypeInfo {
	this := VcenterVchaClusterDeploymentTypeInfo{}
	return &this
}

// GetDeploymentType returns the DeploymentType field value
func (o *VcenterVchaClusterDeploymentTypeInfo) GetDeploymentType() VcenterVchaClusterDeploymentTypeType {
	if o == nil {
		var ret VcenterVchaClusterDeploymentTypeType
		return ret
	}

	return o.DeploymentType
}

// GetDeploymentTypeOk returns a tuple with the DeploymentType field value
// and a boolean to check if the value has been set.
func (o *VcenterVchaClusterDeploymentTypeInfo) GetDeploymentTypeOk() (*VcenterVchaClusterDeploymentTypeType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DeploymentType, true
}

// SetDeploymentType sets field value
func (o *VcenterVchaClusterDeploymentTypeInfo) SetDeploymentType(v VcenterVchaClusterDeploymentTypeType) {
	o.DeploymentType = v
}

func (o VcenterVchaClusterDeploymentTypeInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["deployment_type"] = o.DeploymentType
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterVchaClusterDeploymentTypeInfo struct {
	value *VcenterVchaClusterDeploymentTypeInfo
	isSet bool
}

func (v NullableVcenterVchaClusterDeploymentTypeInfo) Get() *VcenterVchaClusterDeploymentTypeInfo {
	return v.value
}

func (v *NullableVcenterVchaClusterDeploymentTypeInfo) Set(val *VcenterVchaClusterDeploymentTypeInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterVchaClusterDeploymentTypeInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterVchaClusterDeploymentTypeInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterVchaClusterDeploymentTypeInfo(val *VcenterVchaClusterDeploymentTypeInfo) *NullableVcenterVchaClusterDeploymentTypeInfo {
	return &NullableVcenterVchaClusterDeploymentTypeInfo{value: val, isSet: true}
}

func (v NullableVcenterVchaClusterDeploymentTypeInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterVchaClusterDeploymentTypeInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


