/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterIdentityProvidersOauth2CreateSpec struct for VcenterIdentityProvidersOauth2CreateSpec
type VcenterIdentityProvidersOauth2CreateSpec struct {
	// Authentication/authorization endpoint of the provider
	AuthEndpoint string `json:"auth_endpoint"`
	// Token endpoint of the provider
	TokenEndpoint string `json:"token_endpoint"`
	// Endpoint to retrieve the provider public key for validation
	PublicKeyUri string `json:"public_key_uri"`
	// Client identifier to connect to the provider
	ClientId string `json:"client_id"`
	// The secret shared between the client and the provider
	ClientSecret string `json:"client_secret"`
	// The map used to transform an OAuth2 claim to a corresponding claim that vCenter Server understands. Currently only the key \"perms\" is supported. The key \"perms\" is used for mapping the \"perms\" claim of incoming JWT. The value is another map with an external group as the key and a vCenter Server group as value.
	ClaimMap []VcenterIdentityProvidersOauth2CreateSpecClaimMap `json:"claim_map"`
	// The identity provider namespace. It is used to validate the issuer in the acquired OAuth2 token.
	Issuer string `json:"issuer"`
	AuthenticationMethod VcenterIdentityProvidersOauth2AuthenticationMethod `json:"authentication_method"`
	//  key/value pairs that are to be appended to the authEndpoint request.   How to append to authEndpoint request:  If the map is not empty, a \"?\" is added to the endpoint URL, and combination of each k and each string in the v is added with an \"&\" delimiter. Details:    - If the value contains only one string, then the key is added with \"k=v\".    - If the value is an empty list, then the key is added without a \"=v\".    - If the value contains multiple strings, then the key is repeated in the query-string for each string in the value.  If unset, the map will be empty.
	AuthQueryParams *[]VcenterIdentityProvidersCreateSpecAuthQueryParams `json:"auth_query_params,omitempty"`
}

// NewVcenterIdentityProvidersOauth2CreateSpec instantiates a new VcenterIdentityProvidersOauth2CreateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterIdentityProvidersOauth2CreateSpec(authEndpoint string, tokenEndpoint string, publicKeyUri string, clientId string, clientSecret string, claimMap []VcenterIdentityProvidersOauth2CreateSpecClaimMap, issuer string, authenticationMethod VcenterIdentityProvidersOauth2AuthenticationMethod) *VcenterIdentityProvidersOauth2CreateSpec {
	this := VcenterIdentityProvidersOauth2CreateSpec{}
	this.AuthEndpoint = authEndpoint
	this.TokenEndpoint = tokenEndpoint
	this.PublicKeyUri = publicKeyUri
	this.ClientId = clientId
	this.ClientSecret = clientSecret
	this.ClaimMap = claimMap
	this.Issuer = issuer
	this.AuthenticationMethod = authenticationMethod
	return &this
}

// NewVcenterIdentityProvidersOauth2CreateSpecWithDefaults instantiates a new VcenterIdentityProvidersOauth2CreateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterIdentityProvidersOauth2CreateSpecWithDefaults() *VcenterIdentityProvidersOauth2CreateSpec {
	this := VcenterIdentityProvidersOauth2CreateSpec{}
	return &this
}

// GetAuthEndpoint returns the AuthEndpoint field value
func (o *VcenterIdentityProvidersOauth2CreateSpec) GetAuthEndpoint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthEndpoint
}

// GetAuthEndpointOk returns a tuple with the AuthEndpoint field value
// and a boolean to check if the value has been set.
func (o *VcenterIdentityProvidersOauth2CreateSpec) GetAuthEndpointOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AuthEndpoint, true
}

// SetAuthEndpoint sets field value
func (o *VcenterIdentityProvidersOauth2CreateSpec) SetAuthEndpoint(v string) {
	o.AuthEndpoint = v
}

// GetTokenEndpoint returns the TokenEndpoint field value
func (o *VcenterIdentityProvidersOauth2CreateSpec) GetTokenEndpoint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenEndpoint
}

// GetTokenEndpointOk returns a tuple with the TokenEndpoint field value
// and a boolean to check if the value has been set.
func (o *VcenterIdentityProvidersOauth2CreateSpec) GetTokenEndpointOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TokenEndpoint, true
}

// SetTokenEndpoint sets field value
func (o *VcenterIdentityProvidersOauth2CreateSpec) SetTokenEndpoint(v string) {
	o.TokenEndpoint = v
}

// GetPublicKeyUri returns the PublicKeyUri field value
func (o *VcenterIdentityProvidersOauth2CreateSpec) GetPublicKeyUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PublicKeyUri
}

// GetPublicKeyUriOk returns a tuple with the PublicKeyUri field value
// and a boolean to check if the value has been set.
func (o *VcenterIdentityProvidersOauth2CreateSpec) GetPublicKeyUriOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PublicKeyUri, true
}

// SetPublicKeyUri sets field value
func (o *VcenterIdentityProvidersOauth2CreateSpec) SetPublicKeyUri(v string) {
	o.PublicKeyUri = v
}

// GetClientId returns the ClientId field value
func (o *VcenterIdentityProvidersOauth2CreateSpec) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *VcenterIdentityProvidersOauth2CreateSpec) GetClientIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *VcenterIdentityProvidersOauth2CreateSpec) SetClientId(v string) {
	o.ClientId = v
}

// GetClientSecret returns the ClientSecret field value
func (o *VcenterIdentityProvidersOauth2CreateSpec) GetClientSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value
// and a boolean to check if the value has been set.
func (o *VcenterIdentityProvidersOauth2CreateSpec) GetClientSecretOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ClientSecret, true
}

// SetClientSecret sets field value
func (o *VcenterIdentityProvidersOauth2CreateSpec) SetClientSecret(v string) {
	o.ClientSecret = v
}

// GetClaimMap returns the ClaimMap field value
func (o *VcenterIdentityProvidersOauth2CreateSpec) GetClaimMap() []VcenterIdentityProvidersOauth2CreateSpecClaimMap {
	if o == nil {
		var ret []VcenterIdentityProvidersOauth2CreateSpecClaimMap
		return ret
	}

	return o.ClaimMap
}

// GetClaimMapOk returns a tuple with the ClaimMap field value
// and a boolean to check if the value has been set.
func (o *VcenterIdentityProvidersOauth2CreateSpec) GetClaimMapOk() (*[]VcenterIdentityProvidersOauth2CreateSpecClaimMap, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ClaimMap, true
}

// SetClaimMap sets field value
func (o *VcenterIdentityProvidersOauth2CreateSpec) SetClaimMap(v []VcenterIdentityProvidersOauth2CreateSpecClaimMap) {
	o.ClaimMap = v
}

// GetIssuer returns the Issuer field value
func (o *VcenterIdentityProvidersOauth2CreateSpec) GetIssuer() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Issuer
}

// GetIssuerOk returns a tuple with the Issuer field value
// and a boolean to check if the value has been set.
func (o *VcenterIdentityProvidersOauth2CreateSpec) GetIssuerOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Issuer, true
}

// SetIssuer sets field value
func (o *VcenterIdentityProvidersOauth2CreateSpec) SetIssuer(v string) {
	o.Issuer = v
}

// GetAuthenticationMethod returns the AuthenticationMethod field value
func (o *VcenterIdentityProvidersOauth2CreateSpec) GetAuthenticationMethod() VcenterIdentityProvidersOauth2AuthenticationMethod {
	if o == nil {
		var ret VcenterIdentityProvidersOauth2AuthenticationMethod
		return ret
	}

	return o.AuthenticationMethod
}

// GetAuthenticationMethodOk returns a tuple with the AuthenticationMethod field value
// and a boolean to check if the value has been set.
func (o *VcenterIdentityProvidersOauth2CreateSpec) GetAuthenticationMethodOk() (*VcenterIdentityProvidersOauth2AuthenticationMethod, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AuthenticationMethod, true
}

// SetAuthenticationMethod sets field value
func (o *VcenterIdentityProvidersOauth2CreateSpec) SetAuthenticationMethod(v VcenterIdentityProvidersOauth2AuthenticationMethod) {
	o.AuthenticationMethod = v
}

// GetAuthQueryParams returns the AuthQueryParams field value if set, zero value otherwise.
func (o *VcenterIdentityProvidersOauth2CreateSpec) GetAuthQueryParams() []VcenterIdentityProvidersCreateSpecAuthQueryParams {
	if o == nil || o.AuthQueryParams == nil {
		var ret []VcenterIdentityProvidersCreateSpecAuthQueryParams
		return ret
	}
	return *o.AuthQueryParams
}

// GetAuthQueryParamsOk returns a tuple with the AuthQueryParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterIdentityProvidersOauth2CreateSpec) GetAuthQueryParamsOk() (*[]VcenterIdentityProvidersCreateSpecAuthQueryParams, bool) {
	if o == nil || o.AuthQueryParams == nil {
		return nil, false
	}
	return o.AuthQueryParams, true
}

// HasAuthQueryParams returns a boolean if a field has been set.
func (o *VcenterIdentityProvidersOauth2CreateSpec) HasAuthQueryParams() bool {
	if o != nil && o.AuthQueryParams != nil {
		return true
	}

	return false
}

// SetAuthQueryParams gets a reference to the given []VcenterIdentityProvidersCreateSpecAuthQueryParams and assigns it to the AuthQueryParams field.
func (o *VcenterIdentityProvidersOauth2CreateSpec) SetAuthQueryParams(v []VcenterIdentityProvidersCreateSpecAuthQueryParams) {
	o.AuthQueryParams = &v
}

func (o VcenterIdentityProvidersOauth2CreateSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["auth_endpoint"] = o.AuthEndpoint
	}
	if true {
		toSerialize["token_endpoint"] = o.TokenEndpoint
	}
	if true {
		toSerialize["public_key_uri"] = o.PublicKeyUri
	}
	if true {
		toSerialize["client_id"] = o.ClientId
	}
	if true {
		toSerialize["client_secret"] = o.ClientSecret
	}
	if true {
		toSerialize["claim_map"] = o.ClaimMap
	}
	if true {
		toSerialize["issuer"] = o.Issuer
	}
	if true {
		toSerialize["authentication_method"] = o.AuthenticationMethod
	}
	if o.AuthQueryParams != nil {
		toSerialize["auth_query_params"] = o.AuthQueryParams
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterIdentityProvidersOauth2CreateSpec struct {
	value *VcenterIdentityProvidersOauth2CreateSpec
	isSet bool
}

func (v NullableVcenterIdentityProvidersOauth2CreateSpec) Get() *VcenterIdentityProvidersOauth2CreateSpec {
	return v.value
}

func (v *NullableVcenterIdentityProvidersOauth2CreateSpec) Set(val *VcenterIdentityProvidersOauth2CreateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterIdentityProvidersOauth2CreateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterIdentityProvidersOauth2CreateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterIdentityProvidersOauth2CreateSpec(val *VcenterIdentityProvidersOauth2CreateSpec) *NullableVcenterIdentityProvidersOauth2CreateSpec {
	return &NullableVcenterIdentityProvidersOauth2CreateSpec{value: val, isSet: true}
}

func (v NullableVcenterIdentityProvidersOauth2CreateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterIdentityProvidersOauth2CreateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


