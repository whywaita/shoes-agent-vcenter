/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterVmTemplateLibraryItemsHardwareCustomizationSpec struct for VcenterVmTemplateLibraryItemsHardwareCustomizationSpec
type VcenterVmTemplateLibraryItemsHardwareCustomizationSpec struct {
	// Map of Ethernet network adapters to update.
	Nics *[]VcenterVmTemplateLibraryItemsHardwareCustomizationSpecNics `json:"nics,omitempty"`
	// Idenfiers of disks to remove from the deployed virtual machine.
	DisksToRemove *[]string `json:"disks_to_remove,omitempty"`
	// Disk update specification for individual disks in the deployed virtual machine.
	DisksToUpdate *[]VcenterVmTemplateLibraryItemsHardwareCustomizationSpecDisksToUpdate `json:"disks_to_update,omitempty"`
	CpuUpdate *VcenterVmTemplateLibraryItemsCpuUpdateSpec `json:"cpu_update,omitempty"`
	MemoryUpdate *VcenterVmTemplateLibraryItemsMemoryUpdateSpec `json:"memory_update,omitempty"`
}

// NewVcenterVmTemplateLibraryItemsHardwareCustomizationSpec instantiates a new VcenterVmTemplateLibraryItemsHardwareCustomizationSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterVmTemplateLibraryItemsHardwareCustomizationSpec() *VcenterVmTemplateLibraryItemsHardwareCustomizationSpec {
	this := VcenterVmTemplateLibraryItemsHardwareCustomizationSpec{}
	return &this
}

// NewVcenterVmTemplateLibraryItemsHardwareCustomizationSpecWithDefaults instantiates a new VcenterVmTemplateLibraryItemsHardwareCustomizationSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterVmTemplateLibraryItemsHardwareCustomizationSpecWithDefaults() *VcenterVmTemplateLibraryItemsHardwareCustomizationSpec {
	this := VcenterVmTemplateLibraryItemsHardwareCustomizationSpec{}
	return &this
}

// GetNics returns the Nics field value if set, zero value otherwise.
func (o *VcenterVmTemplateLibraryItemsHardwareCustomizationSpec) GetNics() []VcenterVmTemplateLibraryItemsHardwareCustomizationSpecNics {
	if o == nil || o.Nics == nil {
		var ret []VcenterVmTemplateLibraryItemsHardwareCustomizationSpecNics
		return ret
	}
	return *o.Nics
}

// GetNicsOk returns a tuple with the Nics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmTemplateLibraryItemsHardwareCustomizationSpec) GetNicsOk() (*[]VcenterVmTemplateLibraryItemsHardwareCustomizationSpecNics, bool) {
	if o == nil || o.Nics == nil {
		return nil, false
	}
	return o.Nics, true
}

// HasNics returns a boolean if a field has been set.
func (o *VcenterVmTemplateLibraryItemsHardwareCustomizationSpec) HasNics() bool {
	if o != nil && o.Nics != nil {
		return true
	}

	return false
}

// SetNics gets a reference to the given []VcenterVmTemplateLibraryItemsHardwareCustomizationSpecNics and assigns it to the Nics field.
func (o *VcenterVmTemplateLibraryItemsHardwareCustomizationSpec) SetNics(v []VcenterVmTemplateLibraryItemsHardwareCustomizationSpecNics) {
	o.Nics = &v
}

// GetDisksToRemove returns the DisksToRemove field value if set, zero value otherwise.
func (o *VcenterVmTemplateLibraryItemsHardwareCustomizationSpec) GetDisksToRemove() []string {
	if o == nil || o.DisksToRemove == nil {
		var ret []string
		return ret
	}
	return *o.DisksToRemove
}

// GetDisksToRemoveOk returns a tuple with the DisksToRemove field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmTemplateLibraryItemsHardwareCustomizationSpec) GetDisksToRemoveOk() (*[]string, bool) {
	if o == nil || o.DisksToRemove == nil {
		return nil, false
	}
	return o.DisksToRemove, true
}

// HasDisksToRemove returns a boolean if a field has been set.
func (o *VcenterVmTemplateLibraryItemsHardwareCustomizationSpec) HasDisksToRemove() bool {
	if o != nil && o.DisksToRemove != nil {
		return true
	}

	return false
}

// SetDisksToRemove gets a reference to the given []string and assigns it to the DisksToRemove field.
func (o *VcenterVmTemplateLibraryItemsHardwareCustomizationSpec) SetDisksToRemove(v []string) {
	o.DisksToRemove = &v
}

// GetDisksToUpdate returns the DisksToUpdate field value if set, zero value otherwise.
func (o *VcenterVmTemplateLibraryItemsHardwareCustomizationSpec) GetDisksToUpdate() []VcenterVmTemplateLibraryItemsHardwareCustomizationSpecDisksToUpdate {
	if o == nil || o.DisksToUpdate == nil {
		var ret []VcenterVmTemplateLibraryItemsHardwareCustomizationSpecDisksToUpdate
		return ret
	}
	return *o.DisksToUpdate
}

// GetDisksToUpdateOk returns a tuple with the DisksToUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmTemplateLibraryItemsHardwareCustomizationSpec) GetDisksToUpdateOk() (*[]VcenterVmTemplateLibraryItemsHardwareCustomizationSpecDisksToUpdate, bool) {
	if o == nil || o.DisksToUpdate == nil {
		return nil, false
	}
	return o.DisksToUpdate, true
}

// HasDisksToUpdate returns a boolean if a field has been set.
func (o *VcenterVmTemplateLibraryItemsHardwareCustomizationSpec) HasDisksToUpdate() bool {
	if o != nil && o.DisksToUpdate != nil {
		return true
	}

	return false
}

// SetDisksToUpdate gets a reference to the given []VcenterVmTemplateLibraryItemsHardwareCustomizationSpecDisksToUpdate and assigns it to the DisksToUpdate field.
func (o *VcenterVmTemplateLibraryItemsHardwareCustomizationSpec) SetDisksToUpdate(v []VcenterVmTemplateLibraryItemsHardwareCustomizationSpecDisksToUpdate) {
	o.DisksToUpdate = &v
}

// GetCpuUpdate returns the CpuUpdate field value if set, zero value otherwise.
func (o *VcenterVmTemplateLibraryItemsHardwareCustomizationSpec) GetCpuUpdate() VcenterVmTemplateLibraryItemsCpuUpdateSpec {
	if o == nil || o.CpuUpdate == nil {
		var ret VcenterVmTemplateLibraryItemsCpuUpdateSpec
		return ret
	}
	return *o.CpuUpdate
}

// GetCpuUpdateOk returns a tuple with the CpuUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmTemplateLibraryItemsHardwareCustomizationSpec) GetCpuUpdateOk() (*VcenterVmTemplateLibraryItemsCpuUpdateSpec, bool) {
	if o == nil || o.CpuUpdate == nil {
		return nil, false
	}
	return o.CpuUpdate, true
}

// HasCpuUpdate returns a boolean if a field has been set.
func (o *VcenterVmTemplateLibraryItemsHardwareCustomizationSpec) HasCpuUpdate() bool {
	if o != nil && o.CpuUpdate != nil {
		return true
	}

	return false
}

// SetCpuUpdate gets a reference to the given VcenterVmTemplateLibraryItemsCpuUpdateSpec and assigns it to the CpuUpdate field.
func (o *VcenterVmTemplateLibraryItemsHardwareCustomizationSpec) SetCpuUpdate(v VcenterVmTemplateLibraryItemsCpuUpdateSpec) {
	o.CpuUpdate = &v
}

// GetMemoryUpdate returns the MemoryUpdate field value if set, zero value otherwise.
func (o *VcenterVmTemplateLibraryItemsHardwareCustomizationSpec) GetMemoryUpdate() VcenterVmTemplateLibraryItemsMemoryUpdateSpec {
	if o == nil || o.MemoryUpdate == nil {
		var ret VcenterVmTemplateLibraryItemsMemoryUpdateSpec
		return ret
	}
	return *o.MemoryUpdate
}

// GetMemoryUpdateOk returns a tuple with the MemoryUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmTemplateLibraryItemsHardwareCustomizationSpec) GetMemoryUpdateOk() (*VcenterVmTemplateLibraryItemsMemoryUpdateSpec, bool) {
	if o == nil || o.MemoryUpdate == nil {
		return nil, false
	}
	return o.MemoryUpdate, true
}

// HasMemoryUpdate returns a boolean if a field has been set.
func (o *VcenterVmTemplateLibraryItemsHardwareCustomizationSpec) HasMemoryUpdate() bool {
	if o != nil && o.MemoryUpdate != nil {
		return true
	}

	return false
}

// SetMemoryUpdate gets a reference to the given VcenterVmTemplateLibraryItemsMemoryUpdateSpec and assigns it to the MemoryUpdate field.
func (o *VcenterVmTemplateLibraryItemsHardwareCustomizationSpec) SetMemoryUpdate(v VcenterVmTemplateLibraryItemsMemoryUpdateSpec) {
	o.MemoryUpdate = &v
}

func (o VcenterVmTemplateLibraryItemsHardwareCustomizationSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Nics != nil {
		toSerialize["nics"] = o.Nics
	}
	if o.DisksToRemove != nil {
		toSerialize["disks_to_remove"] = o.DisksToRemove
	}
	if o.DisksToUpdate != nil {
		toSerialize["disks_to_update"] = o.DisksToUpdate
	}
	if o.CpuUpdate != nil {
		toSerialize["cpu_update"] = o.CpuUpdate
	}
	if o.MemoryUpdate != nil {
		toSerialize["memory_update"] = o.MemoryUpdate
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterVmTemplateLibraryItemsHardwareCustomizationSpec struct {
	value *VcenterVmTemplateLibraryItemsHardwareCustomizationSpec
	isSet bool
}

func (v NullableVcenterVmTemplateLibraryItemsHardwareCustomizationSpec) Get() *VcenterVmTemplateLibraryItemsHardwareCustomizationSpec {
	return v.value
}

func (v *NullableVcenterVmTemplateLibraryItemsHardwareCustomizationSpec) Set(val *VcenterVmTemplateLibraryItemsHardwareCustomizationSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterVmTemplateLibraryItemsHardwareCustomizationSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterVmTemplateLibraryItemsHardwareCustomizationSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterVmTemplateLibraryItemsHardwareCustomizationSpec(val *VcenterVmTemplateLibraryItemsHardwareCustomizationSpec) *NullableVcenterVmTemplateLibraryItemsHardwareCustomizationSpec {
	return &NullableVcenterVmTemplateLibraryItemsHardwareCustomizationSpec{value: val, isSet: true}
}

func (v NullableVcenterVmTemplateLibraryItemsHardwareCustomizationSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterVmTemplateLibraryItemsHardwareCustomizationSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


