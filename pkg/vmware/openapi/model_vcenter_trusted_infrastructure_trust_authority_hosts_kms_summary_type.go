/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// VcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryType The connection information could include the certificates or be a shorter summary.
type VcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryType string

// List of VcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryType
const (
	VCENTERTRUSTEDINFRASTRUCTURETRUSTAUTHORITYHOSTSKMSSUMMARYTYPE_FULL VcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryType = "FULL"
	VCENTERTRUSTEDINFRASTRUCTURETRUSTAUTHORITYHOSTSKMSSUMMARYTYPE_NORMAL VcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryType = "NORMAL"
	VCENTERTRUSTEDINFRASTRUCTURETRUSTAUTHORITYHOSTSKMSSUMMARYTYPE_BRIEF VcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryType = "BRIEF"
)

// All allowed values of VcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryType enum
var AllowedVcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryTypeEnumValues = []VcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryType{
	"FULL",
	"NORMAL",
	"BRIEF",
}

func (v *VcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := VcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryType(value)
	for _, existing := range AllowedVcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid VcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryType", value)
}

// NewVcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryTypeFromValue returns a pointer to a valid VcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewVcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryTypeFromValue(v string) (*VcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryType, error) {
	ev := VcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for VcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryType: valid values are %v", v, AllowedVcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v VcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryType) IsValid() bool {
	for _, existing := range AllowedVcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to VcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryType value
func (v VcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryType) Ptr() *VcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryType {
	return &v
}

type NullableVcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryType struct {
	value *VcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryType
	isSet bool
}

func (v NullableVcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryType) Get() *VcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryType {
	return v.value
}

func (v *NullableVcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryType) Set(val *VcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryType) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryType) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryType(val *VcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryType) *NullableVcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryType {
	return &NullableVcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryType{value: val, isSet: true}
}

func (v NullableVcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterTrustedInfrastructureTrustAuthorityHostsKmsSummaryType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

