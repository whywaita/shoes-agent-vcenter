/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterIsoImageUnmountIsoImage struct for VcenterIsoImageUnmountIsoImage
type VcenterIsoImageUnmountIsoImage struct {
	// The device identifier of the CD-ROM.
	Cdrom *string `json:"cdrom,omitempty"`
}

// NewVcenterIsoImageUnmountIsoImage instantiates a new VcenterIsoImageUnmountIsoImage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterIsoImageUnmountIsoImage() *VcenterIsoImageUnmountIsoImage {
	this := VcenterIsoImageUnmountIsoImage{}
	return &this
}

// NewVcenterIsoImageUnmountIsoImageWithDefaults instantiates a new VcenterIsoImageUnmountIsoImage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterIsoImageUnmountIsoImageWithDefaults() *VcenterIsoImageUnmountIsoImage {
	this := VcenterIsoImageUnmountIsoImage{}
	return &this
}

// GetCdrom returns the Cdrom field value if set, zero value otherwise.
func (o *VcenterIsoImageUnmountIsoImage) GetCdrom() string {
	if o == nil || o.Cdrom == nil {
		var ret string
		return ret
	}
	return *o.Cdrom
}

// GetCdromOk returns a tuple with the Cdrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterIsoImageUnmountIsoImage) GetCdromOk() (*string, bool) {
	if o == nil || o.Cdrom == nil {
		return nil, false
	}
	return o.Cdrom, true
}

// HasCdrom returns a boolean if a field has been set.
func (o *VcenterIsoImageUnmountIsoImage) HasCdrom() bool {
	if o != nil && o.Cdrom != nil {
		return true
	}

	return false
}

// SetCdrom gets a reference to the given string and assigns it to the Cdrom field.
func (o *VcenterIsoImageUnmountIsoImage) SetCdrom(v string) {
	o.Cdrom = &v
}

func (o VcenterIsoImageUnmountIsoImage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Cdrom != nil {
		toSerialize["cdrom"] = o.Cdrom
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterIsoImageUnmountIsoImage struct {
	value *VcenterIsoImageUnmountIsoImage
	isSet bool
}

func (v NullableVcenterIsoImageUnmountIsoImage) Get() *VcenterIsoImageUnmountIsoImage {
	return v.value
}

func (v *NullableVcenterIsoImageUnmountIsoImage) Set(val *VcenterIsoImageUnmountIsoImage) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterIsoImageUnmountIsoImage) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterIsoImageUnmountIsoImage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterIsoImageUnmountIsoImage(val *VcenterIsoImageUnmountIsoImage) *NullableVcenterIsoImageUnmountIsoImage {
	return &NullableVcenterIsoImageUnmountIsoImage{value: val, isSet: true}
}

func (v NullableVcenterIsoImageUnmountIsoImage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterIsoImageUnmountIsoImage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


