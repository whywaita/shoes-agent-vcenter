/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterStoragePoliciesComplianceFilterSpec struct for VcenterStoragePoliciesComplianceFilterSpec
type VcenterStoragePoliciesComplianceFilterSpec struct {
	// Compliance Status that a virtual machine must have to match the filter.
	Status []VcenterStoragePoliciesComplianceStatus `json:"status"`
}

// NewVcenterStoragePoliciesComplianceFilterSpec instantiates a new VcenterStoragePoliciesComplianceFilterSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterStoragePoliciesComplianceFilterSpec(status []VcenterStoragePoliciesComplianceStatus) *VcenterStoragePoliciesComplianceFilterSpec {
	this := VcenterStoragePoliciesComplianceFilterSpec{}
	this.Status = status
	return &this
}

// NewVcenterStoragePoliciesComplianceFilterSpecWithDefaults instantiates a new VcenterStoragePoliciesComplianceFilterSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterStoragePoliciesComplianceFilterSpecWithDefaults() *VcenterStoragePoliciesComplianceFilterSpec {
	this := VcenterStoragePoliciesComplianceFilterSpec{}
	return &this
}

// GetStatus returns the Status field value
func (o *VcenterStoragePoliciesComplianceFilterSpec) GetStatus() []VcenterStoragePoliciesComplianceStatus {
	if o == nil {
		var ret []VcenterStoragePoliciesComplianceStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *VcenterStoragePoliciesComplianceFilterSpec) GetStatusOk() (*[]VcenterStoragePoliciesComplianceStatus, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *VcenterStoragePoliciesComplianceFilterSpec) SetStatus(v []VcenterStoragePoliciesComplianceStatus) {
	o.Status = v
}

func (o VcenterStoragePoliciesComplianceFilterSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterStoragePoliciesComplianceFilterSpec struct {
	value *VcenterStoragePoliciesComplianceFilterSpec
	isSet bool
}

func (v NullableVcenterStoragePoliciesComplianceFilterSpec) Get() *VcenterStoragePoliciesComplianceFilterSpec {
	return v.value
}

func (v *NullableVcenterStoragePoliciesComplianceFilterSpec) Set(val *VcenterStoragePoliciesComplianceFilterSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterStoragePoliciesComplianceFilterSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterStoragePoliciesComplianceFilterSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterStoragePoliciesComplianceFilterSpec(val *VcenterStoragePoliciesComplianceFilterSpec) *NullableVcenterStoragePoliciesComplianceFilterSpec {
	return &NullableVcenterStoragePoliciesComplianceFilterSpec{value: val, isSet: true}
}

func (v NullableVcenterStoragePoliciesComplianceFilterSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterStoragePoliciesComplianceFilterSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


