/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterNamespaceManagementClustersImageRegistry struct for VcenterNamespaceManagementClustersImageRegistry
type VcenterNamespaceManagementClustersImageRegistry struct {
	// IP address or the hostname of container image registry.
	Hostname string `json:"hostname"`
	// Port number of the container image registry. If unset, defaults to 443.
	Port *int64 `json:"port,omitempty"`
}

// NewVcenterNamespaceManagementClustersImageRegistry instantiates a new VcenterNamespaceManagementClustersImageRegistry object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterNamespaceManagementClustersImageRegistry(hostname string) *VcenterNamespaceManagementClustersImageRegistry {
	this := VcenterNamespaceManagementClustersImageRegistry{}
	this.Hostname = hostname
	return &this
}

// NewVcenterNamespaceManagementClustersImageRegistryWithDefaults instantiates a new VcenterNamespaceManagementClustersImageRegistry object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterNamespaceManagementClustersImageRegistryWithDefaults() *VcenterNamespaceManagementClustersImageRegistry {
	this := VcenterNamespaceManagementClustersImageRegistry{}
	return &this
}

// GetHostname returns the Hostname field value
func (o *VcenterNamespaceManagementClustersImageRegistry) GetHostname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespaceManagementClustersImageRegistry) GetHostnameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Hostname, true
}

// SetHostname sets field value
func (o *VcenterNamespaceManagementClustersImageRegistry) SetHostname(v string) {
	o.Hostname = v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *VcenterNamespaceManagementClustersImageRegistry) GetPort() int64 {
	if o == nil || o.Port == nil {
		var ret int64
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterNamespaceManagementClustersImageRegistry) GetPortOk() (*int64, bool) {
	if o == nil || o.Port == nil {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *VcenterNamespaceManagementClustersImageRegistry) HasPort() bool {
	if o != nil && o.Port != nil {
		return true
	}

	return false
}

// SetPort gets a reference to the given int64 and assigns it to the Port field.
func (o *VcenterNamespaceManagementClustersImageRegistry) SetPort(v int64) {
	o.Port = &v
}

func (o VcenterNamespaceManagementClustersImageRegistry) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["hostname"] = o.Hostname
	}
	if o.Port != nil {
		toSerialize["port"] = o.Port
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterNamespaceManagementClustersImageRegistry struct {
	value *VcenterNamespaceManagementClustersImageRegistry
	isSet bool
}

func (v NullableVcenterNamespaceManagementClustersImageRegistry) Get() *VcenterNamespaceManagementClustersImageRegistry {
	return v.value
}

func (v *NullableVcenterNamespaceManagementClustersImageRegistry) Set(val *VcenterNamespaceManagementClustersImageRegistry) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterNamespaceManagementClustersImageRegistry) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterNamespaceManagementClustersImageRegistry) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterNamespaceManagementClustersImageRegistry(val *VcenterNamespaceManagementClustersImageRegistry) *NullableVcenterNamespaceManagementClustersImageRegistry {
	return &NullableVcenterNamespaceManagementClustersImageRegistry{value: val, isSet: true}
}

func (v NullableVcenterNamespaceManagementClustersImageRegistry) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterNamespaceManagementClustersImageRegistry) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


