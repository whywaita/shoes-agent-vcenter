/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterOvfLibraryItemResultInfo struct for VcenterOvfLibraryItemResultInfo
type VcenterOvfLibraryItemResultInfo struct {
	// Errors reported by the {@name LibraryItem#create} or {@name LibraryItem#deploy} {@term operation}. These errors would have prevented the {@name LibraryItem#create} or {@name LibraryItem#deploy} {@term operation} from completing successfully.
	Errors []VcenterOvfOvfError `json:"errors"`
	// Warnings reported by the {@name LibraryItem#create} or {@name LibraryItem#deploy} {@term operation}. These warnings would not have prevented the {@name LibraryItem#create} or {@name LibraryItem#deploy} {@term operation} from completing successfully, but there might be issues that warrant attention.
	Warnings []VcenterOvfOvfWarning `json:"warnings"`
	// Information messages reported by the {@name LibraryItem#create} or {@name LibraryItem#deploy} {@term operation}. For example, a non-required parameter was ignored.
	Information []VcenterOvfOvfInfo `json:"information"`
}

// NewVcenterOvfLibraryItemResultInfo instantiates a new VcenterOvfLibraryItemResultInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterOvfLibraryItemResultInfo(errors []VcenterOvfOvfError, warnings []VcenterOvfOvfWarning, information []VcenterOvfOvfInfo) *VcenterOvfLibraryItemResultInfo {
	this := VcenterOvfLibraryItemResultInfo{}
	this.Errors = errors
	this.Warnings = warnings
	this.Information = information
	return &this
}

// NewVcenterOvfLibraryItemResultInfoWithDefaults instantiates a new VcenterOvfLibraryItemResultInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterOvfLibraryItemResultInfoWithDefaults() *VcenterOvfLibraryItemResultInfo {
	this := VcenterOvfLibraryItemResultInfo{}
	return &this
}

// GetErrors returns the Errors field value
func (o *VcenterOvfLibraryItemResultInfo) GetErrors() []VcenterOvfOvfError {
	if o == nil {
		var ret []VcenterOvfOvfError
		return ret
	}

	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value
// and a boolean to check if the value has been set.
func (o *VcenterOvfLibraryItemResultInfo) GetErrorsOk() (*[]VcenterOvfOvfError, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Errors, true
}

// SetErrors sets field value
func (o *VcenterOvfLibraryItemResultInfo) SetErrors(v []VcenterOvfOvfError) {
	o.Errors = v
}

// GetWarnings returns the Warnings field value
func (o *VcenterOvfLibraryItemResultInfo) GetWarnings() []VcenterOvfOvfWarning {
	if o == nil {
		var ret []VcenterOvfOvfWarning
		return ret
	}

	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value
// and a boolean to check if the value has been set.
func (o *VcenterOvfLibraryItemResultInfo) GetWarningsOk() (*[]VcenterOvfOvfWarning, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Warnings, true
}

// SetWarnings sets field value
func (o *VcenterOvfLibraryItemResultInfo) SetWarnings(v []VcenterOvfOvfWarning) {
	o.Warnings = v
}

// GetInformation returns the Information field value
func (o *VcenterOvfLibraryItemResultInfo) GetInformation() []VcenterOvfOvfInfo {
	if o == nil {
		var ret []VcenterOvfOvfInfo
		return ret
	}

	return o.Information
}

// GetInformationOk returns a tuple with the Information field value
// and a boolean to check if the value has been set.
func (o *VcenterOvfLibraryItemResultInfo) GetInformationOk() (*[]VcenterOvfOvfInfo, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Information, true
}

// SetInformation sets field value
func (o *VcenterOvfLibraryItemResultInfo) SetInformation(v []VcenterOvfOvfInfo) {
	o.Information = v
}

func (o VcenterOvfLibraryItemResultInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["errors"] = o.Errors
	}
	if true {
		toSerialize["warnings"] = o.Warnings
	}
	if true {
		toSerialize["information"] = o.Information
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterOvfLibraryItemResultInfo struct {
	value *VcenterOvfLibraryItemResultInfo
	isSet bool
}

func (v NullableVcenterOvfLibraryItemResultInfo) Get() *VcenterOvfLibraryItemResultInfo {
	return v.value
}

func (v *NullableVcenterOvfLibraryItemResultInfo) Set(val *VcenterOvfLibraryItemResultInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterOvfLibraryItemResultInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterOvfLibraryItemResultInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterOvfLibraryItemResultInfo(val *VcenterOvfLibraryItemResultInfo) *NullableVcenterOvfLibraryItemResultInfo {
	return &NullableVcenterOvfLibraryItemResultInfo{value: val, isSet: true}
}

func (v NullableVcenterOvfLibraryItemResultInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterOvfLibraryItemResultInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


