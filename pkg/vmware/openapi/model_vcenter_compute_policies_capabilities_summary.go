/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterComputePoliciesCapabilitiesSummary struct for VcenterComputePoliciesCapabilitiesSummary
type VcenterComputePoliciesCapabilitiesSummary struct {
	// Identifier of the capability.
	Capability string `json:"capability"`
	// Name of the capability.
	Name string `json:"name"`
	// Description of the capability.
	Description string `json:"description"`
}

// NewVcenterComputePoliciesCapabilitiesSummary instantiates a new VcenterComputePoliciesCapabilitiesSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterComputePoliciesCapabilitiesSummary(capability string, name string, description string) *VcenterComputePoliciesCapabilitiesSummary {
	this := VcenterComputePoliciesCapabilitiesSummary{}
	this.Capability = capability
	this.Name = name
	this.Description = description
	return &this
}

// NewVcenterComputePoliciesCapabilitiesSummaryWithDefaults instantiates a new VcenterComputePoliciesCapabilitiesSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterComputePoliciesCapabilitiesSummaryWithDefaults() *VcenterComputePoliciesCapabilitiesSummary {
	this := VcenterComputePoliciesCapabilitiesSummary{}
	return &this
}

// GetCapability returns the Capability field value
func (o *VcenterComputePoliciesCapabilitiesSummary) GetCapability() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Capability
}

// GetCapabilityOk returns a tuple with the Capability field value
// and a boolean to check if the value has been set.
func (o *VcenterComputePoliciesCapabilitiesSummary) GetCapabilityOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Capability, true
}

// SetCapability sets field value
func (o *VcenterComputePoliciesCapabilitiesSummary) SetCapability(v string) {
	o.Capability = v
}

// GetName returns the Name field value
func (o *VcenterComputePoliciesCapabilitiesSummary) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *VcenterComputePoliciesCapabilitiesSummary) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *VcenterComputePoliciesCapabilitiesSummary) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *VcenterComputePoliciesCapabilitiesSummary) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *VcenterComputePoliciesCapabilitiesSummary) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *VcenterComputePoliciesCapabilitiesSummary) SetDescription(v string) {
	o.Description = v
}

func (o VcenterComputePoliciesCapabilitiesSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["capability"] = o.Capability
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterComputePoliciesCapabilitiesSummary struct {
	value *VcenterComputePoliciesCapabilitiesSummary
	isSet bool
}

func (v NullableVcenterComputePoliciesCapabilitiesSummary) Get() *VcenterComputePoliciesCapabilitiesSummary {
	return v.value
}

func (v *NullableVcenterComputePoliciesCapabilitiesSummary) Set(val *VcenterComputePoliciesCapabilitiesSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterComputePoliciesCapabilitiesSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterComputePoliciesCapabilitiesSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterComputePoliciesCapabilitiesSummary(val *VcenterComputePoliciesCapabilitiesSummary) *NullableVcenterComputePoliciesCapabilitiesSummary {
	return &NullableVcenterComputePoliciesCapabilitiesSummary{value: val, isSet: true}
}

func (v NullableVcenterComputePoliciesCapabilitiesSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterComputePoliciesCapabilitiesSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


