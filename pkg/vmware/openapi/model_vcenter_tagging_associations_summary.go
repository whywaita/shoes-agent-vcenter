/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterTaggingAssociationsSummary struct for VcenterTaggingAssociationsSummary
type VcenterTaggingAssociationsSummary struct {
	// The identifier of a tag. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: cis.tagging.Tag. When operations return a value of this structure as a result, the field will be an identifier for the resource type: cis.tagging.Tag.
	Tag string `json:"tag"`
	Object VapiStdDynamicID `json:"object"`
}

// NewVcenterTaggingAssociationsSummary instantiates a new VcenterTaggingAssociationsSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterTaggingAssociationsSummary(tag string, object VapiStdDynamicID) *VcenterTaggingAssociationsSummary {
	this := VcenterTaggingAssociationsSummary{}
	this.Tag = tag
	this.Object = object
	return &this
}

// NewVcenterTaggingAssociationsSummaryWithDefaults instantiates a new VcenterTaggingAssociationsSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterTaggingAssociationsSummaryWithDefaults() *VcenterTaggingAssociationsSummary {
	this := VcenterTaggingAssociationsSummary{}
	return &this
}

// GetTag returns the Tag field value
func (o *VcenterTaggingAssociationsSummary) GetTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value
// and a boolean to check if the value has been set.
func (o *VcenterTaggingAssociationsSummary) GetTagOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Tag, true
}

// SetTag sets field value
func (o *VcenterTaggingAssociationsSummary) SetTag(v string) {
	o.Tag = v
}

// GetObject returns the Object field value
func (o *VcenterTaggingAssociationsSummary) GetObject() VapiStdDynamicID {
	if o == nil {
		var ret VapiStdDynamicID
		return ret
	}

	return o.Object
}

// GetObjectOk returns a tuple with the Object field value
// and a boolean to check if the value has been set.
func (o *VcenterTaggingAssociationsSummary) GetObjectOk() (*VapiStdDynamicID, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Object, true
}

// SetObject sets field value
func (o *VcenterTaggingAssociationsSummary) SetObject(v VapiStdDynamicID) {
	o.Object = v
}

func (o VcenterTaggingAssociationsSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["tag"] = o.Tag
	}
	if true {
		toSerialize["object"] = o.Object
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterTaggingAssociationsSummary struct {
	value *VcenterTaggingAssociationsSummary
	isSet bool
}

func (v NullableVcenterTaggingAssociationsSummary) Get() *VcenterTaggingAssociationsSummary {
	return v.value
}

func (v *NullableVcenterTaggingAssociationsSummary) Set(val *VcenterTaggingAssociationsSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterTaggingAssociationsSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterTaggingAssociationsSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterTaggingAssociationsSummary(val *VcenterTaggingAssociationsSummary) *NullableVcenterTaggingAssociationsSummary {
	return &NullableVcenterTaggingAssociationsSummary{value: val, isSet: true}
}

func (v NullableVcenterTaggingAssociationsSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterTaggingAssociationsSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


