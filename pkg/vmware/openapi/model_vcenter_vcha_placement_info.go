/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterVchaPlacementInfo struct for VcenterVchaPlacementInfo
type VcenterVchaPlacementInfo struct {
	// The hostname of the vCenter server that is managing the VCHA node.
	ManagementVcenterName string `json:"management_vcenter_name"`
	// The unique identifier of the vCenter server that is managing the VCHA node. This field is optional because it was added in a newer version than its parent node.
	ManagementVcenterServerGuid *string `json:"management_vcenter_server_guid,omitempty"`
	// The virtual machine name of the VCHA node.
	VmName string `json:"vm_name"`
	// The identifier of the datacenter of the VCHA node. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Datacenter:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Datacenter:VCenter.
	Datacenter string `json:"datacenter"`
	// The name of the datacenter of the VCHA node.
	DatacenterName string `json:"datacenter_name"`
	// The identifier of the host of the VCHA node. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: HostSystem:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: HostSystem:VCenter.
	Host string `json:"host"`
	// The name of the host of the VCHA node.
	HostName string `json:"host_name"`
	// The identifier of the cluster of which PlacementInfo.host is member. If unset, PlacementInfo.host is a standalone host. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ClusterComputeResource:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ClusterComputeResource:VCenter.
	Cluster *string `json:"cluster,omitempty"`
	// The name of the cluster of which PlacementInfo.host is member. If unset, PlacementInfo.host is a standalone host.
	ClusterName *string `json:"cluster_name,omitempty"`
	// The identifier of the Network object used for the HA network. If unset, the information is currently unavailable or the haNetwork is not configured. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network:VCenter.
	HaNetwork *string `json:"ha_network,omitempty"`
	// The name of the Network object used for the HA network. If unset, the information is currently unavailable or the haNetwork is not configured.
	HaNetworkName *string `json:"ha_network_name,omitempty"`
	HaNetworkType *VcenterVchaNetworkType `json:"ha_network_type,omitempty"`
	// The identifier of the Network object used for the Management network. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network:VCenter.
	ManagementNetwork string `json:"management_network"`
	// The name of the Network object used for the Management network.
	ManagementNetworkName string `json:"management_network_name"`
	ManagementNetworkType VcenterVchaNetworkType `json:"management_network_type"`
	Storage VcenterVchaDiskInfo `json:"storage"`
	// BIOS UUID for the node. If unset, the information is currently unavailable.
	BiosUuid *string `json:"bios_uuid,omitempty"`
}

// NewVcenterVchaPlacementInfo instantiates a new VcenterVchaPlacementInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterVchaPlacementInfo(managementVcenterName string, vmName string, datacenter string, datacenterName string, host string, hostName string, managementNetwork string, managementNetworkName string, managementNetworkType VcenterVchaNetworkType, storage VcenterVchaDiskInfo) *VcenterVchaPlacementInfo {
	this := VcenterVchaPlacementInfo{}
	this.ManagementVcenterName = managementVcenterName
	this.VmName = vmName
	this.Datacenter = datacenter
	this.DatacenterName = datacenterName
	this.Host = host
	this.HostName = hostName
	this.ManagementNetwork = managementNetwork
	this.ManagementNetworkName = managementNetworkName
	this.ManagementNetworkType = managementNetworkType
	this.Storage = storage
	return &this
}

// NewVcenterVchaPlacementInfoWithDefaults instantiates a new VcenterVchaPlacementInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterVchaPlacementInfoWithDefaults() *VcenterVchaPlacementInfo {
	this := VcenterVchaPlacementInfo{}
	return &this
}

// GetManagementVcenterName returns the ManagementVcenterName field value
func (o *VcenterVchaPlacementInfo) GetManagementVcenterName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ManagementVcenterName
}

// GetManagementVcenterNameOk returns a tuple with the ManagementVcenterName field value
// and a boolean to check if the value has been set.
func (o *VcenterVchaPlacementInfo) GetManagementVcenterNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ManagementVcenterName, true
}

// SetManagementVcenterName sets field value
func (o *VcenterVchaPlacementInfo) SetManagementVcenterName(v string) {
	o.ManagementVcenterName = v
}

// GetManagementVcenterServerGuid returns the ManagementVcenterServerGuid field value if set, zero value otherwise.
func (o *VcenterVchaPlacementInfo) GetManagementVcenterServerGuid() string {
	if o == nil || o.ManagementVcenterServerGuid == nil {
		var ret string
		return ret
	}
	return *o.ManagementVcenterServerGuid
}

// GetManagementVcenterServerGuidOk returns a tuple with the ManagementVcenterServerGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVchaPlacementInfo) GetManagementVcenterServerGuidOk() (*string, bool) {
	if o == nil || o.ManagementVcenterServerGuid == nil {
		return nil, false
	}
	return o.ManagementVcenterServerGuid, true
}

// HasManagementVcenterServerGuid returns a boolean if a field has been set.
func (o *VcenterVchaPlacementInfo) HasManagementVcenterServerGuid() bool {
	if o != nil && o.ManagementVcenterServerGuid != nil {
		return true
	}

	return false
}

// SetManagementVcenterServerGuid gets a reference to the given string and assigns it to the ManagementVcenterServerGuid field.
func (o *VcenterVchaPlacementInfo) SetManagementVcenterServerGuid(v string) {
	o.ManagementVcenterServerGuid = &v
}

// GetVmName returns the VmName field value
func (o *VcenterVchaPlacementInfo) GetVmName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VmName
}

// GetVmNameOk returns a tuple with the VmName field value
// and a boolean to check if the value has been set.
func (o *VcenterVchaPlacementInfo) GetVmNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VmName, true
}

// SetVmName sets field value
func (o *VcenterVchaPlacementInfo) SetVmName(v string) {
	o.VmName = v
}

// GetDatacenter returns the Datacenter field value
func (o *VcenterVchaPlacementInfo) GetDatacenter() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Datacenter
}

// GetDatacenterOk returns a tuple with the Datacenter field value
// and a boolean to check if the value has been set.
func (o *VcenterVchaPlacementInfo) GetDatacenterOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Datacenter, true
}

// SetDatacenter sets field value
func (o *VcenterVchaPlacementInfo) SetDatacenter(v string) {
	o.Datacenter = v
}

// GetDatacenterName returns the DatacenterName field value
func (o *VcenterVchaPlacementInfo) GetDatacenterName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DatacenterName
}

// GetDatacenterNameOk returns a tuple with the DatacenterName field value
// and a boolean to check if the value has been set.
func (o *VcenterVchaPlacementInfo) GetDatacenterNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DatacenterName, true
}

// SetDatacenterName sets field value
func (o *VcenterVchaPlacementInfo) SetDatacenterName(v string) {
	o.DatacenterName = v
}

// GetHost returns the Host field value
func (o *VcenterVchaPlacementInfo) GetHost() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Host
}

// GetHostOk returns a tuple with the Host field value
// and a boolean to check if the value has been set.
func (o *VcenterVchaPlacementInfo) GetHostOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Host, true
}

// SetHost sets field value
func (o *VcenterVchaPlacementInfo) SetHost(v string) {
	o.Host = v
}

// GetHostName returns the HostName field value
func (o *VcenterVchaPlacementInfo) GetHostName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HostName
}

// GetHostNameOk returns a tuple with the HostName field value
// and a boolean to check if the value has been set.
func (o *VcenterVchaPlacementInfo) GetHostNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.HostName, true
}

// SetHostName sets field value
func (o *VcenterVchaPlacementInfo) SetHostName(v string) {
	o.HostName = v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *VcenterVchaPlacementInfo) GetCluster() string {
	if o == nil || o.Cluster == nil {
		var ret string
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVchaPlacementInfo) GetClusterOk() (*string, bool) {
	if o == nil || o.Cluster == nil {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *VcenterVchaPlacementInfo) HasCluster() bool {
	if o != nil && o.Cluster != nil {
		return true
	}

	return false
}

// SetCluster gets a reference to the given string and assigns it to the Cluster field.
func (o *VcenterVchaPlacementInfo) SetCluster(v string) {
	o.Cluster = &v
}

// GetClusterName returns the ClusterName field value if set, zero value otherwise.
func (o *VcenterVchaPlacementInfo) GetClusterName() string {
	if o == nil || o.ClusterName == nil {
		var ret string
		return ret
	}
	return *o.ClusterName
}

// GetClusterNameOk returns a tuple with the ClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVchaPlacementInfo) GetClusterNameOk() (*string, bool) {
	if o == nil || o.ClusterName == nil {
		return nil, false
	}
	return o.ClusterName, true
}

// HasClusterName returns a boolean if a field has been set.
func (o *VcenterVchaPlacementInfo) HasClusterName() bool {
	if o != nil && o.ClusterName != nil {
		return true
	}

	return false
}

// SetClusterName gets a reference to the given string and assigns it to the ClusterName field.
func (o *VcenterVchaPlacementInfo) SetClusterName(v string) {
	o.ClusterName = &v
}

// GetHaNetwork returns the HaNetwork field value if set, zero value otherwise.
func (o *VcenterVchaPlacementInfo) GetHaNetwork() string {
	if o == nil || o.HaNetwork == nil {
		var ret string
		return ret
	}
	return *o.HaNetwork
}

// GetHaNetworkOk returns a tuple with the HaNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVchaPlacementInfo) GetHaNetworkOk() (*string, bool) {
	if o == nil || o.HaNetwork == nil {
		return nil, false
	}
	return o.HaNetwork, true
}

// HasHaNetwork returns a boolean if a field has been set.
func (o *VcenterVchaPlacementInfo) HasHaNetwork() bool {
	if o != nil && o.HaNetwork != nil {
		return true
	}

	return false
}

// SetHaNetwork gets a reference to the given string and assigns it to the HaNetwork field.
func (o *VcenterVchaPlacementInfo) SetHaNetwork(v string) {
	o.HaNetwork = &v
}

// GetHaNetworkName returns the HaNetworkName field value if set, zero value otherwise.
func (o *VcenterVchaPlacementInfo) GetHaNetworkName() string {
	if o == nil || o.HaNetworkName == nil {
		var ret string
		return ret
	}
	return *o.HaNetworkName
}

// GetHaNetworkNameOk returns a tuple with the HaNetworkName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVchaPlacementInfo) GetHaNetworkNameOk() (*string, bool) {
	if o == nil || o.HaNetworkName == nil {
		return nil, false
	}
	return o.HaNetworkName, true
}

// HasHaNetworkName returns a boolean if a field has been set.
func (o *VcenterVchaPlacementInfo) HasHaNetworkName() bool {
	if o != nil && o.HaNetworkName != nil {
		return true
	}

	return false
}

// SetHaNetworkName gets a reference to the given string and assigns it to the HaNetworkName field.
func (o *VcenterVchaPlacementInfo) SetHaNetworkName(v string) {
	o.HaNetworkName = &v
}

// GetHaNetworkType returns the HaNetworkType field value if set, zero value otherwise.
func (o *VcenterVchaPlacementInfo) GetHaNetworkType() VcenterVchaNetworkType {
	if o == nil || o.HaNetworkType == nil {
		var ret VcenterVchaNetworkType
		return ret
	}
	return *o.HaNetworkType
}

// GetHaNetworkTypeOk returns a tuple with the HaNetworkType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVchaPlacementInfo) GetHaNetworkTypeOk() (*VcenterVchaNetworkType, bool) {
	if o == nil || o.HaNetworkType == nil {
		return nil, false
	}
	return o.HaNetworkType, true
}

// HasHaNetworkType returns a boolean if a field has been set.
func (o *VcenterVchaPlacementInfo) HasHaNetworkType() bool {
	if o != nil && o.HaNetworkType != nil {
		return true
	}

	return false
}

// SetHaNetworkType gets a reference to the given VcenterVchaNetworkType and assigns it to the HaNetworkType field.
func (o *VcenterVchaPlacementInfo) SetHaNetworkType(v VcenterVchaNetworkType) {
	o.HaNetworkType = &v
}

// GetManagementNetwork returns the ManagementNetwork field value
func (o *VcenterVchaPlacementInfo) GetManagementNetwork() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ManagementNetwork
}

// GetManagementNetworkOk returns a tuple with the ManagementNetwork field value
// and a boolean to check if the value has been set.
func (o *VcenterVchaPlacementInfo) GetManagementNetworkOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ManagementNetwork, true
}

// SetManagementNetwork sets field value
func (o *VcenterVchaPlacementInfo) SetManagementNetwork(v string) {
	o.ManagementNetwork = v
}

// GetManagementNetworkName returns the ManagementNetworkName field value
func (o *VcenterVchaPlacementInfo) GetManagementNetworkName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ManagementNetworkName
}

// GetManagementNetworkNameOk returns a tuple with the ManagementNetworkName field value
// and a boolean to check if the value has been set.
func (o *VcenterVchaPlacementInfo) GetManagementNetworkNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ManagementNetworkName, true
}

// SetManagementNetworkName sets field value
func (o *VcenterVchaPlacementInfo) SetManagementNetworkName(v string) {
	o.ManagementNetworkName = v
}

// GetManagementNetworkType returns the ManagementNetworkType field value
func (o *VcenterVchaPlacementInfo) GetManagementNetworkType() VcenterVchaNetworkType {
	if o == nil {
		var ret VcenterVchaNetworkType
		return ret
	}

	return o.ManagementNetworkType
}

// GetManagementNetworkTypeOk returns a tuple with the ManagementNetworkType field value
// and a boolean to check if the value has been set.
func (o *VcenterVchaPlacementInfo) GetManagementNetworkTypeOk() (*VcenterVchaNetworkType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ManagementNetworkType, true
}

// SetManagementNetworkType sets field value
func (o *VcenterVchaPlacementInfo) SetManagementNetworkType(v VcenterVchaNetworkType) {
	o.ManagementNetworkType = v
}

// GetStorage returns the Storage field value
func (o *VcenterVchaPlacementInfo) GetStorage() VcenterVchaDiskInfo {
	if o == nil {
		var ret VcenterVchaDiskInfo
		return ret
	}

	return o.Storage
}

// GetStorageOk returns a tuple with the Storage field value
// and a boolean to check if the value has been set.
func (o *VcenterVchaPlacementInfo) GetStorageOk() (*VcenterVchaDiskInfo, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Storage, true
}

// SetStorage sets field value
func (o *VcenterVchaPlacementInfo) SetStorage(v VcenterVchaDiskInfo) {
	o.Storage = v
}

// GetBiosUuid returns the BiosUuid field value if set, zero value otherwise.
func (o *VcenterVchaPlacementInfo) GetBiosUuid() string {
	if o == nil || o.BiosUuid == nil {
		var ret string
		return ret
	}
	return *o.BiosUuid
}

// GetBiosUuidOk returns a tuple with the BiosUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVchaPlacementInfo) GetBiosUuidOk() (*string, bool) {
	if o == nil || o.BiosUuid == nil {
		return nil, false
	}
	return o.BiosUuid, true
}

// HasBiosUuid returns a boolean if a field has been set.
func (o *VcenterVchaPlacementInfo) HasBiosUuid() bool {
	if o != nil && o.BiosUuid != nil {
		return true
	}

	return false
}

// SetBiosUuid gets a reference to the given string and assigns it to the BiosUuid field.
func (o *VcenterVchaPlacementInfo) SetBiosUuid(v string) {
	o.BiosUuid = &v
}

func (o VcenterVchaPlacementInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["management_vcenter_name"] = o.ManagementVcenterName
	}
	if o.ManagementVcenterServerGuid != nil {
		toSerialize["management_vcenter_server_guid"] = o.ManagementVcenterServerGuid
	}
	if true {
		toSerialize["vm_name"] = o.VmName
	}
	if true {
		toSerialize["datacenter"] = o.Datacenter
	}
	if true {
		toSerialize["datacenter_name"] = o.DatacenterName
	}
	if true {
		toSerialize["host"] = o.Host
	}
	if true {
		toSerialize["host_name"] = o.HostName
	}
	if o.Cluster != nil {
		toSerialize["cluster"] = o.Cluster
	}
	if o.ClusterName != nil {
		toSerialize["cluster_name"] = o.ClusterName
	}
	if o.HaNetwork != nil {
		toSerialize["ha_network"] = o.HaNetwork
	}
	if o.HaNetworkName != nil {
		toSerialize["ha_network_name"] = o.HaNetworkName
	}
	if o.HaNetworkType != nil {
		toSerialize["ha_network_type"] = o.HaNetworkType
	}
	if true {
		toSerialize["management_network"] = o.ManagementNetwork
	}
	if true {
		toSerialize["management_network_name"] = o.ManagementNetworkName
	}
	if true {
		toSerialize["management_network_type"] = o.ManagementNetworkType
	}
	if true {
		toSerialize["storage"] = o.Storage
	}
	if o.BiosUuid != nil {
		toSerialize["bios_uuid"] = o.BiosUuid
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterVchaPlacementInfo struct {
	value *VcenterVchaPlacementInfo
	isSet bool
}

func (v NullableVcenterVchaPlacementInfo) Get() *VcenterVchaPlacementInfo {
	return v.value
}

func (v *NullableVcenterVchaPlacementInfo) Set(val *VcenterVchaPlacementInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterVchaPlacementInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterVchaPlacementInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterVchaPlacementInfo(val *VcenterVchaPlacementInfo) *NullableVcenterVchaPlacementInfo {
	return &NullableVcenterVchaPlacementInfo{value: val, isSet: true}
}

func (v NullableVcenterVchaPlacementInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterVchaPlacementInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


