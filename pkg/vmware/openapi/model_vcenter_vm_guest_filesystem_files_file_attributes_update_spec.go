/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// VcenterVmGuestFilesystemFilesFileAttributesUpdateSpec struct for VcenterVmGuestFilesystemFilesFileAttributesUpdateSpec
type VcenterVmGuestFilesystemFilesFileAttributesUpdateSpec struct {
	// The date and time the file was last modified. If unset the value will not be changed.
	LastModified *time.Time `json:"last_modified,omitempty"`
	// The date and time the file was last accessed. If unset the value will not be changed.
	LastAccessed *time.Time `json:"last_accessed,omitempty"`
	Windows *VcenterVmGuestFilesystemFilesWindowsFileAttributesUpdateSpec `json:"windows,omitempty"`
	Posix *VcenterVmGuestFilesystemFilesPosixFileAttributesUpdateSpec `json:"posix,omitempty"`
}

// NewVcenterVmGuestFilesystemFilesFileAttributesUpdateSpec instantiates a new VcenterVmGuestFilesystemFilesFileAttributesUpdateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterVmGuestFilesystemFilesFileAttributesUpdateSpec() *VcenterVmGuestFilesystemFilesFileAttributesUpdateSpec {
	this := VcenterVmGuestFilesystemFilesFileAttributesUpdateSpec{}
	return &this
}

// NewVcenterVmGuestFilesystemFilesFileAttributesUpdateSpecWithDefaults instantiates a new VcenterVmGuestFilesystemFilesFileAttributesUpdateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterVmGuestFilesystemFilesFileAttributesUpdateSpecWithDefaults() *VcenterVmGuestFilesystemFilesFileAttributesUpdateSpec {
	this := VcenterVmGuestFilesystemFilesFileAttributesUpdateSpec{}
	return &this
}

// GetLastModified returns the LastModified field value if set, zero value otherwise.
func (o *VcenterVmGuestFilesystemFilesFileAttributesUpdateSpec) GetLastModified() time.Time {
	if o == nil || o.LastModified == nil {
		var ret time.Time
		return ret
	}
	return *o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmGuestFilesystemFilesFileAttributesUpdateSpec) GetLastModifiedOk() (*time.Time, bool) {
	if o == nil || o.LastModified == nil {
		return nil, false
	}
	return o.LastModified, true
}

// HasLastModified returns a boolean if a field has been set.
func (o *VcenterVmGuestFilesystemFilesFileAttributesUpdateSpec) HasLastModified() bool {
	if o != nil && o.LastModified != nil {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given time.Time and assigns it to the LastModified field.
func (o *VcenterVmGuestFilesystemFilesFileAttributesUpdateSpec) SetLastModified(v time.Time) {
	o.LastModified = &v
}

// GetLastAccessed returns the LastAccessed field value if set, zero value otherwise.
func (o *VcenterVmGuestFilesystemFilesFileAttributesUpdateSpec) GetLastAccessed() time.Time {
	if o == nil || o.LastAccessed == nil {
		var ret time.Time
		return ret
	}
	return *o.LastAccessed
}

// GetLastAccessedOk returns a tuple with the LastAccessed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmGuestFilesystemFilesFileAttributesUpdateSpec) GetLastAccessedOk() (*time.Time, bool) {
	if o == nil || o.LastAccessed == nil {
		return nil, false
	}
	return o.LastAccessed, true
}

// HasLastAccessed returns a boolean if a field has been set.
func (o *VcenterVmGuestFilesystemFilesFileAttributesUpdateSpec) HasLastAccessed() bool {
	if o != nil && o.LastAccessed != nil {
		return true
	}

	return false
}

// SetLastAccessed gets a reference to the given time.Time and assigns it to the LastAccessed field.
func (o *VcenterVmGuestFilesystemFilesFileAttributesUpdateSpec) SetLastAccessed(v time.Time) {
	o.LastAccessed = &v
}

// GetWindows returns the Windows field value if set, zero value otherwise.
func (o *VcenterVmGuestFilesystemFilesFileAttributesUpdateSpec) GetWindows() VcenterVmGuestFilesystemFilesWindowsFileAttributesUpdateSpec {
	if o == nil || o.Windows == nil {
		var ret VcenterVmGuestFilesystemFilesWindowsFileAttributesUpdateSpec
		return ret
	}
	return *o.Windows
}

// GetWindowsOk returns a tuple with the Windows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmGuestFilesystemFilesFileAttributesUpdateSpec) GetWindowsOk() (*VcenterVmGuestFilesystemFilesWindowsFileAttributesUpdateSpec, bool) {
	if o == nil || o.Windows == nil {
		return nil, false
	}
	return o.Windows, true
}

// HasWindows returns a boolean if a field has been set.
func (o *VcenterVmGuestFilesystemFilesFileAttributesUpdateSpec) HasWindows() bool {
	if o != nil && o.Windows != nil {
		return true
	}

	return false
}

// SetWindows gets a reference to the given VcenterVmGuestFilesystemFilesWindowsFileAttributesUpdateSpec and assigns it to the Windows field.
func (o *VcenterVmGuestFilesystemFilesFileAttributesUpdateSpec) SetWindows(v VcenterVmGuestFilesystemFilesWindowsFileAttributesUpdateSpec) {
	o.Windows = &v
}

// GetPosix returns the Posix field value if set, zero value otherwise.
func (o *VcenterVmGuestFilesystemFilesFileAttributesUpdateSpec) GetPosix() VcenterVmGuestFilesystemFilesPosixFileAttributesUpdateSpec {
	if o == nil || o.Posix == nil {
		var ret VcenterVmGuestFilesystemFilesPosixFileAttributesUpdateSpec
		return ret
	}
	return *o.Posix
}

// GetPosixOk returns a tuple with the Posix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmGuestFilesystemFilesFileAttributesUpdateSpec) GetPosixOk() (*VcenterVmGuestFilesystemFilesPosixFileAttributesUpdateSpec, bool) {
	if o == nil || o.Posix == nil {
		return nil, false
	}
	return o.Posix, true
}

// HasPosix returns a boolean if a field has been set.
func (o *VcenterVmGuestFilesystemFilesFileAttributesUpdateSpec) HasPosix() bool {
	if o != nil && o.Posix != nil {
		return true
	}

	return false
}

// SetPosix gets a reference to the given VcenterVmGuestFilesystemFilesPosixFileAttributesUpdateSpec and assigns it to the Posix field.
func (o *VcenterVmGuestFilesystemFilesFileAttributesUpdateSpec) SetPosix(v VcenterVmGuestFilesystemFilesPosixFileAttributesUpdateSpec) {
	o.Posix = &v
}

func (o VcenterVmGuestFilesystemFilesFileAttributesUpdateSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LastModified != nil {
		toSerialize["last_modified"] = o.LastModified
	}
	if o.LastAccessed != nil {
		toSerialize["last_accessed"] = o.LastAccessed
	}
	if o.Windows != nil {
		toSerialize["windows"] = o.Windows
	}
	if o.Posix != nil {
		toSerialize["posix"] = o.Posix
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterVmGuestFilesystemFilesFileAttributesUpdateSpec struct {
	value *VcenterVmGuestFilesystemFilesFileAttributesUpdateSpec
	isSet bool
}

func (v NullableVcenterVmGuestFilesystemFilesFileAttributesUpdateSpec) Get() *VcenterVmGuestFilesystemFilesFileAttributesUpdateSpec {
	return v.value
}

func (v *NullableVcenterVmGuestFilesystemFilesFileAttributesUpdateSpec) Set(val *VcenterVmGuestFilesystemFilesFileAttributesUpdateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterVmGuestFilesystemFilesFileAttributesUpdateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterVmGuestFilesystemFilesFileAttributesUpdateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterVmGuestFilesystemFilesFileAttributesUpdateSpec(val *VcenterVmGuestFilesystemFilesFileAttributesUpdateSpec) *NullableVcenterVmGuestFilesystemFilesFileAttributesUpdateSpec {
	return &NullableVcenterVmGuestFilesystemFilesFileAttributesUpdateSpec{value: val, isSet: true}
}

func (v NullableVcenterVmGuestFilesystemFilesFileAttributesUpdateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterVmGuestFilesystemFilesFileAttributesUpdateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


