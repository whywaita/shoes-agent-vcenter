/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterVmStoragePolicyComplianceCheckVmStoragePolicyCompliance struct for VcenterVmStoragePolicyComplianceCheckVmStoragePolicyCompliance
type VcenterVmStoragePolicyComplianceCheckVmStoragePolicyCompliance struct {
	CheckSpec *VcenterVmStoragePolicyComplianceCheckSpec `json:"check_spec,omitempty"`
}

// NewVcenterVmStoragePolicyComplianceCheckVmStoragePolicyCompliance instantiates a new VcenterVmStoragePolicyComplianceCheckVmStoragePolicyCompliance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterVmStoragePolicyComplianceCheckVmStoragePolicyCompliance() *VcenterVmStoragePolicyComplianceCheckVmStoragePolicyCompliance {
	this := VcenterVmStoragePolicyComplianceCheckVmStoragePolicyCompliance{}
	return &this
}

// NewVcenterVmStoragePolicyComplianceCheckVmStoragePolicyComplianceWithDefaults instantiates a new VcenterVmStoragePolicyComplianceCheckVmStoragePolicyCompliance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterVmStoragePolicyComplianceCheckVmStoragePolicyComplianceWithDefaults() *VcenterVmStoragePolicyComplianceCheckVmStoragePolicyCompliance {
	this := VcenterVmStoragePolicyComplianceCheckVmStoragePolicyCompliance{}
	return &this
}

// GetCheckSpec returns the CheckSpec field value if set, zero value otherwise.
func (o *VcenterVmStoragePolicyComplianceCheckVmStoragePolicyCompliance) GetCheckSpec() VcenterVmStoragePolicyComplianceCheckSpec {
	if o == nil || o.CheckSpec == nil {
		var ret VcenterVmStoragePolicyComplianceCheckSpec
		return ret
	}
	return *o.CheckSpec
}

// GetCheckSpecOk returns a tuple with the CheckSpec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmStoragePolicyComplianceCheckVmStoragePolicyCompliance) GetCheckSpecOk() (*VcenterVmStoragePolicyComplianceCheckSpec, bool) {
	if o == nil || o.CheckSpec == nil {
		return nil, false
	}
	return o.CheckSpec, true
}

// HasCheckSpec returns a boolean if a field has been set.
func (o *VcenterVmStoragePolicyComplianceCheckVmStoragePolicyCompliance) HasCheckSpec() bool {
	if o != nil && o.CheckSpec != nil {
		return true
	}

	return false
}

// SetCheckSpec gets a reference to the given VcenterVmStoragePolicyComplianceCheckSpec and assigns it to the CheckSpec field.
func (o *VcenterVmStoragePolicyComplianceCheckVmStoragePolicyCompliance) SetCheckSpec(v VcenterVmStoragePolicyComplianceCheckSpec) {
	o.CheckSpec = &v
}

func (o VcenterVmStoragePolicyComplianceCheckVmStoragePolicyCompliance) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CheckSpec != nil {
		toSerialize["check_spec"] = o.CheckSpec
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterVmStoragePolicyComplianceCheckVmStoragePolicyCompliance struct {
	value *VcenterVmStoragePolicyComplianceCheckVmStoragePolicyCompliance
	isSet bool
}

func (v NullableVcenterVmStoragePolicyComplianceCheckVmStoragePolicyCompliance) Get() *VcenterVmStoragePolicyComplianceCheckVmStoragePolicyCompliance {
	return v.value
}

func (v *NullableVcenterVmStoragePolicyComplianceCheckVmStoragePolicyCompliance) Set(val *VcenterVmStoragePolicyComplianceCheckVmStoragePolicyCompliance) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterVmStoragePolicyComplianceCheckVmStoragePolicyCompliance) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterVmStoragePolicyComplianceCheckVmStoragePolicyCompliance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterVmStoragePolicyComplianceCheckVmStoragePolicyCompliance(val *VcenterVmStoragePolicyComplianceCheckVmStoragePolicyCompliance) *NullableVcenterVmStoragePolicyComplianceCheckVmStoragePolicyCompliance {
	return &NullableVcenterVmStoragePolicyComplianceCheckVmStoragePolicyCompliance{value: val, isSet: true}
}

func (v NullableVcenterVmStoragePolicyComplianceCheckVmStoragePolicyCompliance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterVmStoragePolicyComplianceCheckVmStoragePolicyCompliance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


