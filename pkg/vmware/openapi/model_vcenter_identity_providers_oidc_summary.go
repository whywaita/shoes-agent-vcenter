/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterIdentityProvidersOidcSummary struct for VcenterIdentityProvidersOidcSummary
type VcenterIdentityProvidersOidcSummary struct {
	// Endpoint to retrieve the provider metadata This field is optional because it was added in a newer version than its parent node.
	DiscoveryEndpoint *string `json:"discovery_endpoint,omitempty"`
	// The endpoint to use for terminating the user's session at the identity provider. This value is automatically derived from the metadata information provided by the OIDC discovery endpoint. This field is optional because it was added in a newer version than its parent node.
	LogoutEndpoint *string `json:"logout_endpoint,omitempty"`
	// Authentication/authorization endpoint of the provider
	AuthEndpoint string `json:"auth_endpoint"`
	// Token endpoint of the provider
	TokenEndpoint string `json:"token_endpoint"`
	// Client identifier to connect to the provider
	ClientId string `json:"client_id"`
	// The authentication data used as part of request header to acquire or refresh an OAuth2 token. The data format depends on the authentication method used. Example of basic authentication format: Authorization: Basic [base64Encode(clientId + \":\" + secret)]
	AuthenticationHeader string `json:"authentication_header"`
	//  key/value pairs that are to be appended to the authEndpoint request.   How to append to authEndpoint request:  If the map is not empty, a \"?\" is added to the endpoint URL, and combination of each k and each string in the v is added with an \"&\" delimiter. Details:    - If the value contains only one string, then the key is added with \"k=v\".    - If the value is an empty list, then the key is added without a \"=v\".    - If the value contains multiple strings, then the key is repeated in the query-string for each string in the value. 
	AuthQueryParams []VcenterIdentityProvidersCreateSpecAuthQueryParams `json:"auth_query_params"`
}

// NewVcenterIdentityProvidersOidcSummary instantiates a new VcenterIdentityProvidersOidcSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterIdentityProvidersOidcSummary(authEndpoint string, tokenEndpoint string, clientId string, authenticationHeader string, authQueryParams []VcenterIdentityProvidersCreateSpecAuthQueryParams) *VcenterIdentityProvidersOidcSummary {
	this := VcenterIdentityProvidersOidcSummary{}
	this.AuthEndpoint = authEndpoint
	this.TokenEndpoint = tokenEndpoint
	this.ClientId = clientId
	this.AuthenticationHeader = authenticationHeader
	this.AuthQueryParams = authQueryParams
	return &this
}

// NewVcenterIdentityProvidersOidcSummaryWithDefaults instantiates a new VcenterIdentityProvidersOidcSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterIdentityProvidersOidcSummaryWithDefaults() *VcenterIdentityProvidersOidcSummary {
	this := VcenterIdentityProvidersOidcSummary{}
	return &this
}

// GetDiscoveryEndpoint returns the DiscoveryEndpoint field value if set, zero value otherwise.
func (o *VcenterIdentityProvidersOidcSummary) GetDiscoveryEndpoint() string {
	if o == nil || o.DiscoveryEndpoint == nil {
		var ret string
		return ret
	}
	return *o.DiscoveryEndpoint
}

// GetDiscoveryEndpointOk returns a tuple with the DiscoveryEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterIdentityProvidersOidcSummary) GetDiscoveryEndpointOk() (*string, bool) {
	if o == nil || o.DiscoveryEndpoint == nil {
		return nil, false
	}
	return o.DiscoveryEndpoint, true
}

// HasDiscoveryEndpoint returns a boolean if a field has been set.
func (o *VcenterIdentityProvidersOidcSummary) HasDiscoveryEndpoint() bool {
	if o != nil && o.DiscoveryEndpoint != nil {
		return true
	}

	return false
}

// SetDiscoveryEndpoint gets a reference to the given string and assigns it to the DiscoveryEndpoint field.
func (o *VcenterIdentityProvidersOidcSummary) SetDiscoveryEndpoint(v string) {
	o.DiscoveryEndpoint = &v
}

// GetLogoutEndpoint returns the LogoutEndpoint field value if set, zero value otherwise.
func (o *VcenterIdentityProvidersOidcSummary) GetLogoutEndpoint() string {
	if o == nil || o.LogoutEndpoint == nil {
		var ret string
		return ret
	}
	return *o.LogoutEndpoint
}

// GetLogoutEndpointOk returns a tuple with the LogoutEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterIdentityProvidersOidcSummary) GetLogoutEndpointOk() (*string, bool) {
	if o == nil || o.LogoutEndpoint == nil {
		return nil, false
	}
	return o.LogoutEndpoint, true
}

// HasLogoutEndpoint returns a boolean if a field has been set.
func (o *VcenterIdentityProvidersOidcSummary) HasLogoutEndpoint() bool {
	if o != nil && o.LogoutEndpoint != nil {
		return true
	}

	return false
}

// SetLogoutEndpoint gets a reference to the given string and assigns it to the LogoutEndpoint field.
func (o *VcenterIdentityProvidersOidcSummary) SetLogoutEndpoint(v string) {
	o.LogoutEndpoint = &v
}

// GetAuthEndpoint returns the AuthEndpoint field value
func (o *VcenterIdentityProvidersOidcSummary) GetAuthEndpoint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthEndpoint
}

// GetAuthEndpointOk returns a tuple with the AuthEndpoint field value
// and a boolean to check if the value has been set.
func (o *VcenterIdentityProvidersOidcSummary) GetAuthEndpointOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AuthEndpoint, true
}

// SetAuthEndpoint sets field value
func (o *VcenterIdentityProvidersOidcSummary) SetAuthEndpoint(v string) {
	o.AuthEndpoint = v
}

// GetTokenEndpoint returns the TokenEndpoint field value
func (o *VcenterIdentityProvidersOidcSummary) GetTokenEndpoint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TokenEndpoint
}

// GetTokenEndpointOk returns a tuple with the TokenEndpoint field value
// and a boolean to check if the value has been set.
func (o *VcenterIdentityProvidersOidcSummary) GetTokenEndpointOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TokenEndpoint, true
}

// SetTokenEndpoint sets field value
func (o *VcenterIdentityProvidersOidcSummary) SetTokenEndpoint(v string) {
	o.TokenEndpoint = v
}

// GetClientId returns the ClientId field value
func (o *VcenterIdentityProvidersOidcSummary) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *VcenterIdentityProvidersOidcSummary) GetClientIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *VcenterIdentityProvidersOidcSummary) SetClientId(v string) {
	o.ClientId = v
}

// GetAuthenticationHeader returns the AuthenticationHeader field value
func (o *VcenterIdentityProvidersOidcSummary) GetAuthenticationHeader() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthenticationHeader
}

// GetAuthenticationHeaderOk returns a tuple with the AuthenticationHeader field value
// and a boolean to check if the value has been set.
func (o *VcenterIdentityProvidersOidcSummary) GetAuthenticationHeaderOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AuthenticationHeader, true
}

// SetAuthenticationHeader sets field value
func (o *VcenterIdentityProvidersOidcSummary) SetAuthenticationHeader(v string) {
	o.AuthenticationHeader = v
}

// GetAuthQueryParams returns the AuthQueryParams field value
func (o *VcenterIdentityProvidersOidcSummary) GetAuthQueryParams() []VcenterIdentityProvidersCreateSpecAuthQueryParams {
	if o == nil {
		var ret []VcenterIdentityProvidersCreateSpecAuthQueryParams
		return ret
	}

	return o.AuthQueryParams
}

// GetAuthQueryParamsOk returns a tuple with the AuthQueryParams field value
// and a boolean to check if the value has been set.
func (o *VcenterIdentityProvidersOidcSummary) GetAuthQueryParamsOk() (*[]VcenterIdentityProvidersCreateSpecAuthQueryParams, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AuthQueryParams, true
}

// SetAuthQueryParams sets field value
func (o *VcenterIdentityProvidersOidcSummary) SetAuthQueryParams(v []VcenterIdentityProvidersCreateSpecAuthQueryParams) {
	o.AuthQueryParams = v
}

func (o VcenterIdentityProvidersOidcSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DiscoveryEndpoint != nil {
		toSerialize["discovery_endpoint"] = o.DiscoveryEndpoint
	}
	if o.LogoutEndpoint != nil {
		toSerialize["logout_endpoint"] = o.LogoutEndpoint
	}
	if true {
		toSerialize["auth_endpoint"] = o.AuthEndpoint
	}
	if true {
		toSerialize["token_endpoint"] = o.TokenEndpoint
	}
	if true {
		toSerialize["client_id"] = o.ClientId
	}
	if true {
		toSerialize["authentication_header"] = o.AuthenticationHeader
	}
	if true {
		toSerialize["auth_query_params"] = o.AuthQueryParams
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterIdentityProvidersOidcSummary struct {
	value *VcenterIdentityProvidersOidcSummary
	isSet bool
}

func (v NullableVcenterIdentityProvidersOidcSummary) Get() *VcenterIdentityProvidersOidcSummary {
	return v.value
}

func (v *NullableVcenterIdentityProvidersOidcSummary) Set(val *VcenterIdentityProvidersOidcSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterIdentityProvidersOidcSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterIdentityProvidersOidcSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterIdentityProvidersOidcSummary(val *VcenterIdentityProvidersOidcSummary) *NullableVcenterIdentityProvidersOidcSummary {
	return &NullableVcenterIdentityProvidersOidcSummary{value: val, isSet: true}
}

func (v NullableVcenterIdentityProvidersOidcSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterIdentityProvidersOidcSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


