/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterVmGuestFilesystemTransfersCreateSpec struct for VcenterVmGuestFilesystemTransfersCreateSpec
type VcenterVmGuestFilesystemTransfersCreateSpec struct {
	// The complete destination path in the guest to transfer the file to or from the client. It cannot be a path to a directory or a symbolic link.
	Path string `json:"path"`
	Attributes *VcenterVmGuestFilesystemTransfersFileCreationAttributes `json:"attributes,omitempty"`
}

// NewVcenterVmGuestFilesystemTransfersCreateSpec instantiates a new VcenterVmGuestFilesystemTransfersCreateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterVmGuestFilesystemTransfersCreateSpec(path string) *VcenterVmGuestFilesystemTransfersCreateSpec {
	this := VcenterVmGuestFilesystemTransfersCreateSpec{}
	this.Path = path
	return &this
}

// NewVcenterVmGuestFilesystemTransfersCreateSpecWithDefaults instantiates a new VcenterVmGuestFilesystemTransfersCreateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterVmGuestFilesystemTransfersCreateSpecWithDefaults() *VcenterVmGuestFilesystemTransfersCreateSpec {
	this := VcenterVmGuestFilesystemTransfersCreateSpec{}
	return &this
}

// GetPath returns the Path field value
func (o *VcenterVmGuestFilesystemTransfersCreateSpec) GetPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *VcenterVmGuestFilesystemTransfersCreateSpec) GetPathOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Path, true
}

// SetPath sets field value
func (o *VcenterVmGuestFilesystemTransfersCreateSpec) SetPath(v string) {
	o.Path = v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *VcenterVmGuestFilesystemTransfersCreateSpec) GetAttributes() VcenterVmGuestFilesystemTransfersFileCreationAttributes {
	if o == nil || o.Attributes == nil {
		var ret VcenterVmGuestFilesystemTransfersFileCreationAttributes
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmGuestFilesystemTransfersCreateSpec) GetAttributesOk() (*VcenterVmGuestFilesystemTransfersFileCreationAttributes, bool) {
	if o == nil || o.Attributes == nil {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *VcenterVmGuestFilesystemTransfersCreateSpec) HasAttributes() bool {
	if o != nil && o.Attributes != nil {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given VcenterVmGuestFilesystemTransfersFileCreationAttributes and assigns it to the Attributes field.
func (o *VcenterVmGuestFilesystemTransfersCreateSpec) SetAttributes(v VcenterVmGuestFilesystemTransfersFileCreationAttributes) {
	o.Attributes = &v
}

func (o VcenterVmGuestFilesystemTransfersCreateSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["path"] = o.Path
	}
	if o.Attributes != nil {
		toSerialize["attributes"] = o.Attributes
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterVmGuestFilesystemTransfersCreateSpec struct {
	value *VcenterVmGuestFilesystemTransfersCreateSpec
	isSet bool
}

func (v NullableVcenterVmGuestFilesystemTransfersCreateSpec) Get() *VcenterVmGuestFilesystemTransfersCreateSpec {
	return v.value
}

func (v *NullableVcenterVmGuestFilesystemTransfersCreateSpec) Set(val *VcenterVmGuestFilesystemTransfersCreateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterVmGuestFilesystemTransfersCreateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterVmGuestFilesystemTransfersCreateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterVmGuestFilesystemTransfersCreateSpec(val *VcenterVmGuestFilesystemTransfersCreateSpec) *NullableVcenterVmGuestFilesystemTransfersCreateSpec {
	return &NullableVcenterVmGuestFilesystemTransfersCreateSpec{value: val, isSet: true}
}

func (v NullableVcenterVmGuestFilesystemTransfersCreateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterVmGuestFilesystemTransfersCreateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


