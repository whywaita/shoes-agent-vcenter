/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterContentRegistriesHealthInfo struct for VcenterContentRegistriesHealthInfo
type VcenterContentRegistriesHealthInfo struct {
	Status VcenterContentRegistriesHealthStatus `json:"status"`
	Details *VapiStdLocalizableMessage `json:"details,omitempty"`
}

// NewVcenterContentRegistriesHealthInfo instantiates a new VcenterContentRegistriesHealthInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterContentRegistriesHealthInfo(status VcenterContentRegistriesHealthStatus) *VcenterContentRegistriesHealthInfo {
	this := VcenterContentRegistriesHealthInfo{}
	this.Status = status
	return &this
}

// NewVcenterContentRegistriesHealthInfoWithDefaults instantiates a new VcenterContentRegistriesHealthInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterContentRegistriesHealthInfoWithDefaults() *VcenterContentRegistriesHealthInfo {
	this := VcenterContentRegistriesHealthInfo{}
	return &this
}

// GetStatus returns the Status field value
func (o *VcenterContentRegistriesHealthInfo) GetStatus() VcenterContentRegistriesHealthStatus {
	if o == nil {
		var ret VcenterContentRegistriesHealthStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *VcenterContentRegistriesHealthInfo) GetStatusOk() (*VcenterContentRegistriesHealthStatus, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *VcenterContentRegistriesHealthInfo) SetStatus(v VcenterContentRegistriesHealthStatus) {
	o.Status = v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *VcenterContentRegistriesHealthInfo) GetDetails() VapiStdLocalizableMessage {
	if o == nil || o.Details == nil {
		var ret VapiStdLocalizableMessage
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterContentRegistriesHealthInfo) GetDetailsOk() (*VapiStdLocalizableMessage, bool) {
	if o == nil || o.Details == nil {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *VcenterContentRegistriesHealthInfo) HasDetails() bool {
	if o != nil && o.Details != nil {
		return true
	}

	return false
}

// SetDetails gets a reference to the given VapiStdLocalizableMessage and assigns it to the Details field.
func (o *VcenterContentRegistriesHealthInfo) SetDetails(v VapiStdLocalizableMessage) {
	o.Details = &v
}

func (o VcenterContentRegistriesHealthInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["status"] = o.Status
	}
	if o.Details != nil {
		toSerialize["details"] = o.Details
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterContentRegistriesHealthInfo struct {
	value *VcenterContentRegistriesHealthInfo
	isSet bool
}

func (v NullableVcenterContentRegistriesHealthInfo) Get() *VcenterContentRegistriesHealthInfo {
	return v.value
}

func (v *NullableVcenterContentRegistriesHealthInfo) Set(val *VcenterContentRegistriesHealthInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterContentRegistriesHealthInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterContentRegistriesHealthInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterContentRegistriesHealthInfo(val *VcenterContentRegistriesHealthInfo) *NullableVcenterContentRegistriesHealthInfo {
	return &NullableVcenterContentRegistriesHealthInfo{value: val, isSet: true}
}

func (v NullableVcenterContentRegistriesHealthInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterContentRegistriesHealthInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


