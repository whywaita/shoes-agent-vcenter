/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterVmHardwareMemoryGetVmHardwareMemoryResp struct for VcenterVmHardwareMemoryGetVmHardwareMemoryResp
type VcenterVmHardwareMemoryGetVmHardwareMemoryResp struct {
	Value VcenterVmHardwareMemoryInfo `json:"value"`
}

// NewVcenterVmHardwareMemoryGetVmHardwareMemoryResp instantiates a new VcenterVmHardwareMemoryGetVmHardwareMemoryResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterVmHardwareMemoryGetVmHardwareMemoryResp(value VcenterVmHardwareMemoryInfo) *VcenterVmHardwareMemoryGetVmHardwareMemoryResp {
	this := VcenterVmHardwareMemoryGetVmHardwareMemoryResp{}
	this.Value = value
	return &this
}

// NewVcenterVmHardwareMemoryGetVmHardwareMemoryRespWithDefaults instantiates a new VcenterVmHardwareMemoryGetVmHardwareMemoryResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterVmHardwareMemoryGetVmHardwareMemoryRespWithDefaults() *VcenterVmHardwareMemoryGetVmHardwareMemoryResp {
	this := VcenterVmHardwareMemoryGetVmHardwareMemoryResp{}
	return &this
}

// GetValue returns the Value field value
func (o *VcenterVmHardwareMemoryGetVmHardwareMemoryResp) GetValue() VcenterVmHardwareMemoryInfo {
	if o == nil {
		var ret VcenterVmHardwareMemoryInfo
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *VcenterVmHardwareMemoryGetVmHardwareMemoryResp) GetValueOk() (*VcenterVmHardwareMemoryInfo, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *VcenterVmHardwareMemoryGetVmHardwareMemoryResp) SetValue(v VcenterVmHardwareMemoryInfo) {
	o.Value = v
}

func (o VcenterVmHardwareMemoryGetVmHardwareMemoryResp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterVmHardwareMemoryGetVmHardwareMemoryResp struct {
	value *VcenterVmHardwareMemoryGetVmHardwareMemoryResp
	isSet bool
}

func (v NullableVcenterVmHardwareMemoryGetVmHardwareMemoryResp) Get() *VcenterVmHardwareMemoryGetVmHardwareMemoryResp {
	return v.value
}

func (v *NullableVcenterVmHardwareMemoryGetVmHardwareMemoryResp) Set(val *VcenterVmHardwareMemoryGetVmHardwareMemoryResp) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterVmHardwareMemoryGetVmHardwareMemoryResp) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterVmHardwareMemoryGetVmHardwareMemoryResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterVmHardwareMemoryGetVmHardwareMemoryResp(val *VcenterVmHardwareMemoryGetVmHardwareMemoryResp) *NullableVcenterVmHardwareMemoryGetVmHardwareMemoryResp {
	return &NullableVcenterVmHardwareMemoryGetVmHardwareMemoryResp{value: val, isSet: true}
}

func (v NullableVcenterVmHardwareMemoryGetVmHardwareMemoryResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterVmHardwareMemoryGetVmHardwareMemoryResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


