/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterVmHardwareAdapterSataCreateSpec struct for VcenterVmHardwareAdapterSataCreateSpec
type VcenterVmHardwareAdapterSataCreateSpec struct {
	Type *VcenterVmHardwareAdapterSataType `json:"type,omitempty"`
	// SATA bus number. If unset, the server will choose an available bus number; if none is available, the request will fail.
	Bus *int64 `json:"bus,omitempty"`
	// Address of the SATA adapter on the PCI bus. If unset, the server will choose an available address when the virtual machine is powered on.
	PciSlotNumber *int64 `json:"pci_slot_number,omitempty"`
}

// NewVcenterVmHardwareAdapterSataCreateSpec instantiates a new VcenterVmHardwareAdapterSataCreateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterVmHardwareAdapterSataCreateSpec() *VcenterVmHardwareAdapterSataCreateSpec {
	this := VcenterVmHardwareAdapterSataCreateSpec{}
	return &this
}

// NewVcenterVmHardwareAdapterSataCreateSpecWithDefaults instantiates a new VcenterVmHardwareAdapterSataCreateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterVmHardwareAdapterSataCreateSpecWithDefaults() *VcenterVmHardwareAdapterSataCreateSpec {
	this := VcenterVmHardwareAdapterSataCreateSpec{}
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *VcenterVmHardwareAdapterSataCreateSpec) GetType() VcenterVmHardwareAdapterSataType {
	if o == nil || o.Type == nil {
		var ret VcenterVmHardwareAdapterSataType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmHardwareAdapterSataCreateSpec) GetTypeOk() (*VcenterVmHardwareAdapterSataType, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *VcenterVmHardwareAdapterSataCreateSpec) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given VcenterVmHardwareAdapterSataType and assigns it to the Type field.
func (o *VcenterVmHardwareAdapterSataCreateSpec) SetType(v VcenterVmHardwareAdapterSataType) {
	o.Type = &v
}

// GetBus returns the Bus field value if set, zero value otherwise.
func (o *VcenterVmHardwareAdapterSataCreateSpec) GetBus() int64 {
	if o == nil || o.Bus == nil {
		var ret int64
		return ret
	}
	return *o.Bus
}

// GetBusOk returns a tuple with the Bus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmHardwareAdapterSataCreateSpec) GetBusOk() (*int64, bool) {
	if o == nil || o.Bus == nil {
		return nil, false
	}
	return o.Bus, true
}

// HasBus returns a boolean if a field has been set.
func (o *VcenterVmHardwareAdapterSataCreateSpec) HasBus() bool {
	if o != nil && o.Bus != nil {
		return true
	}

	return false
}

// SetBus gets a reference to the given int64 and assigns it to the Bus field.
func (o *VcenterVmHardwareAdapterSataCreateSpec) SetBus(v int64) {
	o.Bus = &v
}

// GetPciSlotNumber returns the PciSlotNumber field value if set, zero value otherwise.
func (o *VcenterVmHardwareAdapterSataCreateSpec) GetPciSlotNumber() int64 {
	if o == nil || o.PciSlotNumber == nil {
		var ret int64
		return ret
	}
	return *o.PciSlotNumber
}

// GetPciSlotNumberOk returns a tuple with the PciSlotNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmHardwareAdapterSataCreateSpec) GetPciSlotNumberOk() (*int64, bool) {
	if o == nil || o.PciSlotNumber == nil {
		return nil, false
	}
	return o.PciSlotNumber, true
}

// HasPciSlotNumber returns a boolean if a field has been set.
func (o *VcenterVmHardwareAdapterSataCreateSpec) HasPciSlotNumber() bool {
	if o != nil && o.PciSlotNumber != nil {
		return true
	}

	return false
}

// SetPciSlotNumber gets a reference to the given int64 and assigns it to the PciSlotNumber field.
func (o *VcenterVmHardwareAdapterSataCreateSpec) SetPciSlotNumber(v int64) {
	o.PciSlotNumber = &v
}

func (o VcenterVmHardwareAdapterSataCreateSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Bus != nil {
		toSerialize["bus"] = o.Bus
	}
	if o.PciSlotNumber != nil {
		toSerialize["pci_slot_number"] = o.PciSlotNumber
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterVmHardwareAdapterSataCreateSpec struct {
	value *VcenterVmHardwareAdapterSataCreateSpec
	isSet bool
}

func (v NullableVcenterVmHardwareAdapterSataCreateSpec) Get() *VcenterVmHardwareAdapterSataCreateSpec {
	return v.value
}

func (v *NullableVcenterVmHardwareAdapterSataCreateSpec) Set(val *VcenterVmHardwareAdapterSataCreateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterVmHardwareAdapterSataCreateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterVmHardwareAdapterSataCreateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterVmHardwareAdapterSataCreateSpec(val *VcenterVmHardwareAdapterSataCreateSpec) *NullableVcenterVmHardwareAdapterSataCreateSpec {
	return &NullableVcenterVmHardwareAdapterSataCreateSpec{value: val, isSet: true}
}

func (v NullableVcenterVmHardwareAdapterSataCreateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterVmHardwareAdapterSataCreateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


