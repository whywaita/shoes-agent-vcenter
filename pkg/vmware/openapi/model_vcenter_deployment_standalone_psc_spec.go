/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterDeploymentStandalonePscSpec struct for VcenterDeploymentStandalonePscSpec
type VcenterDeploymentStandalonePscSpec struct {
	// The SSO site name used for this PSC. If unset, default-first-site will be used.
	SsoSiteName *string `json:"sso_site_name,omitempty"`
	// The SSO administrator account password.
	SsoAdminPassword string `json:"sso_admin_password"`
	// The SSO domain name to be used to configure this appliance. If unset, vsphere.local will be used.
	SsoDomainName *string `json:"sso_domain_name,omitempty"`
}

// NewVcenterDeploymentStandalonePscSpec instantiates a new VcenterDeploymentStandalonePscSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterDeploymentStandalonePscSpec(ssoAdminPassword string) *VcenterDeploymentStandalonePscSpec {
	this := VcenterDeploymentStandalonePscSpec{}
	this.SsoAdminPassword = ssoAdminPassword
	return &this
}

// NewVcenterDeploymentStandalonePscSpecWithDefaults instantiates a new VcenterDeploymentStandalonePscSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterDeploymentStandalonePscSpecWithDefaults() *VcenterDeploymentStandalonePscSpec {
	this := VcenterDeploymentStandalonePscSpec{}
	return &this
}

// GetSsoSiteName returns the SsoSiteName field value if set, zero value otherwise.
func (o *VcenterDeploymentStandalonePscSpec) GetSsoSiteName() string {
	if o == nil || o.SsoSiteName == nil {
		var ret string
		return ret
	}
	return *o.SsoSiteName
}

// GetSsoSiteNameOk returns a tuple with the SsoSiteName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterDeploymentStandalonePscSpec) GetSsoSiteNameOk() (*string, bool) {
	if o == nil || o.SsoSiteName == nil {
		return nil, false
	}
	return o.SsoSiteName, true
}

// HasSsoSiteName returns a boolean if a field has been set.
func (o *VcenterDeploymentStandalonePscSpec) HasSsoSiteName() bool {
	if o != nil && o.SsoSiteName != nil {
		return true
	}

	return false
}

// SetSsoSiteName gets a reference to the given string and assigns it to the SsoSiteName field.
func (o *VcenterDeploymentStandalonePscSpec) SetSsoSiteName(v string) {
	o.SsoSiteName = &v
}

// GetSsoAdminPassword returns the SsoAdminPassword field value
func (o *VcenterDeploymentStandalonePscSpec) GetSsoAdminPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SsoAdminPassword
}

// GetSsoAdminPasswordOk returns a tuple with the SsoAdminPassword field value
// and a boolean to check if the value has been set.
func (o *VcenterDeploymentStandalonePscSpec) GetSsoAdminPasswordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SsoAdminPassword, true
}

// SetSsoAdminPassword sets field value
func (o *VcenterDeploymentStandalonePscSpec) SetSsoAdminPassword(v string) {
	o.SsoAdminPassword = v
}

// GetSsoDomainName returns the SsoDomainName field value if set, zero value otherwise.
func (o *VcenterDeploymentStandalonePscSpec) GetSsoDomainName() string {
	if o == nil || o.SsoDomainName == nil {
		var ret string
		return ret
	}
	return *o.SsoDomainName
}

// GetSsoDomainNameOk returns a tuple with the SsoDomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterDeploymentStandalonePscSpec) GetSsoDomainNameOk() (*string, bool) {
	if o == nil || o.SsoDomainName == nil {
		return nil, false
	}
	return o.SsoDomainName, true
}

// HasSsoDomainName returns a boolean if a field has been set.
func (o *VcenterDeploymentStandalonePscSpec) HasSsoDomainName() bool {
	if o != nil && o.SsoDomainName != nil {
		return true
	}

	return false
}

// SetSsoDomainName gets a reference to the given string and assigns it to the SsoDomainName field.
func (o *VcenterDeploymentStandalonePscSpec) SetSsoDomainName(v string) {
	o.SsoDomainName = &v
}

func (o VcenterDeploymentStandalonePscSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SsoSiteName != nil {
		toSerialize["sso_site_name"] = o.SsoSiteName
	}
	if true {
		toSerialize["sso_admin_password"] = o.SsoAdminPassword
	}
	if o.SsoDomainName != nil {
		toSerialize["sso_domain_name"] = o.SsoDomainName
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterDeploymentStandalonePscSpec struct {
	value *VcenterDeploymentStandalonePscSpec
	isSet bool
}

func (v NullableVcenterDeploymentStandalonePscSpec) Get() *VcenterDeploymentStandalonePscSpec {
	return v.value
}

func (v *NullableVcenterDeploymentStandalonePscSpec) Set(val *VcenterDeploymentStandalonePscSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterDeploymentStandalonePscSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterDeploymentStandalonePscSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterDeploymentStandalonePscSpec(val *VcenterDeploymentStandalonePscSpec) *NullableVcenterDeploymentStandalonePscSpec {
	return &NullableVcenterDeploymentStandalonePscSpec{value: val, isSet: true}
}

func (v NullableVcenterDeploymentStandalonePscSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterDeploymentStandalonePscSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


