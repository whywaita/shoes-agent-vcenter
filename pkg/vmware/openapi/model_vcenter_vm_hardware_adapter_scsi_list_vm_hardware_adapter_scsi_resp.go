/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterVmHardwareAdapterScsiListVmHardwareAdapterScsiResp struct for VcenterVmHardwareAdapterScsiListVmHardwareAdapterScsiResp
type VcenterVmHardwareAdapterScsiListVmHardwareAdapterScsiResp struct {
	Value []VcenterVmHardwareAdapterScsiSummary `json:"value"`
}

// NewVcenterVmHardwareAdapterScsiListVmHardwareAdapterScsiResp instantiates a new VcenterVmHardwareAdapterScsiListVmHardwareAdapterScsiResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterVmHardwareAdapterScsiListVmHardwareAdapterScsiResp(value []VcenterVmHardwareAdapterScsiSummary) *VcenterVmHardwareAdapterScsiListVmHardwareAdapterScsiResp {
	this := VcenterVmHardwareAdapterScsiListVmHardwareAdapterScsiResp{}
	this.Value = value
	return &this
}

// NewVcenterVmHardwareAdapterScsiListVmHardwareAdapterScsiRespWithDefaults instantiates a new VcenterVmHardwareAdapterScsiListVmHardwareAdapterScsiResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterVmHardwareAdapterScsiListVmHardwareAdapterScsiRespWithDefaults() *VcenterVmHardwareAdapterScsiListVmHardwareAdapterScsiResp {
	this := VcenterVmHardwareAdapterScsiListVmHardwareAdapterScsiResp{}
	return &this
}

// GetValue returns the Value field value
func (o *VcenterVmHardwareAdapterScsiListVmHardwareAdapterScsiResp) GetValue() []VcenterVmHardwareAdapterScsiSummary {
	if o == nil {
		var ret []VcenterVmHardwareAdapterScsiSummary
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *VcenterVmHardwareAdapterScsiListVmHardwareAdapterScsiResp) GetValueOk() (*[]VcenterVmHardwareAdapterScsiSummary, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *VcenterVmHardwareAdapterScsiListVmHardwareAdapterScsiResp) SetValue(v []VcenterVmHardwareAdapterScsiSummary) {
	o.Value = v
}

func (o VcenterVmHardwareAdapterScsiListVmHardwareAdapterScsiResp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterVmHardwareAdapterScsiListVmHardwareAdapterScsiResp struct {
	value *VcenterVmHardwareAdapterScsiListVmHardwareAdapterScsiResp
	isSet bool
}

func (v NullableVcenterVmHardwareAdapterScsiListVmHardwareAdapterScsiResp) Get() *VcenterVmHardwareAdapterScsiListVmHardwareAdapterScsiResp {
	return v.value
}

func (v *NullableVcenterVmHardwareAdapterScsiListVmHardwareAdapterScsiResp) Set(val *VcenterVmHardwareAdapterScsiListVmHardwareAdapterScsiResp) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterVmHardwareAdapterScsiListVmHardwareAdapterScsiResp) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterVmHardwareAdapterScsiListVmHardwareAdapterScsiResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterVmHardwareAdapterScsiListVmHardwareAdapterScsiResp(val *VcenterVmHardwareAdapterScsiListVmHardwareAdapterScsiResp) *NullableVcenterVmHardwareAdapterScsiListVmHardwareAdapterScsiResp {
	return &NullableVcenterVmHardwareAdapterScsiListVmHardwareAdapterScsiResp{value: val, isSet: true}
}

func (v NullableVcenterVmHardwareAdapterScsiListVmHardwareAdapterScsiResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterVmHardwareAdapterScsiListVmHardwareAdapterScsiResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


