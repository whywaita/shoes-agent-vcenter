/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterVchaClusterActiveGetVchaClusterActiveResp struct for VcenterVchaClusterActiveGetVchaClusterActiveResp
type VcenterVchaClusterActiveGetVchaClusterActiveResp struct {
	Value VcenterVchaClusterActiveInfo `json:"value"`
}

// NewVcenterVchaClusterActiveGetVchaClusterActiveResp instantiates a new VcenterVchaClusterActiveGetVchaClusterActiveResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterVchaClusterActiveGetVchaClusterActiveResp(value VcenterVchaClusterActiveInfo) *VcenterVchaClusterActiveGetVchaClusterActiveResp {
	this := VcenterVchaClusterActiveGetVchaClusterActiveResp{}
	this.Value = value
	return &this
}

// NewVcenterVchaClusterActiveGetVchaClusterActiveRespWithDefaults instantiates a new VcenterVchaClusterActiveGetVchaClusterActiveResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterVchaClusterActiveGetVchaClusterActiveRespWithDefaults() *VcenterVchaClusterActiveGetVchaClusterActiveResp {
	this := VcenterVchaClusterActiveGetVchaClusterActiveResp{}
	return &this
}

// GetValue returns the Value field value
func (o *VcenterVchaClusterActiveGetVchaClusterActiveResp) GetValue() VcenterVchaClusterActiveInfo {
	if o == nil {
		var ret VcenterVchaClusterActiveInfo
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *VcenterVchaClusterActiveGetVchaClusterActiveResp) GetValueOk() (*VcenterVchaClusterActiveInfo, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *VcenterVchaClusterActiveGetVchaClusterActiveResp) SetValue(v VcenterVchaClusterActiveInfo) {
	o.Value = v
}

func (o VcenterVchaClusterActiveGetVchaClusterActiveResp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterVchaClusterActiveGetVchaClusterActiveResp struct {
	value *VcenterVchaClusterActiveGetVchaClusterActiveResp
	isSet bool
}

func (v NullableVcenterVchaClusterActiveGetVchaClusterActiveResp) Get() *VcenterVchaClusterActiveGetVchaClusterActiveResp {
	return v.value
}

func (v *NullableVcenterVchaClusterActiveGetVchaClusterActiveResp) Set(val *VcenterVchaClusterActiveGetVchaClusterActiveResp) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterVchaClusterActiveGetVchaClusterActiveResp) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterVchaClusterActiveGetVchaClusterActiveResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterVchaClusterActiveGetVchaClusterActiveResp(val *VcenterVchaClusterActiveGetVchaClusterActiveResp) *NullableVcenterVchaClusterActiveGetVchaClusterActiveResp {
	return &NullableVcenterVchaClusterActiveGetVchaClusterActiveResp{value: val, isSet: true}
}

func (v NullableVcenterVchaClusterActiveGetVchaClusterActiveResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterVchaClusterActiveGetVchaClusterActiveResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


