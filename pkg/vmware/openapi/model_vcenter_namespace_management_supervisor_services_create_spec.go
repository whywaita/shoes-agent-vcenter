/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterNamespaceManagementSupervisorServicesCreateSpec struct for VcenterNamespaceManagementSupervisorServicesCreateSpec
type VcenterNamespaceManagementSupervisorServicesCreateSpec struct {
	CustomSpec *VcenterNamespaceManagementSupervisorServicesCustomCreateSpec `json:"custom_spec,omitempty"`
	VsphereSpec *VcenterNamespaceManagementSupervisorServicesVsphereCreateSpec `json:"vsphere_spec,omitempty"`
}

// NewVcenterNamespaceManagementSupervisorServicesCreateSpec instantiates a new VcenterNamespaceManagementSupervisorServicesCreateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterNamespaceManagementSupervisorServicesCreateSpec() *VcenterNamespaceManagementSupervisorServicesCreateSpec {
	this := VcenterNamespaceManagementSupervisorServicesCreateSpec{}
	return &this
}

// NewVcenterNamespaceManagementSupervisorServicesCreateSpecWithDefaults instantiates a new VcenterNamespaceManagementSupervisorServicesCreateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterNamespaceManagementSupervisorServicesCreateSpecWithDefaults() *VcenterNamespaceManagementSupervisorServicesCreateSpec {
	this := VcenterNamespaceManagementSupervisorServicesCreateSpec{}
	return &this
}

// GetCustomSpec returns the CustomSpec field value if set, zero value otherwise.
func (o *VcenterNamespaceManagementSupervisorServicesCreateSpec) GetCustomSpec() VcenterNamespaceManagementSupervisorServicesCustomCreateSpec {
	if o == nil || o.CustomSpec == nil {
		var ret VcenterNamespaceManagementSupervisorServicesCustomCreateSpec
		return ret
	}
	return *o.CustomSpec
}

// GetCustomSpecOk returns a tuple with the CustomSpec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterNamespaceManagementSupervisorServicesCreateSpec) GetCustomSpecOk() (*VcenterNamespaceManagementSupervisorServicesCustomCreateSpec, bool) {
	if o == nil || o.CustomSpec == nil {
		return nil, false
	}
	return o.CustomSpec, true
}

// HasCustomSpec returns a boolean if a field has been set.
func (o *VcenterNamespaceManagementSupervisorServicesCreateSpec) HasCustomSpec() bool {
	if o != nil && o.CustomSpec != nil {
		return true
	}

	return false
}

// SetCustomSpec gets a reference to the given VcenterNamespaceManagementSupervisorServicesCustomCreateSpec and assigns it to the CustomSpec field.
func (o *VcenterNamespaceManagementSupervisorServicesCreateSpec) SetCustomSpec(v VcenterNamespaceManagementSupervisorServicesCustomCreateSpec) {
	o.CustomSpec = &v
}

// GetVsphereSpec returns the VsphereSpec field value if set, zero value otherwise.
func (o *VcenterNamespaceManagementSupervisorServicesCreateSpec) GetVsphereSpec() VcenterNamespaceManagementSupervisorServicesVsphereCreateSpec {
	if o == nil || o.VsphereSpec == nil {
		var ret VcenterNamespaceManagementSupervisorServicesVsphereCreateSpec
		return ret
	}
	return *o.VsphereSpec
}

// GetVsphereSpecOk returns a tuple with the VsphereSpec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterNamespaceManagementSupervisorServicesCreateSpec) GetVsphereSpecOk() (*VcenterNamespaceManagementSupervisorServicesVsphereCreateSpec, bool) {
	if o == nil || o.VsphereSpec == nil {
		return nil, false
	}
	return o.VsphereSpec, true
}

// HasVsphereSpec returns a boolean if a field has been set.
func (o *VcenterNamespaceManagementSupervisorServicesCreateSpec) HasVsphereSpec() bool {
	if o != nil && o.VsphereSpec != nil {
		return true
	}

	return false
}

// SetVsphereSpec gets a reference to the given VcenterNamespaceManagementSupervisorServicesVsphereCreateSpec and assigns it to the VsphereSpec field.
func (o *VcenterNamespaceManagementSupervisorServicesCreateSpec) SetVsphereSpec(v VcenterNamespaceManagementSupervisorServicesVsphereCreateSpec) {
	o.VsphereSpec = &v
}

func (o VcenterNamespaceManagementSupervisorServicesCreateSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CustomSpec != nil {
		toSerialize["custom_spec"] = o.CustomSpec
	}
	if o.VsphereSpec != nil {
		toSerialize["vsphere_spec"] = o.VsphereSpec
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterNamespaceManagementSupervisorServicesCreateSpec struct {
	value *VcenterNamespaceManagementSupervisorServicesCreateSpec
	isSet bool
}

func (v NullableVcenterNamespaceManagementSupervisorServicesCreateSpec) Get() *VcenterNamespaceManagementSupervisorServicesCreateSpec {
	return v.value
}

func (v *NullableVcenterNamespaceManagementSupervisorServicesCreateSpec) Set(val *VcenterNamespaceManagementSupervisorServicesCreateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterNamespaceManagementSupervisorServicesCreateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterNamespaceManagementSupervisorServicesCreateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterNamespaceManagementSupervisorServicesCreateSpec(val *VcenterNamespaceManagementSupervisorServicesCreateSpec) *NullableVcenterNamespaceManagementSupervisorServicesCreateSpec {
	return &NullableVcenterNamespaceManagementSupervisorServicesCreateSpec{value: val, isSet: true}
}

func (v NullableVcenterNamespaceManagementSupervisorServicesCreateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterNamespaceManagementSupervisorServicesCreateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


