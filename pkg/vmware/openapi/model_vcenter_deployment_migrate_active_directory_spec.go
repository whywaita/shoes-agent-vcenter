/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterDeploymentMigrateActiveDirectorySpec struct for VcenterDeploymentMigrateActiveDirectorySpec
type VcenterDeploymentMigrateActiveDirectorySpec struct {
	// The domain name of the Active Directory server to which the migrated vCenter Server appliance should be joined.
	Domain string `json:"domain"`
	// Active Directory user that has permission to join the Active Directory after the vCenter Server is migrated to appliance.
	Username string `json:"username"`
	// Active Directory user password that has permission to join the Active Directory after the vCenter Server is migrated to appliance.
	Password string `json:"password"`
}

// NewVcenterDeploymentMigrateActiveDirectorySpec instantiates a new VcenterDeploymentMigrateActiveDirectorySpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterDeploymentMigrateActiveDirectorySpec(domain string, username string, password string) *VcenterDeploymentMigrateActiveDirectorySpec {
	this := VcenterDeploymentMigrateActiveDirectorySpec{}
	this.Domain = domain
	this.Username = username
	this.Password = password
	return &this
}

// NewVcenterDeploymentMigrateActiveDirectorySpecWithDefaults instantiates a new VcenterDeploymentMigrateActiveDirectorySpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterDeploymentMigrateActiveDirectorySpecWithDefaults() *VcenterDeploymentMigrateActiveDirectorySpec {
	this := VcenterDeploymentMigrateActiveDirectorySpec{}
	return &this
}

// GetDomain returns the Domain field value
func (o *VcenterDeploymentMigrateActiveDirectorySpec) GetDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Domain
}

// GetDomainOk returns a tuple with the Domain field value
// and a boolean to check if the value has been set.
func (o *VcenterDeploymentMigrateActiveDirectorySpec) GetDomainOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Domain, true
}

// SetDomain sets field value
func (o *VcenterDeploymentMigrateActiveDirectorySpec) SetDomain(v string) {
	o.Domain = v
}

// GetUsername returns the Username field value
func (o *VcenterDeploymentMigrateActiveDirectorySpec) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *VcenterDeploymentMigrateActiveDirectorySpec) GetUsernameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *VcenterDeploymentMigrateActiveDirectorySpec) SetUsername(v string) {
	o.Username = v
}

// GetPassword returns the Password field value
func (o *VcenterDeploymentMigrateActiveDirectorySpec) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *VcenterDeploymentMigrateActiveDirectorySpec) GetPasswordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *VcenterDeploymentMigrateActiveDirectorySpec) SetPassword(v string) {
	o.Password = v
}

func (o VcenterDeploymentMigrateActiveDirectorySpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["domain"] = o.Domain
	}
	if true {
		toSerialize["username"] = o.Username
	}
	if true {
		toSerialize["password"] = o.Password
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterDeploymentMigrateActiveDirectorySpec struct {
	value *VcenterDeploymentMigrateActiveDirectorySpec
	isSet bool
}

func (v NullableVcenterDeploymentMigrateActiveDirectorySpec) Get() *VcenterDeploymentMigrateActiveDirectorySpec {
	return v.value
}

func (v *NullableVcenterDeploymentMigrateActiveDirectorySpec) Set(val *VcenterDeploymentMigrateActiveDirectorySpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterDeploymentMigrateActiveDirectorySpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterDeploymentMigrateActiveDirectorySpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterDeploymentMigrateActiveDirectorySpec(val *VcenterDeploymentMigrateActiveDirectorySpec) *NullableVcenterDeploymentMigrateActiveDirectorySpec {
	return &NullableVcenterDeploymentMigrateActiveDirectorySpec{value: val, isSet: true}
}

func (v NullableVcenterDeploymentMigrateActiveDirectorySpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterDeploymentMigrateActiveDirectorySpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


