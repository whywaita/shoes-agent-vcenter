/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterContentRegistriesHarborCreateSpec struct for VcenterContentRegistriesHarborCreateSpec
type VcenterContentRegistriesHarborCreateSpec struct {
	// Identifier of the cluster hosting the registry.
	Cluster *string `json:"cluster,omitempty"`
	GarbageCollection *VcenterContentRegistriesHarborGarbageCollection `json:"garbage_collection,omitempty"`
	// Storage associated with the Harbor registry. The list contains only one storage backing in this version.
	Storage []VcenterContentRegistriesHarborStorageSpec `json:"storage"`
}

// NewVcenterContentRegistriesHarborCreateSpec instantiates a new VcenterContentRegistriesHarborCreateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterContentRegistriesHarborCreateSpec(storage []VcenterContentRegistriesHarborStorageSpec) *VcenterContentRegistriesHarborCreateSpec {
	this := VcenterContentRegistriesHarborCreateSpec{}
	this.Storage = storage
	return &this
}

// NewVcenterContentRegistriesHarborCreateSpecWithDefaults instantiates a new VcenterContentRegistriesHarborCreateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterContentRegistriesHarborCreateSpecWithDefaults() *VcenterContentRegistriesHarborCreateSpec {
	this := VcenterContentRegistriesHarborCreateSpec{}
	return &this
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *VcenterContentRegistriesHarborCreateSpec) GetCluster() string {
	if o == nil || o.Cluster == nil {
		var ret string
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterContentRegistriesHarborCreateSpec) GetClusterOk() (*string, bool) {
	if o == nil || o.Cluster == nil {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *VcenterContentRegistriesHarborCreateSpec) HasCluster() bool {
	if o != nil && o.Cluster != nil {
		return true
	}

	return false
}

// SetCluster gets a reference to the given string and assigns it to the Cluster field.
func (o *VcenterContentRegistriesHarborCreateSpec) SetCluster(v string) {
	o.Cluster = &v
}

// GetGarbageCollection returns the GarbageCollection field value if set, zero value otherwise.
func (o *VcenterContentRegistriesHarborCreateSpec) GetGarbageCollection() VcenterContentRegistriesHarborGarbageCollection {
	if o == nil || o.GarbageCollection == nil {
		var ret VcenterContentRegistriesHarborGarbageCollection
		return ret
	}
	return *o.GarbageCollection
}

// GetGarbageCollectionOk returns a tuple with the GarbageCollection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterContentRegistriesHarborCreateSpec) GetGarbageCollectionOk() (*VcenterContentRegistriesHarborGarbageCollection, bool) {
	if o == nil || o.GarbageCollection == nil {
		return nil, false
	}
	return o.GarbageCollection, true
}

// HasGarbageCollection returns a boolean if a field has been set.
func (o *VcenterContentRegistriesHarborCreateSpec) HasGarbageCollection() bool {
	if o != nil && o.GarbageCollection != nil {
		return true
	}

	return false
}

// SetGarbageCollection gets a reference to the given VcenterContentRegistriesHarborGarbageCollection and assigns it to the GarbageCollection field.
func (o *VcenterContentRegistriesHarborCreateSpec) SetGarbageCollection(v VcenterContentRegistriesHarborGarbageCollection) {
	o.GarbageCollection = &v
}

// GetStorage returns the Storage field value
func (o *VcenterContentRegistriesHarborCreateSpec) GetStorage() []VcenterContentRegistriesHarborStorageSpec {
	if o == nil {
		var ret []VcenterContentRegistriesHarborStorageSpec
		return ret
	}

	return o.Storage
}

// GetStorageOk returns a tuple with the Storage field value
// and a boolean to check if the value has been set.
func (o *VcenterContentRegistriesHarborCreateSpec) GetStorageOk() (*[]VcenterContentRegistriesHarborStorageSpec, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Storage, true
}

// SetStorage sets field value
func (o *VcenterContentRegistriesHarborCreateSpec) SetStorage(v []VcenterContentRegistriesHarborStorageSpec) {
	o.Storage = v
}

func (o VcenterContentRegistriesHarborCreateSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Cluster != nil {
		toSerialize["cluster"] = o.Cluster
	}
	if o.GarbageCollection != nil {
		toSerialize["garbage_collection"] = o.GarbageCollection
	}
	if true {
		toSerialize["storage"] = o.Storage
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterContentRegistriesHarborCreateSpec struct {
	value *VcenterContentRegistriesHarborCreateSpec
	isSet bool
}

func (v NullableVcenterContentRegistriesHarborCreateSpec) Get() *VcenterContentRegistriesHarborCreateSpec {
	return v.value
}

func (v *NullableVcenterContentRegistriesHarborCreateSpec) Set(val *VcenterContentRegistriesHarborCreateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterContentRegistriesHarborCreateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterContentRegistriesHarborCreateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterContentRegistriesHarborCreateSpec(val *VcenterContentRegistriesHarborCreateSpec) *NullableVcenterContentRegistriesHarborCreateSpec {
	return &NullableVcenterContentRegistriesHarborCreateSpec{value: val, isSet: true}
}

func (v NullableVcenterContentRegistriesHarborCreateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterContentRegistriesHarborCreateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


