/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessage struct for VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessage
type VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessage struct {
	Severity VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessageMessageSeverity `json:"severity"`
	Details *VapiStdLocalizableMessage `json:"details,omitempty"`
}

// NewVcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessage instantiates a new VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessage(severity VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessageMessageSeverity) *VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessage {
	this := VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessage{}
	this.Severity = severity
	return &this
}

// NewVcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessageWithDefaults instantiates a new VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessageWithDefaults() *VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessage {
	this := VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessage{}
	return &this
}

// GetSeverity returns the Severity field value
func (o *VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessage) GetSeverity() VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessageMessageSeverity {
	if o == nil {
		var ret VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessageMessageSeverity
		return ret
	}

	return o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessage) GetSeverityOk() (*VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessageMessageSeverity, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Severity, true
}

// SetSeverity sets field value
func (o *VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessage) SetSeverity(v VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessageMessageSeverity) {
	o.Severity = v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessage) GetDetails() VapiStdLocalizableMessage {
	if o == nil || o.Details == nil {
		var ret VapiStdLocalizableMessage
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessage) GetDetailsOk() (*VapiStdLocalizableMessage, bool) {
	if o == nil || o.Details == nil {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessage) HasDetails() bool {
	if o != nil && o.Details != nil {
		return true
	}

	return false
}

// SetDetails gets a reference to the given VapiStdLocalizableMessage and assigns it to the Details field.
func (o *VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessage) SetDetails(v VapiStdLocalizableMessage) {
	o.Details = &v
}

func (o VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["severity"] = o.Severity
	}
	if o.Details != nil {
		toSerialize["details"] = o.Details
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessage struct {
	value *VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessage
	isSet bool
}

func (v NullableVcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessage) Get() *VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessage {
	return v.value
}

func (v *NullableVcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessage) Set(val *VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessage(val *VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessage) *NullableVcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessage {
	return &NullableVcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessage{value: val, isSet: true}
}

func (v NullableVcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


