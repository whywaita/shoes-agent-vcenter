/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterCryptoManagerKmsProvidersNativeProviderCreateSpec struct for VcenterCryptoManagerKmsProvidersNativeProviderCreateSpec
type VcenterCryptoManagerKmsProvidersNativeProviderCreateSpec struct {
	// Key identifier for the provider.   The key identifier is required to be a 128-bit UUID represented as a hexadecimal string in \"12345678-abcd-1234-cdef-123456789abc\" format.  If unset, the key identifier will be generated automatically.
	KeyId *string `json:"key_id,omitempty"`
	// Key used to derive data encryption keys. Base64 encoded. If unset, the key derivation key will be generated automatically.
	KeyDerivationKey *string `json:"key_derivation_key,omitempty"`
}

// NewVcenterCryptoManagerKmsProvidersNativeProviderCreateSpec instantiates a new VcenterCryptoManagerKmsProvidersNativeProviderCreateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterCryptoManagerKmsProvidersNativeProviderCreateSpec() *VcenterCryptoManagerKmsProvidersNativeProviderCreateSpec {
	this := VcenterCryptoManagerKmsProvidersNativeProviderCreateSpec{}
	return &this
}

// NewVcenterCryptoManagerKmsProvidersNativeProviderCreateSpecWithDefaults instantiates a new VcenterCryptoManagerKmsProvidersNativeProviderCreateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterCryptoManagerKmsProvidersNativeProviderCreateSpecWithDefaults() *VcenterCryptoManagerKmsProvidersNativeProviderCreateSpec {
	this := VcenterCryptoManagerKmsProvidersNativeProviderCreateSpec{}
	return &this
}

// GetKeyId returns the KeyId field value if set, zero value otherwise.
func (o *VcenterCryptoManagerKmsProvidersNativeProviderCreateSpec) GetKeyId() string {
	if o == nil || o.KeyId == nil {
		var ret string
		return ret
	}
	return *o.KeyId
}

// GetKeyIdOk returns a tuple with the KeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterCryptoManagerKmsProvidersNativeProviderCreateSpec) GetKeyIdOk() (*string, bool) {
	if o == nil || o.KeyId == nil {
		return nil, false
	}
	return o.KeyId, true
}

// HasKeyId returns a boolean if a field has been set.
func (o *VcenterCryptoManagerKmsProvidersNativeProviderCreateSpec) HasKeyId() bool {
	if o != nil && o.KeyId != nil {
		return true
	}

	return false
}

// SetKeyId gets a reference to the given string and assigns it to the KeyId field.
func (o *VcenterCryptoManagerKmsProvidersNativeProviderCreateSpec) SetKeyId(v string) {
	o.KeyId = &v
}

// GetKeyDerivationKey returns the KeyDerivationKey field value if set, zero value otherwise.
func (o *VcenterCryptoManagerKmsProvidersNativeProviderCreateSpec) GetKeyDerivationKey() string {
	if o == nil || o.KeyDerivationKey == nil {
		var ret string
		return ret
	}
	return *o.KeyDerivationKey
}

// GetKeyDerivationKeyOk returns a tuple with the KeyDerivationKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterCryptoManagerKmsProvidersNativeProviderCreateSpec) GetKeyDerivationKeyOk() (*string, bool) {
	if o == nil || o.KeyDerivationKey == nil {
		return nil, false
	}
	return o.KeyDerivationKey, true
}

// HasKeyDerivationKey returns a boolean if a field has been set.
func (o *VcenterCryptoManagerKmsProvidersNativeProviderCreateSpec) HasKeyDerivationKey() bool {
	if o != nil && o.KeyDerivationKey != nil {
		return true
	}

	return false
}

// SetKeyDerivationKey gets a reference to the given string and assigns it to the KeyDerivationKey field.
func (o *VcenterCryptoManagerKmsProvidersNativeProviderCreateSpec) SetKeyDerivationKey(v string) {
	o.KeyDerivationKey = &v
}

func (o VcenterCryptoManagerKmsProvidersNativeProviderCreateSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.KeyId != nil {
		toSerialize["key_id"] = o.KeyId
	}
	if o.KeyDerivationKey != nil {
		toSerialize["key_derivation_key"] = o.KeyDerivationKey
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterCryptoManagerKmsProvidersNativeProviderCreateSpec struct {
	value *VcenterCryptoManagerKmsProvidersNativeProviderCreateSpec
	isSet bool
}

func (v NullableVcenterCryptoManagerKmsProvidersNativeProviderCreateSpec) Get() *VcenterCryptoManagerKmsProvidersNativeProviderCreateSpec {
	return v.value
}

func (v *NullableVcenterCryptoManagerKmsProvidersNativeProviderCreateSpec) Set(val *VcenterCryptoManagerKmsProvidersNativeProviderCreateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterCryptoManagerKmsProvidersNativeProviderCreateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterCryptoManagerKmsProvidersNativeProviderCreateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterCryptoManagerKmsProvidersNativeProviderCreateSpec(val *VcenterCryptoManagerKmsProvidersNativeProviderCreateSpec) *NullableVcenterCryptoManagerKmsProvidersNativeProviderCreateSpec {
	return &NullableVcenterCryptoManagerKmsProvidersNativeProviderCreateSpec{value: val, isSet: true}
}

func (v NullableVcenterCryptoManagerKmsProvidersNativeProviderCreateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterCryptoManagerKmsProvidersNativeProviderCreateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


