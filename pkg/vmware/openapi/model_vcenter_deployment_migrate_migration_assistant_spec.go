/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterDeploymentMigrateMigrationAssistantSpec struct for VcenterDeploymentMigrateMigrationAssistantSpec
type VcenterDeploymentMigrateMigrationAssistantSpec struct {
	// The HTTPS port being used by Migration Assistant. If unset, port 9123 will be used.
	HttpsPort *int64 `json:"https_port,omitempty"`
	// SHA1 thumbprint of the Migration Assistant SSL certificate that will be used for verification.
	SslThumbprint string `json:"ssl_thumbprint"`
}

// NewVcenterDeploymentMigrateMigrationAssistantSpec instantiates a new VcenterDeploymentMigrateMigrationAssistantSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterDeploymentMigrateMigrationAssistantSpec(sslThumbprint string) *VcenterDeploymentMigrateMigrationAssistantSpec {
	this := VcenterDeploymentMigrateMigrationAssistantSpec{}
	this.SslThumbprint = sslThumbprint
	return &this
}

// NewVcenterDeploymentMigrateMigrationAssistantSpecWithDefaults instantiates a new VcenterDeploymentMigrateMigrationAssistantSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterDeploymentMigrateMigrationAssistantSpecWithDefaults() *VcenterDeploymentMigrateMigrationAssistantSpec {
	this := VcenterDeploymentMigrateMigrationAssistantSpec{}
	return &this
}

// GetHttpsPort returns the HttpsPort field value if set, zero value otherwise.
func (o *VcenterDeploymentMigrateMigrationAssistantSpec) GetHttpsPort() int64 {
	if o == nil || o.HttpsPort == nil {
		var ret int64
		return ret
	}
	return *o.HttpsPort
}

// GetHttpsPortOk returns a tuple with the HttpsPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterDeploymentMigrateMigrationAssistantSpec) GetHttpsPortOk() (*int64, bool) {
	if o == nil || o.HttpsPort == nil {
		return nil, false
	}
	return o.HttpsPort, true
}

// HasHttpsPort returns a boolean if a field has been set.
func (o *VcenterDeploymentMigrateMigrationAssistantSpec) HasHttpsPort() bool {
	if o != nil && o.HttpsPort != nil {
		return true
	}

	return false
}

// SetHttpsPort gets a reference to the given int64 and assigns it to the HttpsPort field.
func (o *VcenterDeploymentMigrateMigrationAssistantSpec) SetHttpsPort(v int64) {
	o.HttpsPort = &v
}

// GetSslThumbprint returns the SslThumbprint field value
func (o *VcenterDeploymentMigrateMigrationAssistantSpec) GetSslThumbprint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SslThumbprint
}

// GetSslThumbprintOk returns a tuple with the SslThumbprint field value
// and a boolean to check if the value has been set.
func (o *VcenterDeploymentMigrateMigrationAssistantSpec) GetSslThumbprintOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SslThumbprint, true
}

// SetSslThumbprint sets field value
func (o *VcenterDeploymentMigrateMigrationAssistantSpec) SetSslThumbprint(v string) {
	o.SslThumbprint = v
}

func (o VcenterDeploymentMigrateMigrationAssistantSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.HttpsPort != nil {
		toSerialize["https_port"] = o.HttpsPort
	}
	if true {
		toSerialize["ssl_thumbprint"] = o.SslThumbprint
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterDeploymentMigrateMigrationAssistantSpec struct {
	value *VcenterDeploymentMigrateMigrationAssistantSpec
	isSet bool
}

func (v NullableVcenterDeploymentMigrateMigrationAssistantSpec) Get() *VcenterDeploymentMigrateMigrationAssistantSpec {
	return v.value
}

func (v *NullableVcenterDeploymentMigrateMigrationAssistantSpec) Set(val *VcenterDeploymentMigrateMigrationAssistantSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterDeploymentMigrateMigrationAssistantSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterDeploymentMigrateMigrationAssistantSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterDeploymentMigrateMigrationAssistantSpec(val *VcenterDeploymentMigrateMigrationAssistantSpec) *NullableVcenterDeploymentMigrateMigrationAssistantSpec {
	return &NullableVcenterDeploymentMigrateMigrationAssistantSpec{value: val, isSet: true}
}

func (v NullableVcenterDeploymentMigrateMigrationAssistantSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterDeploymentMigrateMigrationAssistantSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


