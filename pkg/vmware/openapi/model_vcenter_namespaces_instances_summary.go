/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterNamespacesInstancesSummary struct for VcenterNamespacesInstancesSummary
type VcenterNamespacesInstancesSummary struct {
	// Identifier of the namespace. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.namespaces.Instance. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.namespaces.Instance.
	Namespace string `json:"namespace"`
	// Description of the namespace.
	Description string `json:"description"`
	// Identifier for the cluster hosting the namespace. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ClusterComputeResource. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ClusterComputeResource.
	Cluster string `json:"cluster"`
	ConfigStatus VcenterNamespacesInstancesConfigStatus `json:"config_status"`
	Stats VcenterNamespacesInstancesStats `json:"stats"`
	// Flag to indicate the self service namespace. If unset, the namespace is not marked as self service namespace.
	SelfServiceNamespace *bool `json:"self_service_namespace,omitempty"`
}

// NewVcenterNamespacesInstancesSummary instantiates a new VcenterNamespacesInstancesSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterNamespacesInstancesSummary(namespace string, description string, cluster string, configStatus VcenterNamespacesInstancesConfigStatus, stats VcenterNamespacesInstancesStats) *VcenterNamespacesInstancesSummary {
	this := VcenterNamespacesInstancesSummary{}
	this.Namespace = namespace
	this.Description = description
	this.Cluster = cluster
	this.ConfigStatus = configStatus
	this.Stats = stats
	return &this
}

// NewVcenterNamespacesInstancesSummaryWithDefaults instantiates a new VcenterNamespacesInstancesSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterNamespacesInstancesSummaryWithDefaults() *VcenterNamespacesInstancesSummary {
	this := VcenterNamespacesInstancesSummary{}
	return &this
}

// GetNamespace returns the Namespace field value
func (o *VcenterNamespacesInstancesSummary) GetNamespace() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespacesInstancesSummary) GetNamespaceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Namespace, true
}

// SetNamespace sets field value
func (o *VcenterNamespacesInstancesSummary) SetNamespace(v string) {
	o.Namespace = v
}

// GetDescription returns the Description field value
func (o *VcenterNamespacesInstancesSummary) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespacesInstancesSummary) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *VcenterNamespacesInstancesSummary) SetDescription(v string) {
	o.Description = v
}

// GetCluster returns the Cluster field value
func (o *VcenterNamespacesInstancesSummary) GetCluster() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespacesInstancesSummary) GetClusterOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Cluster, true
}

// SetCluster sets field value
func (o *VcenterNamespacesInstancesSummary) SetCluster(v string) {
	o.Cluster = v
}

// GetConfigStatus returns the ConfigStatus field value
func (o *VcenterNamespacesInstancesSummary) GetConfigStatus() VcenterNamespacesInstancesConfigStatus {
	if o == nil {
		var ret VcenterNamespacesInstancesConfigStatus
		return ret
	}

	return o.ConfigStatus
}

// GetConfigStatusOk returns a tuple with the ConfigStatus field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespacesInstancesSummary) GetConfigStatusOk() (*VcenterNamespacesInstancesConfigStatus, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ConfigStatus, true
}

// SetConfigStatus sets field value
func (o *VcenterNamespacesInstancesSummary) SetConfigStatus(v VcenterNamespacesInstancesConfigStatus) {
	o.ConfigStatus = v
}

// GetStats returns the Stats field value
func (o *VcenterNamespacesInstancesSummary) GetStats() VcenterNamespacesInstancesStats {
	if o == nil {
		var ret VcenterNamespacesInstancesStats
		return ret
	}

	return o.Stats
}

// GetStatsOk returns a tuple with the Stats field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespacesInstancesSummary) GetStatsOk() (*VcenterNamespacesInstancesStats, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Stats, true
}

// SetStats sets field value
func (o *VcenterNamespacesInstancesSummary) SetStats(v VcenterNamespacesInstancesStats) {
	o.Stats = v
}

// GetSelfServiceNamespace returns the SelfServiceNamespace field value if set, zero value otherwise.
func (o *VcenterNamespacesInstancesSummary) GetSelfServiceNamespace() bool {
	if o == nil || o.SelfServiceNamespace == nil {
		var ret bool
		return ret
	}
	return *o.SelfServiceNamespace
}

// GetSelfServiceNamespaceOk returns a tuple with the SelfServiceNamespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterNamespacesInstancesSummary) GetSelfServiceNamespaceOk() (*bool, bool) {
	if o == nil || o.SelfServiceNamespace == nil {
		return nil, false
	}
	return o.SelfServiceNamespace, true
}

// HasSelfServiceNamespace returns a boolean if a field has been set.
func (o *VcenterNamespacesInstancesSummary) HasSelfServiceNamespace() bool {
	if o != nil && o.SelfServiceNamespace != nil {
		return true
	}

	return false
}

// SetSelfServiceNamespace gets a reference to the given bool and assigns it to the SelfServiceNamespace field.
func (o *VcenterNamespacesInstancesSummary) SetSelfServiceNamespace(v bool) {
	o.SelfServiceNamespace = &v
}

func (o VcenterNamespacesInstancesSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["namespace"] = o.Namespace
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["cluster"] = o.Cluster
	}
	if true {
		toSerialize["config_status"] = o.ConfigStatus
	}
	if true {
		toSerialize["stats"] = o.Stats
	}
	if o.SelfServiceNamespace != nil {
		toSerialize["self_service_namespace"] = o.SelfServiceNamespace
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterNamespacesInstancesSummary struct {
	value *VcenterNamespacesInstancesSummary
	isSet bool
}

func (v NullableVcenterNamespacesInstancesSummary) Get() *VcenterNamespacesInstancesSummary {
	return v.value
}

func (v *NullableVcenterNamespacesInstancesSummary) Set(val *VcenterNamespacesInstancesSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterNamespacesInstancesSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterNamespacesInstancesSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterNamespacesInstancesSummary(val *VcenterNamespacesInstancesSummary) *NullableVcenterNamespacesInstancesSummary {
	return &NullableVcenterNamespacesInstancesSummary{value: val, isSet: true}
}

func (v NullableVcenterNamespacesInstancesSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterNamespacesInstancesSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


