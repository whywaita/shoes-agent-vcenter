/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterNamespaceManagementSupervisorServicesVersionsCreateSpec struct for VcenterNamespaceManagementSupervisorServicesVersionsCreateSpec
type VcenterNamespaceManagementSupervisorServicesVersionsCreateSpec struct {
	CustomSpec *VcenterNamespaceManagementSupervisorServicesVersionsCustomCreateSpec `json:"custom_spec,omitempty"`
	VsphereSpec *VcenterNamespaceManagementSupervisorServicesVersionsVsphereCreateSpec `json:"vsphere_spec,omitempty"`
}

// NewVcenterNamespaceManagementSupervisorServicesVersionsCreateSpec instantiates a new VcenterNamespaceManagementSupervisorServicesVersionsCreateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterNamespaceManagementSupervisorServicesVersionsCreateSpec() *VcenterNamespaceManagementSupervisorServicesVersionsCreateSpec {
	this := VcenterNamespaceManagementSupervisorServicesVersionsCreateSpec{}
	return &this
}

// NewVcenterNamespaceManagementSupervisorServicesVersionsCreateSpecWithDefaults instantiates a new VcenterNamespaceManagementSupervisorServicesVersionsCreateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterNamespaceManagementSupervisorServicesVersionsCreateSpecWithDefaults() *VcenterNamespaceManagementSupervisorServicesVersionsCreateSpec {
	this := VcenterNamespaceManagementSupervisorServicesVersionsCreateSpec{}
	return &this
}

// GetCustomSpec returns the CustomSpec field value if set, zero value otherwise.
func (o *VcenterNamespaceManagementSupervisorServicesVersionsCreateSpec) GetCustomSpec() VcenterNamespaceManagementSupervisorServicesVersionsCustomCreateSpec {
	if o == nil || o.CustomSpec == nil {
		var ret VcenterNamespaceManagementSupervisorServicesVersionsCustomCreateSpec
		return ret
	}
	return *o.CustomSpec
}

// GetCustomSpecOk returns a tuple with the CustomSpec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterNamespaceManagementSupervisorServicesVersionsCreateSpec) GetCustomSpecOk() (*VcenterNamespaceManagementSupervisorServicesVersionsCustomCreateSpec, bool) {
	if o == nil || o.CustomSpec == nil {
		return nil, false
	}
	return o.CustomSpec, true
}

// HasCustomSpec returns a boolean if a field has been set.
func (o *VcenterNamespaceManagementSupervisorServicesVersionsCreateSpec) HasCustomSpec() bool {
	if o != nil && o.CustomSpec != nil {
		return true
	}

	return false
}

// SetCustomSpec gets a reference to the given VcenterNamespaceManagementSupervisorServicesVersionsCustomCreateSpec and assigns it to the CustomSpec field.
func (o *VcenterNamespaceManagementSupervisorServicesVersionsCreateSpec) SetCustomSpec(v VcenterNamespaceManagementSupervisorServicesVersionsCustomCreateSpec) {
	o.CustomSpec = &v
}

// GetVsphereSpec returns the VsphereSpec field value if set, zero value otherwise.
func (o *VcenterNamespaceManagementSupervisorServicesVersionsCreateSpec) GetVsphereSpec() VcenterNamespaceManagementSupervisorServicesVersionsVsphereCreateSpec {
	if o == nil || o.VsphereSpec == nil {
		var ret VcenterNamespaceManagementSupervisorServicesVersionsVsphereCreateSpec
		return ret
	}
	return *o.VsphereSpec
}

// GetVsphereSpecOk returns a tuple with the VsphereSpec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterNamespaceManagementSupervisorServicesVersionsCreateSpec) GetVsphereSpecOk() (*VcenterNamespaceManagementSupervisorServicesVersionsVsphereCreateSpec, bool) {
	if o == nil || o.VsphereSpec == nil {
		return nil, false
	}
	return o.VsphereSpec, true
}

// HasVsphereSpec returns a boolean if a field has been set.
func (o *VcenterNamespaceManagementSupervisorServicesVersionsCreateSpec) HasVsphereSpec() bool {
	if o != nil && o.VsphereSpec != nil {
		return true
	}

	return false
}

// SetVsphereSpec gets a reference to the given VcenterNamespaceManagementSupervisorServicesVersionsVsphereCreateSpec and assigns it to the VsphereSpec field.
func (o *VcenterNamespaceManagementSupervisorServicesVersionsCreateSpec) SetVsphereSpec(v VcenterNamespaceManagementSupervisorServicesVersionsVsphereCreateSpec) {
	o.VsphereSpec = &v
}

func (o VcenterNamespaceManagementSupervisorServicesVersionsCreateSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CustomSpec != nil {
		toSerialize["custom_spec"] = o.CustomSpec
	}
	if o.VsphereSpec != nil {
		toSerialize["vsphere_spec"] = o.VsphereSpec
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterNamespaceManagementSupervisorServicesVersionsCreateSpec struct {
	value *VcenterNamespaceManagementSupervisorServicesVersionsCreateSpec
	isSet bool
}

func (v NullableVcenterNamespaceManagementSupervisorServicesVersionsCreateSpec) Get() *VcenterNamespaceManagementSupervisorServicesVersionsCreateSpec {
	return v.value
}

func (v *NullableVcenterNamespaceManagementSupervisorServicesVersionsCreateSpec) Set(val *VcenterNamespaceManagementSupervisorServicesVersionsCreateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterNamespaceManagementSupervisorServicesVersionsCreateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterNamespaceManagementSupervisorServicesVersionsCreateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterNamespaceManagementSupervisorServicesVersionsCreateSpec(val *VcenterNamespaceManagementSupervisorServicesVersionsCreateSpec) *NullableVcenterNamespaceManagementSupervisorServicesVersionsCreateSpec {
	return &NullableVcenterNamespaceManagementSupervisorServicesVersionsCreateSpec{value: val, isSet: true}
}

func (v NullableVcenterNamespaceManagementSupervisorServicesVersionsCreateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterNamespaceManagementSupervisorServicesVersionsCreateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


