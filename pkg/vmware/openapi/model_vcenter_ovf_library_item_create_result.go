/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterOvfLibraryItemCreateResult struct for VcenterOvfLibraryItemCreateResult
type VcenterOvfLibraryItemCreateResult struct {
	// Whether the {@name LibraryItem#create} {@term operation} completed successfully.
	Succeeded bool `json:"succeeded"`
	// Identifier of the created or updated library item.
	OvfLibraryItemId *string `json:"ovf_library_item_id,omitempty"`
	Error *VcenterOvfLibraryItemResultInfo `json:"error,omitempty"`
}

// NewVcenterOvfLibraryItemCreateResult instantiates a new VcenterOvfLibraryItemCreateResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterOvfLibraryItemCreateResult(succeeded bool) *VcenterOvfLibraryItemCreateResult {
	this := VcenterOvfLibraryItemCreateResult{}
	this.Succeeded = succeeded
	return &this
}

// NewVcenterOvfLibraryItemCreateResultWithDefaults instantiates a new VcenterOvfLibraryItemCreateResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterOvfLibraryItemCreateResultWithDefaults() *VcenterOvfLibraryItemCreateResult {
	this := VcenterOvfLibraryItemCreateResult{}
	return &this
}

// GetSucceeded returns the Succeeded field value
func (o *VcenterOvfLibraryItemCreateResult) GetSucceeded() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Succeeded
}

// GetSucceededOk returns a tuple with the Succeeded field value
// and a boolean to check if the value has been set.
func (o *VcenterOvfLibraryItemCreateResult) GetSucceededOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Succeeded, true
}

// SetSucceeded sets field value
func (o *VcenterOvfLibraryItemCreateResult) SetSucceeded(v bool) {
	o.Succeeded = v
}

// GetOvfLibraryItemId returns the OvfLibraryItemId field value if set, zero value otherwise.
func (o *VcenterOvfLibraryItemCreateResult) GetOvfLibraryItemId() string {
	if o == nil || o.OvfLibraryItemId == nil {
		var ret string
		return ret
	}
	return *o.OvfLibraryItemId
}

// GetOvfLibraryItemIdOk returns a tuple with the OvfLibraryItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterOvfLibraryItemCreateResult) GetOvfLibraryItemIdOk() (*string, bool) {
	if o == nil || o.OvfLibraryItemId == nil {
		return nil, false
	}
	return o.OvfLibraryItemId, true
}

// HasOvfLibraryItemId returns a boolean if a field has been set.
func (o *VcenterOvfLibraryItemCreateResult) HasOvfLibraryItemId() bool {
	if o != nil && o.OvfLibraryItemId != nil {
		return true
	}

	return false
}

// SetOvfLibraryItemId gets a reference to the given string and assigns it to the OvfLibraryItemId field.
func (o *VcenterOvfLibraryItemCreateResult) SetOvfLibraryItemId(v string) {
	o.OvfLibraryItemId = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *VcenterOvfLibraryItemCreateResult) GetError() VcenterOvfLibraryItemResultInfo {
	if o == nil || o.Error == nil {
		var ret VcenterOvfLibraryItemResultInfo
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterOvfLibraryItemCreateResult) GetErrorOk() (*VcenterOvfLibraryItemResultInfo, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *VcenterOvfLibraryItemCreateResult) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given VcenterOvfLibraryItemResultInfo and assigns it to the Error field.
func (o *VcenterOvfLibraryItemCreateResult) SetError(v VcenterOvfLibraryItemResultInfo) {
	o.Error = &v
}

func (o VcenterOvfLibraryItemCreateResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["succeeded"] = o.Succeeded
	}
	if o.OvfLibraryItemId != nil {
		toSerialize["ovf_library_item_id"] = o.OvfLibraryItemId
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterOvfLibraryItemCreateResult struct {
	value *VcenterOvfLibraryItemCreateResult
	isSet bool
}

func (v NullableVcenterOvfLibraryItemCreateResult) Get() *VcenterOvfLibraryItemCreateResult {
	return v.value
}

func (v *NullableVcenterOvfLibraryItemCreateResult) Set(val *VcenterOvfLibraryItemCreateResult) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterOvfLibraryItemCreateResult) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterOvfLibraryItemCreateResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterOvfLibraryItemCreateResult(val *VcenterOvfLibraryItemCreateResult) *NullableVcenterOvfLibraryItemCreateResult {
	return &NullableVcenterOvfLibraryItemCreateResult{value: val, isSet: true}
}

func (v NullableVcenterOvfLibraryItemCreateResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterOvfLibraryItemCreateResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


