/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec struct for VcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec
type VcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec struct {
	// The certificates used by the vCenter STS to sign tokens.
	Certificates []VcenterTrustedInfrastructureX509CertChain `json:"certificates"`
	// A user-friendly alias of the service which created and signed the security token. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: esx.authentication.trust.security-token-issuer. When operations return a value of this structure as a result, the field will be an identifier for the resource type: esx.authentication.trust.security-token-issuer.
	IssuerAlias string `json:"issuer_alias"`
	// The service which created and signed the security token.
	Issuer string `json:"issuer"`
	Principal VcenterTrustedInfrastructureStsPrincipal `json:"principal"`
}

// NewVcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec instantiates a new VcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec(certificates []VcenterTrustedInfrastructureX509CertChain, issuerAlias string, issuer string, principal VcenterTrustedInfrastructureStsPrincipal) *VcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec {
	this := VcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec{}
	this.Certificates = certificates
	this.IssuerAlias = issuerAlias
	this.Issuer = issuer
	this.Principal = principal
	return &this
}

// NewVcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpecWithDefaults instantiates a new VcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpecWithDefaults() *VcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec {
	this := VcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec{}
	return &this
}

// GetCertificates returns the Certificates field value
func (o *VcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec) GetCertificates() []VcenterTrustedInfrastructureX509CertChain {
	if o == nil {
		var ret []VcenterTrustedInfrastructureX509CertChain
		return ret
	}

	return o.Certificates
}

// GetCertificatesOk returns a tuple with the Certificates field value
// and a boolean to check if the value has been set.
func (o *VcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec) GetCertificatesOk() (*[]VcenterTrustedInfrastructureX509CertChain, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Certificates, true
}

// SetCertificates sets field value
func (o *VcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec) SetCertificates(v []VcenterTrustedInfrastructureX509CertChain) {
	o.Certificates = v
}

// GetIssuerAlias returns the IssuerAlias field value
func (o *VcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec) GetIssuerAlias() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IssuerAlias
}

// GetIssuerAliasOk returns a tuple with the IssuerAlias field value
// and a boolean to check if the value has been set.
func (o *VcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec) GetIssuerAliasOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IssuerAlias, true
}

// SetIssuerAlias sets field value
func (o *VcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec) SetIssuerAlias(v string) {
	o.IssuerAlias = v
}

// GetIssuer returns the Issuer field value
func (o *VcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec) GetIssuer() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Issuer
}

// GetIssuerOk returns a tuple with the Issuer field value
// and a boolean to check if the value has been set.
func (o *VcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec) GetIssuerOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Issuer, true
}

// SetIssuer sets field value
func (o *VcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec) SetIssuer(v string) {
	o.Issuer = v
}

// GetPrincipal returns the Principal field value
func (o *VcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec) GetPrincipal() VcenterTrustedInfrastructureStsPrincipal {
	if o == nil {
		var ret VcenterTrustedInfrastructureStsPrincipal
		return ret
	}

	return o.Principal
}

// GetPrincipalOk returns a tuple with the Principal field value
// and a boolean to check if the value has been set.
func (o *VcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec) GetPrincipalOk() (*VcenterTrustedInfrastructureStsPrincipal, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Principal, true
}

// SetPrincipal sets field value
func (o *VcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec) SetPrincipal(v VcenterTrustedInfrastructureStsPrincipal) {
	o.Principal = v
}

func (o VcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["certificates"] = o.Certificates
	}
	if true {
		toSerialize["issuer_alias"] = o.IssuerAlias
	}
	if true {
		toSerialize["issuer"] = o.Issuer
	}
	if true {
		toSerialize["principal"] = o.Principal
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec struct {
	value *VcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec
	isSet bool
}

func (v NullableVcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec) Get() *VcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec {
	return v.value
}

func (v *NullableVcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec) Set(val *VcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec(val *VcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec) *NullableVcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec {
	return &NullableVcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec{value: val, isSet: true}
}

func (v NullableVcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterTrustedInfrastructureTrustAuthorityClustersConsumerPrincipalsCreateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


