/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// VcenterContentRegistriesHarborInfo struct for VcenterContentRegistriesHarborInfo
type VcenterContentRegistriesHarborInfo struct {
	// Identifier of the cluster.
	Cluster *string `json:"cluster,omitempty"`
	// Identifier of the Harbor namespace in case it is created in a Kubernetes environment.
	Namespace *string `json:"namespace,omitempty"`
	// Version of the registry.
	Version string `json:"version"`
	// The date and time when the harbor registry was created.
	CreationTime time.Time `json:"creation_time"`
	// URL to access the UI of the registry.
	UiAccessUrl string `json:"ui_access_url"`
	// Harbor certificate chain in base64 format.
	CertChain []string `json:"cert_chain"`
	GarbageCollection VcenterContentRegistriesHarborGarbageCollection `json:"garbage_collection"`
	// Storage information associated with the registry.
	Storage []VcenterContentRegistriesHarborStorageInfo `json:"storage"`
	Health VcenterContentRegistriesHealthInfo `json:"health"`
}

// NewVcenterContentRegistriesHarborInfo instantiates a new VcenterContentRegistriesHarborInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterContentRegistriesHarborInfo(version string, creationTime time.Time, uiAccessUrl string, certChain []string, garbageCollection VcenterContentRegistriesHarborGarbageCollection, storage []VcenterContentRegistriesHarborStorageInfo, health VcenterContentRegistriesHealthInfo) *VcenterContentRegistriesHarborInfo {
	this := VcenterContentRegistriesHarborInfo{}
	this.Version = version
	this.CreationTime = creationTime
	this.UiAccessUrl = uiAccessUrl
	this.CertChain = certChain
	this.GarbageCollection = garbageCollection
	this.Storage = storage
	this.Health = health
	return &this
}

// NewVcenterContentRegistriesHarborInfoWithDefaults instantiates a new VcenterContentRegistriesHarborInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterContentRegistriesHarborInfoWithDefaults() *VcenterContentRegistriesHarborInfo {
	this := VcenterContentRegistriesHarborInfo{}
	return &this
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *VcenterContentRegistriesHarborInfo) GetCluster() string {
	if o == nil || o.Cluster == nil {
		var ret string
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterContentRegistriesHarborInfo) GetClusterOk() (*string, bool) {
	if o == nil || o.Cluster == nil {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *VcenterContentRegistriesHarborInfo) HasCluster() bool {
	if o != nil && o.Cluster != nil {
		return true
	}

	return false
}

// SetCluster gets a reference to the given string and assigns it to the Cluster field.
func (o *VcenterContentRegistriesHarborInfo) SetCluster(v string) {
	o.Cluster = &v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *VcenterContentRegistriesHarborInfo) GetNamespace() string {
	if o == nil || o.Namespace == nil {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterContentRegistriesHarborInfo) GetNamespaceOk() (*string, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *VcenterContentRegistriesHarborInfo) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *VcenterContentRegistriesHarborInfo) SetNamespace(v string) {
	o.Namespace = &v
}

// GetVersion returns the Version field value
func (o *VcenterContentRegistriesHarborInfo) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *VcenterContentRegistriesHarborInfo) GetVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *VcenterContentRegistriesHarborInfo) SetVersion(v string) {
	o.Version = v
}

// GetCreationTime returns the CreationTime field value
func (o *VcenterContentRegistriesHarborInfo) GetCreationTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreationTime
}

// GetCreationTimeOk returns a tuple with the CreationTime field value
// and a boolean to check if the value has been set.
func (o *VcenterContentRegistriesHarborInfo) GetCreationTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CreationTime, true
}

// SetCreationTime sets field value
func (o *VcenterContentRegistriesHarborInfo) SetCreationTime(v time.Time) {
	o.CreationTime = v
}

// GetUiAccessUrl returns the UiAccessUrl field value
func (o *VcenterContentRegistriesHarborInfo) GetUiAccessUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UiAccessUrl
}

// GetUiAccessUrlOk returns a tuple with the UiAccessUrl field value
// and a boolean to check if the value has been set.
func (o *VcenterContentRegistriesHarborInfo) GetUiAccessUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UiAccessUrl, true
}

// SetUiAccessUrl sets field value
func (o *VcenterContentRegistriesHarborInfo) SetUiAccessUrl(v string) {
	o.UiAccessUrl = v
}

// GetCertChain returns the CertChain field value
func (o *VcenterContentRegistriesHarborInfo) GetCertChain() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.CertChain
}

// GetCertChainOk returns a tuple with the CertChain field value
// and a boolean to check if the value has been set.
func (o *VcenterContentRegistriesHarborInfo) GetCertChainOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CertChain, true
}

// SetCertChain sets field value
func (o *VcenterContentRegistriesHarborInfo) SetCertChain(v []string) {
	o.CertChain = v
}

// GetGarbageCollection returns the GarbageCollection field value
func (o *VcenterContentRegistriesHarborInfo) GetGarbageCollection() VcenterContentRegistriesHarborGarbageCollection {
	if o == nil {
		var ret VcenterContentRegistriesHarborGarbageCollection
		return ret
	}

	return o.GarbageCollection
}

// GetGarbageCollectionOk returns a tuple with the GarbageCollection field value
// and a boolean to check if the value has been set.
func (o *VcenterContentRegistriesHarborInfo) GetGarbageCollectionOk() (*VcenterContentRegistriesHarborGarbageCollection, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.GarbageCollection, true
}

// SetGarbageCollection sets field value
func (o *VcenterContentRegistriesHarborInfo) SetGarbageCollection(v VcenterContentRegistriesHarborGarbageCollection) {
	o.GarbageCollection = v
}

// GetStorage returns the Storage field value
func (o *VcenterContentRegistriesHarborInfo) GetStorage() []VcenterContentRegistriesHarborStorageInfo {
	if o == nil {
		var ret []VcenterContentRegistriesHarborStorageInfo
		return ret
	}

	return o.Storage
}

// GetStorageOk returns a tuple with the Storage field value
// and a boolean to check if the value has been set.
func (o *VcenterContentRegistriesHarborInfo) GetStorageOk() (*[]VcenterContentRegistriesHarborStorageInfo, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Storage, true
}

// SetStorage sets field value
func (o *VcenterContentRegistriesHarborInfo) SetStorage(v []VcenterContentRegistriesHarborStorageInfo) {
	o.Storage = v
}

// GetHealth returns the Health field value
func (o *VcenterContentRegistriesHarborInfo) GetHealth() VcenterContentRegistriesHealthInfo {
	if o == nil {
		var ret VcenterContentRegistriesHealthInfo
		return ret
	}

	return o.Health
}

// GetHealthOk returns a tuple with the Health field value
// and a boolean to check if the value has been set.
func (o *VcenterContentRegistriesHarborInfo) GetHealthOk() (*VcenterContentRegistriesHealthInfo, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Health, true
}

// SetHealth sets field value
func (o *VcenterContentRegistriesHarborInfo) SetHealth(v VcenterContentRegistriesHealthInfo) {
	o.Health = v
}

func (o VcenterContentRegistriesHarborInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Cluster != nil {
		toSerialize["cluster"] = o.Cluster
	}
	if o.Namespace != nil {
		toSerialize["namespace"] = o.Namespace
	}
	if true {
		toSerialize["version"] = o.Version
	}
	if true {
		toSerialize["creation_time"] = o.CreationTime
	}
	if true {
		toSerialize["ui_access_url"] = o.UiAccessUrl
	}
	if true {
		toSerialize["cert_chain"] = o.CertChain
	}
	if true {
		toSerialize["garbage_collection"] = o.GarbageCollection
	}
	if true {
		toSerialize["storage"] = o.Storage
	}
	if true {
		toSerialize["health"] = o.Health
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterContentRegistriesHarborInfo struct {
	value *VcenterContentRegistriesHarborInfo
	isSet bool
}

func (v NullableVcenterContentRegistriesHarborInfo) Get() *VcenterContentRegistriesHarborInfo {
	return v.value
}

func (v *NullableVcenterContentRegistriesHarborInfo) Set(val *VcenterContentRegistriesHarborInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterContentRegistriesHarborInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterContentRegistriesHarborInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterContentRegistriesHarborInfo(val *VcenterContentRegistriesHarborInfo) *NullableVcenterContentRegistriesHarborInfo {
	return &NullableVcenterContentRegistriesHarborInfo{value: val, isSet: true}
}

func (v NullableVcenterContentRegistriesHarborInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterContentRegistriesHarborInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


