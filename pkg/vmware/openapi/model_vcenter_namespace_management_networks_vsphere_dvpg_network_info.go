/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo struct for VcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo
type VcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo struct {
	// Identifier of the vSphere Distributed Portgroup backing the vSphere network object. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network.
	Portgroup string `json:"portgroup"`
	// Usable IP pools on this network.
	AddressRanges []VcenterNamespaceManagementIPRange `json:"address_ranges"`
	// Gateway for the network.
	Gateway string `json:"gateway"`
	// Subnet mask of the network.
	SubnetMask string `json:"subnet_mask"`
}

// NewVcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo instantiates a new VcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo(portgroup string, addressRanges []VcenterNamespaceManagementIPRange, gateway string, subnetMask string) *VcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo {
	this := VcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo{}
	this.Portgroup = portgroup
	this.AddressRanges = addressRanges
	this.Gateway = gateway
	this.SubnetMask = subnetMask
	return &this
}

// NewVcenterNamespaceManagementNetworksVsphereDVPGNetworkInfoWithDefaults instantiates a new VcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterNamespaceManagementNetworksVsphereDVPGNetworkInfoWithDefaults() *VcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo {
	this := VcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo{}
	return &this
}

// GetPortgroup returns the Portgroup field value
func (o *VcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo) GetPortgroup() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Portgroup
}

// GetPortgroupOk returns a tuple with the Portgroup field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo) GetPortgroupOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Portgroup, true
}

// SetPortgroup sets field value
func (o *VcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo) SetPortgroup(v string) {
	o.Portgroup = v
}

// GetAddressRanges returns the AddressRanges field value
func (o *VcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo) GetAddressRanges() []VcenterNamespaceManagementIPRange {
	if o == nil {
		var ret []VcenterNamespaceManagementIPRange
		return ret
	}

	return o.AddressRanges
}

// GetAddressRangesOk returns a tuple with the AddressRanges field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo) GetAddressRangesOk() (*[]VcenterNamespaceManagementIPRange, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AddressRanges, true
}

// SetAddressRanges sets field value
func (o *VcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo) SetAddressRanges(v []VcenterNamespaceManagementIPRange) {
	o.AddressRanges = v
}

// GetGateway returns the Gateway field value
func (o *VcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo) GetGateway() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Gateway
}

// GetGatewayOk returns a tuple with the Gateway field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo) GetGatewayOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Gateway, true
}

// SetGateway sets field value
func (o *VcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo) SetGateway(v string) {
	o.Gateway = v
}

// GetSubnetMask returns the SubnetMask field value
func (o *VcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo) GetSubnetMask() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubnetMask
}

// GetSubnetMaskOk returns a tuple with the SubnetMask field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo) GetSubnetMaskOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SubnetMask, true
}

// SetSubnetMask sets field value
func (o *VcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo) SetSubnetMask(v string) {
	o.SubnetMask = v
}

func (o VcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["portgroup"] = o.Portgroup
	}
	if true {
		toSerialize["address_ranges"] = o.AddressRanges
	}
	if true {
		toSerialize["gateway"] = o.Gateway
	}
	if true {
		toSerialize["subnet_mask"] = o.SubnetMask
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo struct {
	value *VcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo
	isSet bool
}

func (v NullableVcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo) Get() *VcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo {
	return v.value
}

func (v *NullableVcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo) Set(val *VcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo(val *VcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo) *NullableVcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo {
	return &NullableVcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo{value: val, isSet: true}
}

func (v NullableVcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterNamespaceManagementNetworksVsphereDVPGNetworkInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


