/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterHvcManagementAdministratorsSetHvcManagementAdministrators struct for VcenterHvcManagementAdministratorsSetHvcManagementAdministrators
type VcenterHvcManagementAdministratorsSetHvcManagementAdministrators struct {
	// Names the groups to be in the CloudAdminGroup Ex - xyz@abc.com where xyz is the group name and abc.com is the domain name
	GroupNames *[]string `json:"group_names,omitempty"`
}

// NewVcenterHvcManagementAdministratorsSetHvcManagementAdministrators instantiates a new VcenterHvcManagementAdministratorsSetHvcManagementAdministrators object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterHvcManagementAdministratorsSetHvcManagementAdministrators() *VcenterHvcManagementAdministratorsSetHvcManagementAdministrators {
	this := VcenterHvcManagementAdministratorsSetHvcManagementAdministrators{}
	return &this
}

// NewVcenterHvcManagementAdministratorsSetHvcManagementAdministratorsWithDefaults instantiates a new VcenterHvcManagementAdministratorsSetHvcManagementAdministrators object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterHvcManagementAdministratorsSetHvcManagementAdministratorsWithDefaults() *VcenterHvcManagementAdministratorsSetHvcManagementAdministrators {
	this := VcenterHvcManagementAdministratorsSetHvcManagementAdministrators{}
	return &this
}

// GetGroupNames returns the GroupNames field value if set, zero value otherwise.
func (o *VcenterHvcManagementAdministratorsSetHvcManagementAdministrators) GetGroupNames() []string {
	if o == nil || o.GroupNames == nil {
		var ret []string
		return ret
	}
	return *o.GroupNames
}

// GetGroupNamesOk returns a tuple with the GroupNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterHvcManagementAdministratorsSetHvcManagementAdministrators) GetGroupNamesOk() (*[]string, bool) {
	if o == nil || o.GroupNames == nil {
		return nil, false
	}
	return o.GroupNames, true
}

// HasGroupNames returns a boolean if a field has been set.
func (o *VcenterHvcManagementAdministratorsSetHvcManagementAdministrators) HasGroupNames() bool {
	if o != nil && o.GroupNames != nil {
		return true
	}

	return false
}

// SetGroupNames gets a reference to the given []string and assigns it to the GroupNames field.
func (o *VcenterHvcManagementAdministratorsSetHvcManagementAdministrators) SetGroupNames(v []string) {
	o.GroupNames = &v
}

func (o VcenterHvcManagementAdministratorsSetHvcManagementAdministrators) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GroupNames != nil {
		toSerialize["group_names"] = o.GroupNames
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterHvcManagementAdministratorsSetHvcManagementAdministrators struct {
	value *VcenterHvcManagementAdministratorsSetHvcManagementAdministrators
	isSet bool
}

func (v NullableVcenterHvcManagementAdministratorsSetHvcManagementAdministrators) Get() *VcenterHvcManagementAdministratorsSetHvcManagementAdministrators {
	return v.value
}

func (v *NullableVcenterHvcManagementAdministratorsSetHvcManagementAdministrators) Set(val *VcenterHvcManagementAdministratorsSetHvcManagementAdministrators) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterHvcManagementAdministratorsSetHvcManagementAdministrators) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterHvcManagementAdministratorsSetHvcManagementAdministrators) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterHvcManagementAdministratorsSetHvcManagementAdministrators(val *VcenterHvcManagementAdministratorsSetHvcManagementAdministrators) *NullableVcenterHvcManagementAdministratorsSetHvcManagementAdministrators {
	return &NullableVcenterHvcManagementAdministratorsSetHvcManagementAdministrators{value: val, isSet: true}
}

func (v NullableVcenterHvcManagementAdministratorsSetHvcManagementAdministrators) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterHvcManagementAdministratorsSetHvcManagementAdministrators) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


