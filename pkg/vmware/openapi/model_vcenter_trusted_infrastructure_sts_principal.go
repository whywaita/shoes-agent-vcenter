/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterTrustedInfrastructureStsPrincipal struct for VcenterTrustedInfrastructureStsPrincipal
type VcenterTrustedInfrastructureStsPrincipal struct {
	Id VcenterTrustedInfrastructureStsPrincipalId `json:"id"`
	Type VcenterTrustedInfrastructureStsPrincipalType `json:"type"`
}

// NewVcenterTrustedInfrastructureStsPrincipal instantiates a new VcenterTrustedInfrastructureStsPrincipal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterTrustedInfrastructureStsPrincipal(id VcenterTrustedInfrastructureStsPrincipalId, type_ VcenterTrustedInfrastructureStsPrincipalType) *VcenterTrustedInfrastructureStsPrincipal {
	this := VcenterTrustedInfrastructureStsPrincipal{}
	this.Id = id
	this.Type = type_
	return &this
}

// NewVcenterTrustedInfrastructureStsPrincipalWithDefaults instantiates a new VcenterTrustedInfrastructureStsPrincipal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterTrustedInfrastructureStsPrincipalWithDefaults() *VcenterTrustedInfrastructureStsPrincipal {
	this := VcenterTrustedInfrastructureStsPrincipal{}
	return &this
}

// GetId returns the Id field value
func (o *VcenterTrustedInfrastructureStsPrincipal) GetId() VcenterTrustedInfrastructureStsPrincipalId {
	if o == nil {
		var ret VcenterTrustedInfrastructureStsPrincipalId
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *VcenterTrustedInfrastructureStsPrincipal) GetIdOk() (*VcenterTrustedInfrastructureStsPrincipalId, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *VcenterTrustedInfrastructureStsPrincipal) SetId(v VcenterTrustedInfrastructureStsPrincipalId) {
	o.Id = v
}

// GetType returns the Type field value
func (o *VcenterTrustedInfrastructureStsPrincipal) GetType() VcenterTrustedInfrastructureStsPrincipalType {
	if o == nil {
		var ret VcenterTrustedInfrastructureStsPrincipalType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *VcenterTrustedInfrastructureStsPrincipal) GetTypeOk() (*VcenterTrustedInfrastructureStsPrincipalType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *VcenterTrustedInfrastructureStsPrincipal) SetType(v VcenterTrustedInfrastructureStsPrincipalType) {
	o.Type = v
}

func (o VcenterTrustedInfrastructureStsPrincipal) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterTrustedInfrastructureStsPrincipal struct {
	value *VcenterTrustedInfrastructureStsPrincipal
	isSet bool
}

func (v NullableVcenterTrustedInfrastructureStsPrincipal) Get() *VcenterTrustedInfrastructureStsPrincipal {
	return v.value
}

func (v *NullableVcenterTrustedInfrastructureStsPrincipal) Set(val *VcenterTrustedInfrastructureStsPrincipal) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterTrustedInfrastructureStsPrincipal) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterTrustedInfrastructureStsPrincipal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterTrustedInfrastructureStsPrincipal(val *VcenterTrustedInfrastructureStsPrincipal) *NullableVcenterTrustedInfrastructureStsPrincipal {
	return &NullableVcenterTrustedInfrastructureStsPrincipal{value: val, isSet: true}
}

func (v NullableVcenterTrustedInfrastructureStsPrincipal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterTrustedInfrastructureStsPrincipal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


