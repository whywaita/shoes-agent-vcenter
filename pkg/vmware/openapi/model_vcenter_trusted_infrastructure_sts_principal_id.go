/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterTrustedInfrastructureStsPrincipalId struct for VcenterTrustedInfrastructureStsPrincipalId
type VcenterTrustedInfrastructureStsPrincipalId struct {
	// The principal's username.
	Name string `json:"name"`
	// The principal's domain.
	Domain string `json:"domain"`
}

// NewVcenterTrustedInfrastructureStsPrincipalId instantiates a new VcenterTrustedInfrastructureStsPrincipalId object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterTrustedInfrastructureStsPrincipalId(name string, domain string) *VcenterTrustedInfrastructureStsPrincipalId {
	this := VcenterTrustedInfrastructureStsPrincipalId{}
	this.Name = name
	this.Domain = domain
	return &this
}

// NewVcenterTrustedInfrastructureStsPrincipalIdWithDefaults instantiates a new VcenterTrustedInfrastructureStsPrincipalId object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterTrustedInfrastructureStsPrincipalIdWithDefaults() *VcenterTrustedInfrastructureStsPrincipalId {
	this := VcenterTrustedInfrastructureStsPrincipalId{}
	return &this
}

// GetName returns the Name field value
func (o *VcenterTrustedInfrastructureStsPrincipalId) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *VcenterTrustedInfrastructureStsPrincipalId) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *VcenterTrustedInfrastructureStsPrincipalId) SetName(v string) {
	o.Name = v
}

// GetDomain returns the Domain field value
func (o *VcenterTrustedInfrastructureStsPrincipalId) GetDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Domain
}

// GetDomainOk returns a tuple with the Domain field value
// and a boolean to check if the value has been set.
func (o *VcenterTrustedInfrastructureStsPrincipalId) GetDomainOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Domain, true
}

// SetDomain sets field value
func (o *VcenterTrustedInfrastructureStsPrincipalId) SetDomain(v string) {
	o.Domain = v
}

func (o VcenterTrustedInfrastructureStsPrincipalId) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["domain"] = o.Domain
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterTrustedInfrastructureStsPrincipalId struct {
	value *VcenterTrustedInfrastructureStsPrincipalId
	isSet bool
}

func (v NullableVcenterTrustedInfrastructureStsPrincipalId) Get() *VcenterTrustedInfrastructureStsPrincipalId {
	return v.value
}

func (v *NullableVcenterTrustedInfrastructureStsPrincipalId) Set(val *VcenterTrustedInfrastructureStsPrincipalId) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterTrustedInfrastructureStsPrincipalId) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterTrustedInfrastructureStsPrincipalId) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterTrustedInfrastructureStsPrincipalId(val *VcenterTrustedInfrastructureStsPrincipalId) *NullableVcenterTrustedInfrastructureStsPrincipalId {
	return &NullableVcenterTrustedInfrastructureStsPrincipalId{value: val, isSet: true}
}

func (v NullableVcenterTrustedInfrastructureStsPrincipalId) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterTrustedInfrastructureStsPrincipalId) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


