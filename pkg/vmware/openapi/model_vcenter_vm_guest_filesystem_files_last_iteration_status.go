/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// VcenterVmGuestFilesystemFilesLastIterationStatus The last status for the iterator. A field of this type is returned as part of the result and indicates to the caller of the API whether it can continue to make requests for more data. The last status only reports on the state of the iteration at the time data was last returned. As a result, it not does guarantee if the next call will succeed in getting more data or not. Failures to retrieve results will be returned as Error responses. These last statuses are only returned when the iterator is operating as expected.
type VcenterVmGuestFilesystemFilesLastIterationStatus string

// List of VcenterVmGuestFilesystemFilesLastIterationStatus
const (
	VCENTERVMGUESTFILESYSTEMFILESLASTITERATIONSTATUS_READY VcenterVmGuestFilesystemFilesLastIterationStatus = "READY"
	VCENTERVMGUESTFILESYSTEMFILESLASTITERATIONSTATUS_END_OF_DATA VcenterVmGuestFilesystemFilesLastIterationStatus = "END_OF_DATA"
)

// All allowed values of VcenterVmGuestFilesystemFilesLastIterationStatus enum
var AllowedVcenterVmGuestFilesystemFilesLastIterationStatusEnumValues = []VcenterVmGuestFilesystemFilesLastIterationStatus{
	"READY",
	"END_OF_DATA",
}

func (v *VcenterVmGuestFilesystemFilesLastIterationStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := VcenterVmGuestFilesystemFilesLastIterationStatus(value)
	for _, existing := range AllowedVcenterVmGuestFilesystemFilesLastIterationStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid VcenterVmGuestFilesystemFilesLastIterationStatus", value)
}

// NewVcenterVmGuestFilesystemFilesLastIterationStatusFromValue returns a pointer to a valid VcenterVmGuestFilesystemFilesLastIterationStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewVcenterVmGuestFilesystemFilesLastIterationStatusFromValue(v string) (*VcenterVmGuestFilesystemFilesLastIterationStatus, error) {
	ev := VcenterVmGuestFilesystemFilesLastIterationStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for VcenterVmGuestFilesystemFilesLastIterationStatus: valid values are %v", v, AllowedVcenterVmGuestFilesystemFilesLastIterationStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v VcenterVmGuestFilesystemFilesLastIterationStatus) IsValid() bool {
	for _, existing := range AllowedVcenterVmGuestFilesystemFilesLastIterationStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to VcenterVmGuestFilesystemFilesLastIterationStatus value
func (v VcenterVmGuestFilesystemFilesLastIterationStatus) Ptr() *VcenterVmGuestFilesystemFilesLastIterationStatus {
	return &v
}

type NullableVcenterVmGuestFilesystemFilesLastIterationStatus struct {
	value *VcenterVmGuestFilesystemFilesLastIterationStatus
	isSet bool
}

func (v NullableVcenterVmGuestFilesystemFilesLastIterationStatus) Get() *VcenterVmGuestFilesystemFilesLastIterationStatus {
	return v.value
}

func (v *NullableVcenterVmGuestFilesystemFilesLastIterationStatus) Set(val *VcenterVmGuestFilesystemFilesLastIterationStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterVmGuestFilesystemFilesLastIterationStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterVmGuestFilesystemFilesLastIterationStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterVmGuestFilesystemFilesLastIterationStatus(val *VcenterVmGuestFilesystemFilesLastIterationStatus) *NullableVcenterVmGuestFilesystemFilesLastIterationStatus {
	return &NullableVcenterVmGuestFilesystemFilesLastIterationStatus{value: val, isSet: true}
}

func (v NullableVcenterVmGuestFilesystemFilesLastIterationStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterVmGuestFilesystemFilesLastIterationStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

