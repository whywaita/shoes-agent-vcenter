/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterOvfParseIssue struct for VcenterOvfParseIssue
type VcenterOvfParseIssue struct {
	Category VcenterOvfParseIssueCategory `json:"category"`
	// The name of the file in which the parse issue was found.
	File string `json:"file"`
	// The line number of the line in the file (see {@link #file}) where the parse issue was found (or -1 if not applicable).
	LineNumber int64 `json:"line_number"`
	// The position in the line (see {@link #lineNumber}) (or -1 if not applicable).
	ColumnNumber int64 `json:"column_number"`
	Message VapiStdLocalizableMessage `json:"message"`
}

// NewVcenterOvfParseIssue instantiates a new VcenterOvfParseIssue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterOvfParseIssue(category VcenterOvfParseIssueCategory, file string, lineNumber int64, columnNumber int64, message VapiStdLocalizableMessage) *VcenterOvfParseIssue {
	this := VcenterOvfParseIssue{}
	this.Category = category
	this.File = file
	this.LineNumber = lineNumber
	this.ColumnNumber = columnNumber
	this.Message = message
	return &this
}

// NewVcenterOvfParseIssueWithDefaults instantiates a new VcenterOvfParseIssue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterOvfParseIssueWithDefaults() *VcenterOvfParseIssue {
	this := VcenterOvfParseIssue{}
	return &this
}

// GetCategory returns the Category field value
func (o *VcenterOvfParseIssue) GetCategory() VcenterOvfParseIssueCategory {
	if o == nil {
		var ret VcenterOvfParseIssueCategory
		return ret
	}

	return o.Category
}

// GetCategoryOk returns a tuple with the Category field value
// and a boolean to check if the value has been set.
func (o *VcenterOvfParseIssue) GetCategoryOk() (*VcenterOvfParseIssueCategory, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Category, true
}

// SetCategory sets field value
func (o *VcenterOvfParseIssue) SetCategory(v VcenterOvfParseIssueCategory) {
	o.Category = v
}

// GetFile returns the File field value
func (o *VcenterOvfParseIssue) GetFile() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.File
}

// GetFileOk returns a tuple with the File field value
// and a boolean to check if the value has been set.
func (o *VcenterOvfParseIssue) GetFileOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.File, true
}

// SetFile sets field value
func (o *VcenterOvfParseIssue) SetFile(v string) {
	o.File = v
}

// GetLineNumber returns the LineNumber field value
func (o *VcenterOvfParseIssue) GetLineNumber() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.LineNumber
}

// GetLineNumberOk returns a tuple with the LineNumber field value
// and a boolean to check if the value has been set.
func (o *VcenterOvfParseIssue) GetLineNumberOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.LineNumber, true
}

// SetLineNumber sets field value
func (o *VcenterOvfParseIssue) SetLineNumber(v int64) {
	o.LineNumber = v
}

// GetColumnNumber returns the ColumnNumber field value
func (o *VcenterOvfParseIssue) GetColumnNumber() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ColumnNumber
}

// GetColumnNumberOk returns a tuple with the ColumnNumber field value
// and a boolean to check if the value has been set.
func (o *VcenterOvfParseIssue) GetColumnNumberOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ColumnNumber, true
}

// SetColumnNumber sets field value
func (o *VcenterOvfParseIssue) SetColumnNumber(v int64) {
	o.ColumnNumber = v
}

// GetMessage returns the Message field value
func (o *VcenterOvfParseIssue) GetMessage() VapiStdLocalizableMessage {
	if o == nil {
		var ret VapiStdLocalizableMessage
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *VcenterOvfParseIssue) GetMessageOk() (*VapiStdLocalizableMessage, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *VcenterOvfParseIssue) SetMessage(v VapiStdLocalizableMessage) {
	o.Message = v
}

func (o VcenterOvfParseIssue) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["category"] = o.Category
	}
	if true {
		toSerialize["file"] = o.File
	}
	if true {
		toSerialize["line_number"] = o.LineNumber
	}
	if true {
		toSerialize["column_number"] = o.ColumnNumber
	}
	if true {
		toSerialize["message"] = o.Message
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterOvfParseIssue struct {
	value *VcenterOvfParseIssue
	isSet bool
}

func (v NullableVcenterOvfParseIssue) Get() *VcenterOvfParseIssue {
	return v.value
}

func (v *NullableVcenterOvfParseIssue) Set(val *VcenterOvfParseIssue) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterOvfParseIssue) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterOvfParseIssue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterOvfParseIssue(val *VcenterOvfParseIssue) *NullableVcenterOvfParseIssue {
	return &NullableVcenterOvfParseIssue{value: val, isSet: true}
}

func (v NullableVcenterOvfParseIssue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterOvfParseIssue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


