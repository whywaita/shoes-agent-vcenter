/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterNamespaceManagementSupervisorServicesSummary struct for VcenterNamespaceManagementSupervisorServicesSummary
type VcenterNamespaceManagementSupervisorServicesSummary struct {
	// The identifier of the Supervisor Service. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.namespace_management.SupervisorService. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.namespace_management.SupervisorService.
	SupervisorService string `json:"supervisor_service"`
	// The human readable name of the Supervisor Service.
	DisplayName string `json:"display_name"`
	State VcenterNamespaceManagementSupervisorServicesState `json:"state"`
}

// NewVcenterNamespaceManagementSupervisorServicesSummary instantiates a new VcenterNamespaceManagementSupervisorServicesSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterNamespaceManagementSupervisorServicesSummary(supervisorService string, displayName string, state VcenterNamespaceManagementSupervisorServicesState) *VcenterNamespaceManagementSupervisorServicesSummary {
	this := VcenterNamespaceManagementSupervisorServicesSummary{}
	this.SupervisorService = supervisorService
	this.DisplayName = displayName
	this.State = state
	return &this
}

// NewVcenterNamespaceManagementSupervisorServicesSummaryWithDefaults instantiates a new VcenterNamespaceManagementSupervisorServicesSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterNamespaceManagementSupervisorServicesSummaryWithDefaults() *VcenterNamespaceManagementSupervisorServicesSummary {
	this := VcenterNamespaceManagementSupervisorServicesSummary{}
	return &this
}

// GetSupervisorService returns the SupervisorService field value
func (o *VcenterNamespaceManagementSupervisorServicesSummary) GetSupervisorService() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SupervisorService
}

// GetSupervisorServiceOk returns a tuple with the SupervisorService field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespaceManagementSupervisorServicesSummary) GetSupervisorServiceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SupervisorService, true
}

// SetSupervisorService sets field value
func (o *VcenterNamespaceManagementSupervisorServicesSummary) SetSupervisorService(v string) {
	o.SupervisorService = v
}

// GetDisplayName returns the DisplayName field value
func (o *VcenterNamespaceManagementSupervisorServicesSummary) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespaceManagementSupervisorServicesSummary) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *VcenterNamespaceManagementSupervisorServicesSummary) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetState returns the State field value
func (o *VcenterNamespaceManagementSupervisorServicesSummary) GetState() VcenterNamespaceManagementSupervisorServicesState {
	if o == nil {
		var ret VcenterNamespaceManagementSupervisorServicesState
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespaceManagementSupervisorServicesSummary) GetStateOk() (*VcenterNamespaceManagementSupervisorServicesState, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *VcenterNamespaceManagementSupervisorServicesSummary) SetState(v VcenterNamespaceManagementSupervisorServicesState) {
	o.State = v
}

func (o VcenterNamespaceManagementSupervisorServicesSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["supervisor_service"] = o.SupervisorService
	}
	if true {
		toSerialize["display_name"] = o.DisplayName
	}
	if true {
		toSerialize["state"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterNamespaceManagementSupervisorServicesSummary struct {
	value *VcenterNamespaceManagementSupervisorServicesSummary
	isSet bool
}

func (v NullableVcenterNamespaceManagementSupervisorServicesSummary) Get() *VcenterNamespaceManagementSupervisorServicesSummary {
	return v.value
}

func (v *NullableVcenterNamespaceManagementSupervisorServicesSummary) Set(val *VcenterNamespaceManagementSupervisorServicesSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterNamespaceManagementSupervisorServicesSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterNamespaceManagementSupervisorServicesSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterNamespaceManagementSupervisorServicesSummary(val *VcenterNamespaceManagementSupervisorServicesSummary) *NullableVcenterNamespaceManagementSupervisorServicesSummary {
	return &NullableVcenterNamespaceManagementSupervisorServicesSummary{value: val, isSet: true}
}

func (v NullableVcenterNamespaceManagementSupervisorServicesSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterNamespaceManagementSupervisorServicesSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


