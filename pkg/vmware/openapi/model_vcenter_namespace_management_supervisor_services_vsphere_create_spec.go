/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterNamespaceManagementSupervisorServicesVsphereCreateSpec struct for VcenterNamespaceManagementSupervisorServicesVsphereCreateSpec
type VcenterNamespaceManagementSupervisorServicesVsphereCreateSpec struct {
	VersionSpec VcenterNamespaceManagementSupervisorServicesVersionsVsphereCreateSpec `json:"version_spec"`
}

// NewVcenterNamespaceManagementSupervisorServicesVsphereCreateSpec instantiates a new VcenterNamespaceManagementSupervisorServicesVsphereCreateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterNamespaceManagementSupervisorServicesVsphereCreateSpec(versionSpec VcenterNamespaceManagementSupervisorServicesVersionsVsphereCreateSpec) *VcenterNamespaceManagementSupervisorServicesVsphereCreateSpec {
	this := VcenterNamespaceManagementSupervisorServicesVsphereCreateSpec{}
	this.VersionSpec = versionSpec
	return &this
}

// NewVcenterNamespaceManagementSupervisorServicesVsphereCreateSpecWithDefaults instantiates a new VcenterNamespaceManagementSupervisorServicesVsphereCreateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterNamespaceManagementSupervisorServicesVsphereCreateSpecWithDefaults() *VcenterNamespaceManagementSupervisorServicesVsphereCreateSpec {
	this := VcenterNamespaceManagementSupervisorServicesVsphereCreateSpec{}
	return &this
}

// GetVersionSpec returns the VersionSpec field value
func (o *VcenterNamespaceManagementSupervisorServicesVsphereCreateSpec) GetVersionSpec() VcenterNamespaceManagementSupervisorServicesVersionsVsphereCreateSpec {
	if o == nil {
		var ret VcenterNamespaceManagementSupervisorServicesVersionsVsphereCreateSpec
		return ret
	}

	return o.VersionSpec
}

// GetVersionSpecOk returns a tuple with the VersionSpec field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespaceManagementSupervisorServicesVsphereCreateSpec) GetVersionSpecOk() (*VcenterNamespaceManagementSupervisorServicesVersionsVsphereCreateSpec, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VersionSpec, true
}

// SetVersionSpec sets field value
func (o *VcenterNamespaceManagementSupervisorServicesVsphereCreateSpec) SetVersionSpec(v VcenterNamespaceManagementSupervisorServicesVersionsVsphereCreateSpec) {
	o.VersionSpec = v
}

func (o VcenterNamespaceManagementSupervisorServicesVsphereCreateSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["version_spec"] = o.VersionSpec
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterNamespaceManagementSupervisorServicesVsphereCreateSpec struct {
	value *VcenterNamespaceManagementSupervisorServicesVsphereCreateSpec
	isSet bool
}

func (v NullableVcenterNamespaceManagementSupervisorServicesVsphereCreateSpec) Get() *VcenterNamespaceManagementSupervisorServicesVsphereCreateSpec {
	return v.value
}

func (v *NullableVcenterNamespaceManagementSupervisorServicesVsphereCreateSpec) Set(val *VcenterNamespaceManagementSupervisorServicesVsphereCreateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterNamespaceManagementSupervisorServicesVsphereCreateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterNamespaceManagementSupervisorServicesVsphereCreateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterNamespaceManagementSupervisorServicesVsphereCreateSpec(val *VcenterNamespaceManagementSupervisorServicesVsphereCreateSpec) *NullableVcenterNamespaceManagementSupervisorServicesVsphereCreateSpec {
	return &NullableVcenterNamespaceManagementSupervisorServicesVsphereCreateSpec{value: val, isSet: true}
}

func (v NullableVcenterNamespaceManagementSupervisorServicesVsphereCreateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterNamespaceManagementSupervisorServicesVsphereCreateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


