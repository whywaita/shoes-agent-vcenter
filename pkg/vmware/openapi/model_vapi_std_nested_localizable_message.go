/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VapiStdNestedLocalizableMessage struct for VapiStdNestedLocalizableMessage
type VapiStdNestedLocalizableMessage struct {
	// Unique identifier of the localizable string or message template. <p> This identifier is typically used to retrieve a locale-specific string or message template from a message catalog.
	Id string `json:"id"`
	// Named Arguments to be substituted into the message template.
	Params *[]VapiStdLocalizableMessageParams `json:"params,omitempty"`
}

// NewVapiStdNestedLocalizableMessage instantiates a new VapiStdNestedLocalizableMessage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVapiStdNestedLocalizableMessage(id string) *VapiStdNestedLocalizableMessage {
	this := VapiStdNestedLocalizableMessage{}
	this.Id = id
	return &this
}

// NewVapiStdNestedLocalizableMessageWithDefaults instantiates a new VapiStdNestedLocalizableMessage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVapiStdNestedLocalizableMessageWithDefaults() *VapiStdNestedLocalizableMessage {
	this := VapiStdNestedLocalizableMessage{}
	return &this
}

// GetId returns the Id field value
func (o *VapiStdNestedLocalizableMessage) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *VapiStdNestedLocalizableMessage) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *VapiStdNestedLocalizableMessage) SetId(v string) {
	o.Id = v
}

// GetParams returns the Params field value if set, zero value otherwise.
func (o *VapiStdNestedLocalizableMessage) GetParams() []VapiStdLocalizableMessageParams {
	if o == nil || o.Params == nil {
		var ret []VapiStdLocalizableMessageParams
		return ret
	}
	return *o.Params
}

// GetParamsOk returns a tuple with the Params field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VapiStdNestedLocalizableMessage) GetParamsOk() (*[]VapiStdLocalizableMessageParams, bool) {
	if o == nil || o.Params == nil {
		return nil, false
	}
	return o.Params, true
}

// HasParams returns a boolean if a field has been set.
func (o *VapiStdNestedLocalizableMessage) HasParams() bool {
	if o != nil && o.Params != nil {
		return true
	}

	return false
}

// SetParams gets a reference to the given []VapiStdLocalizableMessageParams and assigns it to the Params field.
func (o *VapiStdNestedLocalizableMessage) SetParams(v []VapiStdLocalizableMessageParams) {
	o.Params = &v
}

func (o VapiStdNestedLocalizableMessage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.Params != nil {
		toSerialize["params"] = o.Params
	}
	return json.Marshal(toSerialize)
}

type NullableVapiStdNestedLocalizableMessage struct {
	value *VapiStdNestedLocalizableMessage
	isSet bool
}

func (v NullableVapiStdNestedLocalizableMessage) Get() *VapiStdNestedLocalizableMessage {
	return v.value
}

func (v *NullableVapiStdNestedLocalizableMessage) Set(val *VapiStdNestedLocalizableMessage) {
	v.value = val
	v.isSet = true
}

func (v NullableVapiStdNestedLocalizableMessage) IsSet() bool {
	return v.isSet
}

func (v *NullableVapiStdNestedLocalizableMessage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVapiStdNestedLocalizableMessage(val *VapiStdNestedLocalizableMessage) *NullableVapiStdNestedLocalizableMessage {
	return &NullableVapiStdNestedLocalizableMessage{value: val, isSet: true}
}

func (v NullableVapiStdNestedLocalizableMessage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVapiStdNestedLocalizableMessage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


