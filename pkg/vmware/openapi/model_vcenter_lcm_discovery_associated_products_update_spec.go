/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterLcmDiscoveryAssociatedProductsUpdateSpec struct for VcenterLcmDiscoveryAssociatedProductsUpdateSpec
type VcenterLcmDiscoveryAssociatedProductsUpdateSpec struct {
	// The list of hostname/IPs of the instances of the VMware products deployed in the environment.
	Deployments *[]string `json:"deployments,omitempty"`
}

// NewVcenterLcmDiscoveryAssociatedProductsUpdateSpec instantiates a new VcenterLcmDiscoveryAssociatedProductsUpdateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterLcmDiscoveryAssociatedProductsUpdateSpec() *VcenterLcmDiscoveryAssociatedProductsUpdateSpec {
	this := VcenterLcmDiscoveryAssociatedProductsUpdateSpec{}
	return &this
}

// NewVcenterLcmDiscoveryAssociatedProductsUpdateSpecWithDefaults instantiates a new VcenterLcmDiscoveryAssociatedProductsUpdateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterLcmDiscoveryAssociatedProductsUpdateSpecWithDefaults() *VcenterLcmDiscoveryAssociatedProductsUpdateSpec {
	this := VcenterLcmDiscoveryAssociatedProductsUpdateSpec{}
	return &this
}

// GetDeployments returns the Deployments field value if set, zero value otherwise.
func (o *VcenterLcmDiscoveryAssociatedProductsUpdateSpec) GetDeployments() []string {
	if o == nil || o.Deployments == nil {
		var ret []string
		return ret
	}
	return *o.Deployments
}

// GetDeploymentsOk returns a tuple with the Deployments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterLcmDiscoveryAssociatedProductsUpdateSpec) GetDeploymentsOk() (*[]string, bool) {
	if o == nil || o.Deployments == nil {
		return nil, false
	}
	return o.Deployments, true
}

// HasDeployments returns a boolean if a field has been set.
func (o *VcenterLcmDiscoveryAssociatedProductsUpdateSpec) HasDeployments() bool {
	if o != nil && o.Deployments != nil {
		return true
	}

	return false
}

// SetDeployments gets a reference to the given []string and assigns it to the Deployments field.
func (o *VcenterLcmDiscoveryAssociatedProductsUpdateSpec) SetDeployments(v []string) {
	o.Deployments = &v
}

func (o VcenterLcmDiscoveryAssociatedProductsUpdateSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Deployments != nil {
		toSerialize["deployments"] = o.Deployments
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterLcmDiscoveryAssociatedProductsUpdateSpec struct {
	value *VcenterLcmDiscoveryAssociatedProductsUpdateSpec
	isSet bool
}

func (v NullableVcenterLcmDiscoveryAssociatedProductsUpdateSpec) Get() *VcenterLcmDiscoveryAssociatedProductsUpdateSpec {
	return v.value
}

func (v *NullableVcenterLcmDiscoveryAssociatedProductsUpdateSpec) Set(val *VcenterLcmDiscoveryAssociatedProductsUpdateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterLcmDiscoveryAssociatedProductsUpdateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterLcmDiscoveryAssociatedProductsUpdateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterLcmDiscoveryAssociatedProductsUpdateSpec(val *VcenterLcmDiscoveryAssociatedProductsUpdateSpec) *NullableVcenterLcmDiscoveryAssociatedProductsUpdateSpec {
	return &NullableVcenterLcmDiscoveryAssociatedProductsUpdateSpec{value: val, isSet: true}
}

func (v NullableVcenterLcmDiscoveryAssociatedProductsUpdateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterLcmDiscoveryAssociatedProductsUpdateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


