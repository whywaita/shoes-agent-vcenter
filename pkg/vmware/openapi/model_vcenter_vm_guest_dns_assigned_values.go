/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterVmGuestDnsAssignedValues struct for VcenterVmGuestDnsAssignedValues
type VcenterVmGuestDnsAssignedValues struct {
	// The host name portion of DNS name. For example, \"esx01\" part of esx01.example.com.
	HostName string `json:"host_name"`
	// The domain name portion of the DNS name. \"example.com\" part of esx01.example.com.
	DomainName string `json:"domain_name"`
}

// NewVcenterVmGuestDnsAssignedValues instantiates a new VcenterVmGuestDnsAssignedValues object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterVmGuestDnsAssignedValues(hostName string, domainName string) *VcenterVmGuestDnsAssignedValues {
	this := VcenterVmGuestDnsAssignedValues{}
	this.HostName = hostName
	this.DomainName = domainName
	return &this
}

// NewVcenterVmGuestDnsAssignedValuesWithDefaults instantiates a new VcenterVmGuestDnsAssignedValues object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterVmGuestDnsAssignedValuesWithDefaults() *VcenterVmGuestDnsAssignedValues {
	this := VcenterVmGuestDnsAssignedValues{}
	return &this
}

// GetHostName returns the HostName field value
func (o *VcenterVmGuestDnsAssignedValues) GetHostName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HostName
}

// GetHostNameOk returns a tuple with the HostName field value
// and a boolean to check if the value has been set.
func (o *VcenterVmGuestDnsAssignedValues) GetHostNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.HostName, true
}

// SetHostName sets field value
func (o *VcenterVmGuestDnsAssignedValues) SetHostName(v string) {
	o.HostName = v
}

// GetDomainName returns the DomainName field value
func (o *VcenterVmGuestDnsAssignedValues) GetDomainName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DomainName
}

// GetDomainNameOk returns a tuple with the DomainName field value
// and a boolean to check if the value has been set.
func (o *VcenterVmGuestDnsAssignedValues) GetDomainNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DomainName, true
}

// SetDomainName sets field value
func (o *VcenterVmGuestDnsAssignedValues) SetDomainName(v string) {
	o.DomainName = v
}

func (o VcenterVmGuestDnsAssignedValues) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["host_name"] = o.HostName
	}
	if true {
		toSerialize["domain_name"] = o.DomainName
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterVmGuestDnsAssignedValues struct {
	value *VcenterVmGuestDnsAssignedValues
	isSet bool
}

func (v NullableVcenterVmGuestDnsAssignedValues) Get() *VcenterVmGuestDnsAssignedValues {
	return v.value
}

func (v *NullableVcenterVmGuestDnsAssignedValues) Set(val *VcenterVmGuestDnsAssignedValues) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterVmGuestDnsAssignedValues) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterVmGuestDnsAssignedValues) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterVmGuestDnsAssignedValues(val *VcenterVmGuestDnsAssignedValues) *NullableVcenterVmGuestDnsAssignedValues {
	return &NullableVcenterVmGuestDnsAssignedValues{value: val, isSet: true}
}

func (v NullableVcenterVmGuestDnsAssignedValues) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterVmGuestDnsAssignedValues) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


