/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterVmHardwareAdapterNvmeCreateSpec struct for VcenterVmHardwareAdapterNvmeCreateSpec
type VcenterVmHardwareAdapterNvmeCreateSpec struct {
	// NVMe bus number. If unset, the server will choose an available bus number; if none is available, the request will fail.
	Bus *int64 `json:"bus,omitempty"`
	// Address of the NVMe adapter on the PCI bus. If unset, the server will choose an available address when the virtual machine is powered on.
	PciSlotNumber *int64 `json:"pci_slot_number,omitempty"`
}

// NewVcenterVmHardwareAdapterNvmeCreateSpec instantiates a new VcenterVmHardwareAdapterNvmeCreateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterVmHardwareAdapterNvmeCreateSpec() *VcenterVmHardwareAdapterNvmeCreateSpec {
	this := VcenterVmHardwareAdapterNvmeCreateSpec{}
	return &this
}

// NewVcenterVmHardwareAdapterNvmeCreateSpecWithDefaults instantiates a new VcenterVmHardwareAdapterNvmeCreateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterVmHardwareAdapterNvmeCreateSpecWithDefaults() *VcenterVmHardwareAdapterNvmeCreateSpec {
	this := VcenterVmHardwareAdapterNvmeCreateSpec{}
	return &this
}

// GetBus returns the Bus field value if set, zero value otherwise.
func (o *VcenterVmHardwareAdapterNvmeCreateSpec) GetBus() int64 {
	if o == nil || o.Bus == nil {
		var ret int64
		return ret
	}
	return *o.Bus
}

// GetBusOk returns a tuple with the Bus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmHardwareAdapterNvmeCreateSpec) GetBusOk() (*int64, bool) {
	if o == nil || o.Bus == nil {
		return nil, false
	}
	return o.Bus, true
}

// HasBus returns a boolean if a field has been set.
func (o *VcenterVmHardwareAdapterNvmeCreateSpec) HasBus() bool {
	if o != nil && o.Bus != nil {
		return true
	}

	return false
}

// SetBus gets a reference to the given int64 and assigns it to the Bus field.
func (o *VcenterVmHardwareAdapterNvmeCreateSpec) SetBus(v int64) {
	o.Bus = &v
}

// GetPciSlotNumber returns the PciSlotNumber field value if set, zero value otherwise.
func (o *VcenterVmHardwareAdapterNvmeCreateSpec) GetPciSlotNumber() int64 {
	if o == nil || o.PciSlotNumber == nil {
		var ret int64
		return ret
	}
	return *o.PciSlotNumber
}

// GetPciSlotNumberOk returns a tuple with the PciSlotNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmHardwareAdapterNvmeCreateSpec) GetPciSlotNumberOk() (*int64, bool) {
	if o == nil || o.PciSlotNumber == nil {
		return nil, false
	}
	return o.PciSlotNumber, true
}

// HasPciSlotNumber returns a boolean if a field has been set.
func (o *VcenterVmHardwareAdapterNvmeCreateSpec) HasPciSlotNumber() bool {
	if o != nil && o.PciSlotNumber != nil {
		return true
	}

	return false
}

// SetPciSlotNumber gets a reference to the given int64 and assigns it to the PciSlotNumber field.
func (o *VcenterVmHardwareAdapterNvmeCreateSpec) SetPciSlotNumber(v int64) {
	o.PciSlotNumber = &v
}

func (o VcenterVmHardwareAdapterNvmeCreateSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Bus != nil {
		toSerialize["bus"] = o.Bus
	}
	if o.PciSlotNumber != nil {
		toSerialize["pci_slot_number"] = o.PciSlotNumber
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterVmHardwareAdapterNvmeCreateSpec struct {
	value *VcenterVmHardwareAdapterNvmeCreateSpec
	isSet bool
}

func (v NullableVcenterVmHardwareAdapterNvmeCreateSpec) Get() *VcenterVmHardwareAdapterNvmeCreateSpec {
	return v.value
}

func (v *NullableVcenterVmHardwareAdapterNvmeCreateSpec) Set(val *VcenterVmHardwareAdapterNvmeCreateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterVmHardwareAdapterNvmeCreateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterVmHardwareAdapterNvmeCreateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterVmHardwareAdapterNvmeCreateSpec(val *VcenterVmHardwareAdapterNvmeCreateSpec) *NullableVcenterVmHardwareAdapterNvmeCreateSpec {
	return &NullableVcenterVmHardwareAdapterNvmeCreateSpec{value: val, isSet: true}
}

func (v NullableVcenterVmHardwareAdapterNvmeCreateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterVmHardwareAdapterNvmeCreateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


