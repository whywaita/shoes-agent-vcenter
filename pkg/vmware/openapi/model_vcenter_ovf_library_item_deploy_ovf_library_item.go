/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterOvfLibraryItemDeployOvfLibraryItem struct for VcenterOvfLibraryItemDeployOvfLibraryItem
type VcenterOvfLibraryItemDeployOvfLibraryItem struct {
	// Client-generated token used to retry a request if the client fails to get a response from the server. If the original request succeeded, the result of that request will be returned, otherwise the operation will be retried.
	ClientToken *string `json:"client_token,omitempty"`
	Target *VcenterOvfLibraryItemDeploymentTarget `json:"target,omitempty"`
	DeploymentSpec *VcenterOvfLibraryItemResourcePoolDeploymentSpec `json:"deployment_spec,omitempty"`
}

// NewVcenterOvfLibraryItemDeployOvfLibraryItem instantiates a new VcenterOvfLibraryItemDeployOvfLibraryItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterOvfLibraryItemDeployOvfLibraryItem() *VcenterOvfLibraryItemDeployOvfLibraryItem {
	this := VcenterOvfLibraryItemDeployOvfLibraryItem{}
	return &this
}

// NewVcenterOvfLibraryItemDeployOvfLibraryItemWithDefaults instantiates a new VcenterOvfLibraryItemDeployOvfLibraryItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterOvfLibraryItemDeployOvfLibraryItemWithDefaults() *VcenterOvfLibraryItemDeployOvfLibraryItem {
	this := VcenterOvfLibraryItemDeployOvfLibraryItem{}
	return &this
}

// GetClientToken returns the ClientToken field value if set, zero value otherwise.
func (o *VcenterOvfLibraryItemDeployOvfLibraryItem) GetClientToken() string {
	if o == nil || o.ClientToken == nil {
		var ret string
		return ret
	}
	return *o.ClientToken
}

// GetClientTokenOk returns a tuple with the ClientToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterOvfLibraryItemDeployOvfLibraryItem) GetClientTokenOk() (*string, bool) {
	if o == nil || o.ClientToken == nil {
		return nil, false
	}
	return o.ClientToken, true
}

// HasClientToken returns a boolean if a field has been set.
func (o *VcenterOvfLibraryItemDeployOvfLibraryItem) HasClientToken() bool {
	if o != nil && o.ClientToken != nil {
		return true
	}

	return false
}

// SetClientToken gets a reference to the given string and assigns it to the ClientToken field.
func (o *VcenterOvfLibraryItemDeployOvfLibraryItem) SetClientToken(v string) {
	o.ClientToken = &v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *VcenterOvfLibraryItemDeployOvfLibraryItem) GetTarget() VcenterOvfLibraryItemDeploymentTarget {
	if o == nil || o.Target == nil {
		var ret VcenterOvfLibraryItemDeploymentTarget
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterOvfLibraryItemDeployOvfLibraryItem) GetTargetOk() (*VcenterOvfLibraryItemDeploymentTarget, bool) {
	if o == nil || o.Target == nil {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *VcenterOvfLibraryItemDeployOvfLibraryItem) HasTarget() bool {
	if o != nil && o.Target != nil {
		return true
	}

	return false
}

// SetTarget gets a reference to the given VcenterOvfLibraryItemDeploymentTarget and assigns it to the Target field.
func (o *VcenterOvfLibraryItemDeployOvfLibraryItem) SetTarget(v VcenterOvfLibraryItemDeploymentTarget) {
	o.Target = &v
}

// GetDeploymentSpec returns the DeploymentSpec field value if set, zero value otherwise.
func (o *VcenterOvfLibraryItemDeployOvfLibraryItem) GetDeploymentSpec() VcenterOvfLibraryItemResourcePoolDeploymentSpec {
	if o == nil || o.DeploymentSpec == nil {
		var ret VcenterOvfLibraryItemResourcePoolDeploymentSpec
		return ret
	}
	return *o.DeploymentSpec
}

// GetDeploymentSpecOk returns a tuple with the DeploymentSpec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterOvfLibraryItemDeployOvfLibraryItem) GetDeploymentSpecOk() (*VcenterOvfLibraryItemResourcePoolDeploymentSpec, bool) {
	if o == nil || o.DeploymentSpec == nil {
		return nil, false
	}
	return o.DeploymentSpec, true
}

// HasDeploymentSpec returns a boolean if a field has been set.
func (o *VcenterOvfLibraryItemDeployOvfLibraryItem) HasDeploymentSpec() bool {
	if o != nil && o.DeploymentSpec != nil {
		return true
	}

	return false
}

// SetDeploymentSpec gets a reference to the given VcenterOvfLibraryItemResourcePoolDeploymentSpec and assigns it to the DeploymentSpec field.
func (o *VcenterOvfLibraryItemDeployOvfLibraryItem) SetDeploymentSpec(v VcenterOvfLibraryItemResourcePoolDeploymentSpec) {
	o.DeploymentSpec = &v
}

func (o VcenterOvfLibraryItemDeployOvfLibraryItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientToken != nil {
		toSerialize["client_token"] = o.ClientToken
	}
	if o.Target != nil {
		toSerialize["target"] = o.Target
	}
	if o.DeploymentSpec != nil {
		toSerialize["deployment_spec"] = o.DeploymentSpec
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterOvfLibraryItemDeployOvfLibraryItem struct {
	value *VcenterOvfLibraryItemDeployOvfLibraryItem
	isSet bool
}

func (v NullableVcenterOvfLibraryItemDeployOvfLibraryItem) Get() *VcenterOvfLibraryItemDeployOvfLibraryItem {
	return v.value
}

func (v *NullableVcenterOvfLibraryItemDeployOvfLibraryItem) Set(val *VcenterOvfLibraryItemDeployOvfLibraryItem) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterOvfLibraryItemDeployOvfLibraryItem) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterOvfLibraryItemDeployOvfLibraryItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterOvfLibraryItemDeployOvfLibraryItem(val *VcenterOvfLibraryItemDeployOvfLibraryItem) *NullableVcenterOvfLibraryItemDeployOvfLibraryItem {
	return &NullableVcenterOvfLibraryItemDeployOvfLibraryItem{value: val, isSet: true}
}

func (v NullableVcenterOvfLibraryItemDeployOvfLibraryItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterOvfLibraryItemDeployOvfLibraryItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


