/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterSystemConfigDeploymentTypeInfo struct for VcenterSystemConfigDeploymentTypeInfo
type VcenterSystemConfigDeploymentTypeInfo struct {
	Type VcenterDeploymentApplianceType `json:"type"`
}

// NewVcenterSystemConfigDeploymentTypeInfo instantiates a new VcenterSystemConfigDeploymentTypeInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterSystemConfigDeploymentTypeInfo(type_ VcenterDeploymentApplianceType) *VcenterSystemConfigDeploymentTypeInfo {
	this := VcenterSystemConfigDeploymentTypeInfo{}
	this.Type = type_
	return &this
}

// NewVcenterSystemConfigDeploymentTypeInfoWithDefaults instantiates a new VcenterSystemConfigDeploymentTypeInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterSystemConfigDeploymentTypeInfoWithDefaults() *VcenterSystemConfigDeploymentTypeInfo {
	this := VcenterSystemConfigDeploymentTypeInfo{}
	return &this
}

// GetType returns the Type field value
func (o *VcenterSystemConfigDeploymentTypeInfo) GetType() VcenterDeploymentApplianceType {
	if o == nil {
		var ret VcenterDeploymentApplianceType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *VcenterSystemConfigDeploymentTypeInfo) GetTypeOk() (*VcenterDeploymentApplianceType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *VcenterSystemConfigDeploymentTypeInfo) SetType(v VcenterDeploymentApplianceType) {
	o.Type = v
}

func (o VcenterSystemConfigDeploymentTypeInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterSystemConfigDeploymentTypeInfo struct {
	value *VcenterSystemConfigDeploymentTypeInfo
	isSet bool
}

func (v NullableVcenterSystemConfigDeploymentTypeInfo) Get() *VcenterSystemConfigDeploymentTypeInfo {
	return v.value
}

func (v *NullableVcenterSystemConfigDeploymentTypeInfo) Set(val *VcenterSystemConfigDeploymentTypeInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterSystemConfigDeploymentTypeInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterSystemConfigDeploymentTypeInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterSystemConfigDeploymentTypeInfo(val *VcenterSystemConfigDeploymentTypeInfo) *NullableVcenterSystemConfigDeploymentTypeInfo {
	return &NullableVcenterSystemConfigDeploymentTypeInfo{value: val, isSet: true}
}

func (v NullableVcenterSystemConfigDeploymentTypeInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterSystemConfigDeploymentTypeInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


