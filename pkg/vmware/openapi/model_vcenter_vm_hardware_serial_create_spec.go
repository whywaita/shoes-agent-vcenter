/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterVmHardwareSerialCreateSpec struct for VcenterVmHardwareSerialCreateSpec
type VcenterVmHardwareSerialCreateSpec struct {
	// CPU yield behavior. If set to true, the virtual machine will periodically relinquish the processor if its sole task is polling the virtual serial port. The amount of time it takes to regain the processor will depend on the degree of other virtual machine activity on the host. If unset, defaults to false.
	YieldOnPoll *bool `json:"yield_on_poll,omitempty"`
	Backing *VcenterVmHardwareSerialBackingSpec `json:"backing,omitempty"`
	// Flag indicating whether the virtual device should be connected whenever the virtual machine is powered on. Defaults to false if unset.
	StartConnected *bool `json:"start_connected,omitempty"`
	// Flag indicating whether the guest can connect and disconnect the device. Defaults to false if unset.
	AllowGuestControl *bool `json:"allow_guest_control,omitempty"`
}

// NewVcenterVmHardwareSerialCreateSpec instantiates a new VcenterVmHardwareSerialCreateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterVmHardwareSerialCreateSpec() *VcenterVmHardwareSerialCreateSpec {
	this := VcenterVmHardwareSerialCreateSpec{}
	return &this
}

// NewVcenterVmHardwareSerialCreateSpecWithDefaults instantiates a new VcenterVmHardwareSerialCreateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterVmHardwareSerialCreateSpecWithDefaults() *VcenterVmHardwareSerialCreateSpec {
	this := VcenterVmHardwareSerialCreateSpec{}
	return &this
}

// GetYieldOnPoll returns the YieldOnPoll field value if set, zero value otherwise.
func (o *VcenterVmHardwareSerialCreateSpec) GetYieldOnPoll() bool {
	if o == nil || o.YieldOnPoll == nil {
		var ret bool
		return ret
	}
	return *o.YieldOnPoll
}

// GetYieldOnPollOk returns a tuple with the YieldOnPoll field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmHardwareSerialCreateSpec) GetYieldOnPollOk() (*bool, bool) {
	if o == nil || o.YieldOnPoll == nil {
		return nil, false
	}
	return o.YieldOnPoll, true
}

// HasYieldOnPoll returns a boolean if a field has been set.
func (o *VcenterVmHardwareSerialCreateSpec) HasYieldOnPoll() bool {
	if o != nil && o.YieldOnPoll != nil {
		return true
	}

	return false
}

// SetYieldOnPoll gets a reference to the given bool and assigns it to the YieldOnPoll field.
func (o *VcenterVmHardwareSerialCreateSpec) SetYieldOnPoll(v bool) {
	o.YieldOnPoll = &v
}

// GetBacking returns the Backing field value if set, zero value otherwise.
func (o *VcenterVmHardwareSerialCreateSpec) GetBacking() VcenterVmHardwareSerialBackingSpec {
	if o == nil || o.Backing == nil {
		var ret VcenterVmHardwareSerialBackingSpec
		return ret
	}
	return *o.Backing
}

// GetBackingOk returns a tuple with the Backing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmHardwareSerialCreateSpec) GetBackingOk() (*VcenterVmHardwareSerialBackingSpec, bool) {
	if o == nil || o.Backing == nil {
		return nil, false
	}
	return o.Backing, true
}

// HasBacking returns a boolean if a field has been set.
func (o *VcenterVmHardwareSerialCreateSpec) HasBacking() bool {
	if o != nil && o.Backing != nil {
		return true
	}

	return false
}

// SetBacking gets a reference to the given VcenterVmHardwareSerialBackingSpec and assigns it to the Backing field.
func (o *VcenterVmHardwareSerialCreateSpec) SetBacking(v VcenterVmHardwareSerialBackingSpec) {
	o.Backing = &v
}

// GetStartConnected returns the StartConnected field value if set, zero value otherwise.
func (o *VcenterVmHardwareSerialCreateSpec) GetStartConnected() bool {
	if o == nil || o.StartConnected == nil {
		var ret bool
		return ret
	}
	return *o.StartConnected
}

// GetStartConnectedOk returns a tuple with the StartConnected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmHardwareSerialCreateSpec) GetStartConnectedOk() (*bool, bool) {
	if o == nil || o.StartConnected == nil {
		return nil, false
	}
	return o.StartConnected, true
}

// HasStartConnected returns a boolean if a field has been set.
func (o *VcenterVmHardwareSerialCreateSpec) HasStartConnected() bool {
	if o != nil && o.StartConnected != nil {
		return true
	}

	return false
}

// SetStartConnected gets a reference to the given bool and assigns it to the StartConnected field.
func (o *VcenterVmHardwareSerialCreateSpec) SetStartConnected(v bool) {
	o.StartConnected = &v
}

// GetAllowGuestControl returns the AllowGuestControl field value if set, zero value otherwise.
func (o *VcenterVmHardwareSerialCreateSpec) GetAllowGuestControl() bool {
	if o == nil || o.AllowGuestControl == nil {
		var ret bool
		return ret
	}
	return *o.AllowGuestControl
}

// GetAllowGuestControlOk returns a tuple with the AllowGuestControl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmHardwareSerialCreateSpec) GetAllowGuestControlOk() (*bool, bool) {
	if o == nil || o.AllowGuestControl == nil {
		return nil, false
	}
	return o.AllowGuestControl, true
}

// HasAllowGuestControl returns a boolean if a field has been set.
func (o *VcenterVmHardwareSerialCreateSpec) HasAllowGuestControl() bool {
	if o != nil && o.AllowGuestControl != nil {
		return true
	}

	return false
}

// SetAllowGuestControl gets a reference to the given bool and assigns it to the AllowGuestControl field.
func (o *VcenterVmHardwareSerialCreateSpec) SetAllowGuestControl(v bool) {
	o.AllowGuestControl = &v
}

func (o VcenterVmHardwareSerialCreateSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.YieldOnPoll != nil {
		toSerialize["yield_on_poll"] = o.YieldOnPoll
	}
	if o.Backing != nil {
		toSerialize["backing"] = o.Backing
	}
	if o.StartConnected != nil {
		toSerialize["start_connected"] = o.StartConnected
	}
	if o.AllowGuestControl != nil {
		toSerialize["allow_guest_control"] = o.AllowGuestControl
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterVmHardwareSerialCreateSpec struct {
	value *VcenterVmHardwareSerialCreateSpec
	isSet bool
}

func (v NullableVcenterVmHardwareSerialCreateSpec) Get() *VcenterVmHardwareSerialCreateSpec {
	return v.value
}

func (v *NullableVcenterVmHardwareSerialCreateSpec) Set(val *VcenterVmHardwareSerialCreateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterVmHardwareSerialCreateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterVmHardwareSerialCreateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterVmHardwareSerialCreateSpec(val *VcenterVmHardwareSerialCreateSpec) *NullableVcenterVmHardwareSerialCreateSpec {
	return &NullableVcenterVmHardwareSerialCreateSpec{value: val, isSet: true}
}

func (v NullableVcenterVmHardwareSerialCreateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterVmHardwareSerialCreateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


