/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterSystemConfigPscRegistrationInfo struct for VcenterSystemConfigPscRegistrationInfo
type VcenterSystemConfigPscRegistrationInfo struct {
	// The IP address or DNS resolvable name of the PSC this appliance is registered with.
	Address string `json:"address"`
	// The HTTPs port used by the external PSC.
	HttpsPort int64 `json:"https_port"`
	// The Single Sign-On domain name of the external PSC.
	SsoDomain string `json:"sso_domain"`
}

// NewVcenterSystemConfigPscRegistrationInfo instantiates a new VcenterSystemConfigPscRegistrationInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterSystemConfigPscRegistrationInfo(address string, httpsPort int64, ssoDomain string) *VcenterSystemConfigPscRegistrationInfo {
	this := VcenterSystemConfigPscRegistrationInfo{}
	this.Address = address
	this.HttpsPort = httpsPort
	this.SsoDomain = ssoDomain
	return &this
}

// NewVcenterSystemConfigPscRegistrationInfoWithDefaults instantiates a new VcenterSystemConfigPscRegistrationInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterSystemConfigPscRegistrationInfoWithDefaults() *VcenterSystemConfigPscRegistrationInfo {
	this := VcenterSystemConfigPscRegistrationInfo{}
	return &this
}

// GetAddress returns the Address field value
func (o *VcenterSystemConfigPscRegistrationInfo) GetAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *VcenterSystemConfigPscRegistrationInfo) GetAddressOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *VcenterSystemConfigPscRegistrationInfo) SetAddress(v string) {
	o.Address = v
}

// GetHttpsPort returns the HttpsPort field value
func (o *VcenterSystemConfigPscRegistrationInfo) GetHttpsPort() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.HttpsPort
}

// GetHttpsPortOk returns a tuple with the HttpsPort field value
// and a boolean to check if the value has been set.
func (o *VcenterSystemConfigPscRegistrationInfo) GetHttpsPortOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.HttpsPort, true
}

// SetHttpsPort sets field value
func (o *VcenterSystemConfigPscRegistrationInfo) SetHttpsPort(v int64) {
	o.HttpsPort = v
}

// GetSsoDomain returns the SsoDomain field value
func (o *VcenterSystemConfigPscRegistrationInfo) GetSsoDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SsoDomain
}

// GetSsoDomainOk returns a tuple with the SsoDomain field value
// and a boolean to check if the value has been set.
func (o *VcenterSystemConfigPscRegistrationInfo) GetSsoDomainOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SsoDomain, true
}

// SetSsoDomain sets field value
func (o *VcenterSystemConfigPscRegistrationInfo) SetSsoDomain(v string) {
	o.SsoDomain = v
}

func (o VcenterSystemConfigPscRegistrationInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["address"] = o.Address
	}
	if true {
		toSerialize["https_port"] = o.HttpsPort
	}
	if true {
		toSerialize["sso_domain"] = o.SsoDomain
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterSystemConfigPscRegistrationInfo struct {
	value *VcenterSystemConfigPscRegistrationInfo
	isSet bool
}

func (v NullableVcenterSystemConfigPscRegistrationInfo) Get() *VcenterSystemConfigPscRegistrationInfo {
	return v.value
}

func (v *NullableVcenterSystemConfigPscRegistrationInfo) Set(val *VcenterSystemConfigPscRegistrationInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterSystemConfigPscRegistrationInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterSystemConfigPscRegistrationInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterSystemConfigPscRegistrationInfo(val *VcenterSystemConfigPscRegistrationInfo) *NullableVcenterSystemConfigPscRegistrationInfo {
	return &NullableVcenterSystemConfigPscRegistrationInfo{value: val, isSet: true}
}

func (v NullableVcenterSystemConfigPscRegistrationInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterSystemConfigPscRegistrationInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


