/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterVmGuestNetworkingInterfacesIpConfigInfo struct for VcenterVmGuestNetworkingInterfacesIpConfigInfo
type VcenterVmGuestNetworkingInterfacesIpConfigInfo struct {
	// IP addresses configured on the interface.
	IpAddresses []VcenterVmGuestNetworkingInterfacesIpAddressInfo `json:"ip_addresses"`
	Dhcp *VcenterVmGuestDhcpConfigInfo `json:"dhcp,omitempty"`
}

// NewVcenterVmGuestNetworkingInterfacesIpConfigInfo instantiates a new VcenterVmGuestNetworkingInterfacesIpConfigInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterVmGuestNetworkingInterfacesIpConfigInfo(ipAddresses []VcenterVmGuestNetworkingInterfacesIpAddressInfo) *VcenterVmGuestNetworkingInterfacesIpConfigInfo {
	this := VcenterVmGuestNetworkingInterfacesIpConfigInfo{}
	this.IpAddresses = ipAddresses
	return &this
}

// NewVcenterVmGuestNetworkingInterfacesIpConfigInfoWithDefaults instantiates a new VcenterVmGuestNetworkingInterfacesIpConfigInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterVmGuestNetworkingInterfacesIpConfigInfoWithDefaults() *VcenterVmGuestNetworkingInterfacesIpConfigInfo {
	this := VcenterVmGuestNetworkingInterfacesIpConfigInfo{}
	return &this
}

// GetIpAddresses returns the IpAddresses field value
func (o *VcenterVmGuestNetworkingInterfacesIpConfigInfo) GetIpAddresses() []VcenterVmGuestNetworkingInterfacesIpAddressInfo {
	if o == nil {
		var ret []VcenterVmGuestNetworkingInterfacesIpAddressInfo
		return ret
	}

	return o.IpAddresses
}

// GetIpAddressesOk returns a tuple with the IpAddresses field value
// and a boolean to check if the value has been set.
func (o *VcenterVmGuestNetworkingInterfacesIpConfigInfo) GetIpAddressesOk() (*[]VcenterVmGuestNetworkingInterfacesIpAddressInfo, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.IpAddresses, true
}

// SetIpAddresses sets field value
func (o *VcenterVmGuestNetworkingInterfacesIpConfigInfo) SetIpAddresses(v []VcenterVmGuestNetworkingInterfacesIpAddressInfo) {
	o.IpAddresses = v
}

// GetDhcp returns the Dhcp field value if set, zero value otherwise.
func (o *VcenterVmGuestNetworkingInterfacesIpConfigInfo) GetDhcp() VcenterVmGuestDhcpConfigInfo {
	if o == nil || o.Dhcp == nil {
		var ret VcenterVmGuestDhcpConfigInfo
		return ret
	}
	return *o.Dhcp
}

// GetDhcpOk returns a tuple with the Dhcp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmGuestNetworkingInterfacesIpConfigInfo) GetDhcpOk() (*VcenterVmGuestDhcpConfigInfo, bool) {
	if o == nil || o.Dhcp == nil {
		return nil, false
	}
	return o.Dhcp, true
}

// HasDhcp returns a boolean if a field has been set.
func (o *VcenterVmGuestNetworkingInterfacesIpConfigInfo) HasDhcp() bool {
	if o != nil && o.Dhcp != nil {
		return true
	}

	return false
}

// SetDhcp gets a reference to the given VcenterVmGuestDhcpConfigInfo and assigns it to the Dhcp field.
func (o *VcenterVmGuestNetworkingInterfacesIpConfigInfo) SetDhcp(v VcenterVmGuestDhcpConfigInfo) {
	o.Dhcp = &v
}

func (o VcenterVmGuestNetworkingInterfacesIpConfigInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["ip_addresses"] = o.IpAddresses
	}
	if o.Dhcp != nil {
		toSerialize["dhcp"] = o.Dhcp
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterVmGuestNetworkingInterfacesIpConfigInfo struct {
	value *VcenterVmGuestNetworkingInterfacesIpConfigInfo
	isSet bool
}

func (v NullableVcenterVmGuestNetworkingInterfacesIpConfigInfo) Get() *VcenterVmGuestNetworkingInterfacesIpConfigInfo {
	return v.value
}

func (v *NullableVcenterVmGuestNetworkingInterfacesIpConfigInfo) Set(val *VcenterVmGuestNetworkingInterfacesIpConfigInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterVmGuestNetworkingInterfacesIpConfigInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterVmGuestNetworkingInterfacesIpConfigInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterVmGuestNetworkingInterfacesIpConfigInfo(val *VcenterVmGuestNetworkingInterfacesIpConfigInfo) *NullableVcenterVmGuestNetworkingInterfacesIpConfigInfo {
	return &NullableVcenterVmGuestNetworkingInterfacesIpConfigInfo{value: val, isSet: true}
}

func (v NullableVcenterVmGuestNetworkingInterfacesIpConfigInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterVmGuestNetworkingInterfacesIpConfigInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


