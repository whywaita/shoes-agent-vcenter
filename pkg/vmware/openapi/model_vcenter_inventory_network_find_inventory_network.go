/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterInventoryNetworkFindInventoryNetwork struct for VcenterInventoryNetworkFindInventoryNetwork
type VcenterInventoryNetworkFindInventoryNetwork struct {
	// Identifiers of the vCenter Server networks for which information will be returned.
	Networks *[]string `json:"networks,omitempty"`
}

// NewVcenterInventoryNetworkFindInventoryNetwork instantiates a new VcenterInventoryNetworkFindInventoryNetwork object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterInventoryNetworkFindInventoryNetwork() *VcenterInventoryNetworkFindInventoryNetwork {
	this := VcenterInventoryNetworkFindInventoryNetwork{}
	return &this
}

// NewVcenterInventoryNetworkFindInventoryNetworkWithDefaults instantiates a new VcenterInventoryNetworkFindInventoryNetwork object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterInventoryNetworkFindInventoryNetworkWithDefaults() *VcenterInventoryNetworkFindInventoryNetwork {
	this := VcenterInventoryNetworkFindInventoryNetwork{}
	return &this
}

// GetNetworks returns the Networks field value if set, zero value otherwise.
func (o *VcenterInventoryNetworkFindInventoryNetwork) GetNetworks() []string {
	if o == nil || o.Networks == nil {
		var ret []string
		return ret
	}
	return *o.Networks
}

// GetNetworksOk returns a tuple with the Networks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterInventoryNetworkFindInventoryNetwork) GetNetworksOk() (*[]string, bool) {
	if o == nil || o.Networks == nil {
		return nil, false
	}
	return o.Networks, true
}

// HasNetworks returns a boolean if a field has been set.
func (o *VcenterInventoryNetworkFindInventoryNetwork) HasNetworks() bool {
	if o != nil && o.Networks != nil {
		return true
	}

	return false
}

// SetNetworks gets a reference to the given []string and assigns it to the Networks field.
func (o *VcenterInventoryNetworkFindInventoryNetwork) SetNetworks(v []string) {
	o.Networks = &v
}

func (o VcenterInventoryNetworkFindInventoryNetwork) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Networks != nil {
		toSerialize["networks"] = o.Networks
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterInventoryNetworkFindInventoryNetwork struct {
	value *VcenterInventoryNetworkFindInventoryNetwork
	isSet bool
}

func (v NullableVcenterInventoryNetworkFindInventoryNetwork) Get() *VcenterInventoryNetworkFindInventoryNetwork {
	return v.value
}

func (v *NullableVcenterInventoryNetworkFindInventoryNetwork) Set(val *VcenterInventoryNetworkFindInventoryNetwork) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterInventoryNetworkFindInventoryNetwork) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterInventoryNetworkFindInventoryNetwork) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterInventoryNetworkFindInventoryNetwork(val *VcenterInventoryNetworkFindInventoryNetwork) *NullableVcenterInventoryNetworkFindInventoryNetwork {
	return &NullableVcenterInventoryNetworkFindInventoryNetwork{value: val, isSet: true}
}

func (v NullableVcenterInventoryNetworkFindInventoryNetwork) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterInventoryNetworkFindInventoryNetwork) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


