/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterNamespaceManagementClustersImageStorageSpec struct for VcenterNamespaceManagementClustersImageStorageSpec
type VcenterNamespaceManagementClustersImageStorageSpec struct {
	// Identifier of the storage policy. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: SpsStorageProfile. When operations return a value of this structure as a result, the field will be an identifier for the resource type: SpsStorageProfile.
	StoragePolicy string `json:"storage_policy"`
}

// NewVcenterNamespaceManagementClustersImageStorageSpec instantiates a new VcenterNamespaceManagementClustersImageStorageSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterNamespaceManagementClustersImageStorageSpec(storagePolicy string) *VcenterNamespaceManagementClustersImageStorageSpec {
	this := VcenterNamespaceManagementClustersImageStorageSpec{}
	this.StoragePolicy = storagePolicy
	return &this
}

// NewVcenterNamespaceManagementClustersImageStorageSpecWithDefaults instantiates a new VcenterNamespaceManagementClustersImageStorageSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterNamespaceManagementClustersImageStorageSpecWithDefaults() *VcenterNamespaceManagementClustersImageStorageSpec {
	this := VcenterNamespaceManagementClustersImageStorageSpec{}
	return &this
}

// GetStoragePolicy returns the StoragePolicy field value
func (o *VcenterNamespaceManagementClustersImageStorageSpec) GetStoragePolicy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StoragePolicy
}

// GetStoragePolicyOk returns a tuple with the StoragePolicy field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespaceManagementClustersImageStorageSpec) GetStoragePolicyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.StoragePolicy, true
}

// SetStoragePolicy sets field value
func (o *VcenterNamespaceManagementClustersImageStorageSpec) SetStoragePolicy(v string) {
	o.StoragePolicy = v
}

func (o VcenterNamespaceManagementClustersImageStorageSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["storage_policy"] = o.StoragePolicy
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterNamespaceManagementClustersImageStorageSpec struct {
	value *VcenterNamespaceManagementClustersImageStorageSpec
	isSet bool
}

func (v NullableVcenterNamespaceManagementClustersImageStorageSpec) Get() *VcenterNamespaceManagementClustersImageStorageSpec {
	return v.value
}

func (v *NullableVcenterNamespaceManagementClustersImageStorageSpec) Set(val *VcenterNamespaceManagementClustersImageStorageSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterNamespaceManagementClustersImageStorageSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterNamespaceManagementClustersImageStorageSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterNamespaceManagementClustersImageStorageSpec(val *VcenterNamespaceManagementClustersImageStorageSpec) *NullableVcenterNamespaceManagementClustersImageStorageSpec {
	return &NullableVcenterNamespaceManagementClustersImageStorageSpec{value: val, isSet: true}
}

func (v NullableVcenterNamespaceManagementClustersImageStorageSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterNamespaceManagementClustersImageStorageSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


