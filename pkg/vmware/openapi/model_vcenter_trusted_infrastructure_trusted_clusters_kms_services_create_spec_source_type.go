/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// VcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceType The Services.CreateSpec.SourceType enumerated type specifies source of truth the Key Provider Service will use for its configuration.
type VcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceType string

// List of VcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceType
const (
	VCENTERTRUSTEDINFRASTRUCTURETRUSTEDCLUSTERSKMSSERVICESCREATESPECSOURCETYPE_SERVICE VcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceType = "SERVICE"
	VCENTERTRUSTEDINFRASTRUCTURETRUSTEDCLUSTERSKMSSERVICESCREATESPECSOURCETYPE_CLUSTER VcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceType = "CLUSTER"
)

// All allowed values of VcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceType enum
var AllowedVcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceTypeEnumValues = []VcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceType{
	"SERVICE",
	"CLUSTER",
}

func (v *VcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := VcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceType(value)
	for _, existing := range AllowedVcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid VcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceType", value)
}

// NewVcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceTypeFromValue returns a pointer to a valid VcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewVcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceTypeFromValue(v string) (*VcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceType, error) {
	ev := VcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for VcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceType: valid values are %v", v, AllowedVcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v VcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceType) IsValid() bool {
	for _, existing := range AllowedVcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to VcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceType value
func (v VcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceType) Ptr() *VcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceType {
	return &v
}

type NullableVcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceType struct {
	value *VcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceType
	isSet bool
}

func (v NullableVcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceType) Get() *VcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceType {
	return v.value
}

func (v *NullableVcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceType) Set(val *VcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceType) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceType) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceType(val *VcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceType) *NullableVcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceType {
	return &NullableVcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceType{value: val, isSet: true}
}

func (v NullableVcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterTrustedInfrastructureTrustedClustersKmsServicesCreateSpecSourceType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

