/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterTokenserviceTokenExchangeExchangeSpec struct for VcenterTokenserviceTokenExchangeExchangeSpec
type VcenterTokenserviceTokenExchangeExchangeSpec struct {
	// The value of {@link TokenExchange#TOKEN_EXCHANGE_GRANT} indicates that a token exchange is being performed.
	GrantType string `json:"grant_type"`
	// Indicates the location of the target service or resource where the client intends to use the requested security token.
	Resource *string `json:"resource,omitempty"`
	// The logical name of the target service where the client intends to use the requested security token. This serves a purpose similar to the {@link ExchangeSpec#resource} parameter, but with the client providing a logical name rather than a location.
	Audience *string `json:"audience,omitempty"`
	// A list of space-delimited, case-sensitive strings, that allow the client to specify the desired scope of the requested security token in the context of the service or resource where the token will be used.
	Scope *string `json:"scope,omitempty"`
	// An identifier for the type of the requested security token. If the requested type is unspecified, the issued token type is at the discretion of the server and may be dictated by knowledge of the requirements of the service or resource indicated by the {@link ExchangeSpec#resource} or {@link ExchangeSpec#audience} parameter.
	RequestedTokenType *string `json:"requested_token_type,omitempty"`
	// A security token that represents the identity of the party on behalf of whom exchange is being made. Typically, the subject of this token will be the subject of the security token issued. Token is base64-encoded.
	SubjectToken string `json:"subject_token"`
	// An identifier, that indicates the type of the security token in the {@link ExchangeSpec#subject_token} parameter.
	SubjectTokenType string `json:"subject_token_type"`
	// A security token that represents the identity of the acting party. Typically, this will be the party that is authorized to use the requested security token and act on behalf of the subject.
	ActorToken *string `json:"actor_token,omitempty"`
	// An identifier, that indicates the type of the security token in the {@link ExchangeSpec#actor_token} parameter.
	ActorTokenType *string `json:"actor_token_type,omitempty"`
}

// NewVcenterTokenserviceTokenExchangeExchangeSpec instantiates a new VcenterTokenserviceTokenExchangeExchangeSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterTokenserviceTokenExchangeExchangeSpec(grantType string, subjectToken string, subjectTokenType string) *VcenterTokenserviceTokenExchangeExchangeSpec {
	this := VcenterTokenserviceTokenExchangeExchangeSpec{}
	this.GrantType = grantType
	this.SubjectToken = subjectToken
	this.SubjectTokenType = subjectTokenType
	return &this
}

// NewVcenterTokenserviceTokenExchangeExchangeSpecWithDefaults instantiates a new VcenterTokenserviceTokenExchangeExchangeSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterTokenserviceTokenExchangeExchangeSpecWithDefaults() *VcenterTokenserviceTokenExchangeExchangeSpec {
	this := VcenterTokenserviceTokenExchangeExchangeSpec{}
	return &this
}

// GetGrantType returns the GrantType field value
func (o *VcenterTokenserviceTokenExchangeExchangeSpec) GetGrantType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GrantType
}

// GetGrantTypeOk returns a tuple with the GrantType field value
// and a boolean to check if the value has been set.
func (o *VcenterTokenserviceTokenExchangeExchangeSpec) GetGrantTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.GrantType, true
}

// SetGrantType sets field value
func (o *VcenterTokenserviceTokenExchangeExchangeSpec) SetGrantType(v string) {
	o.GrantType = v
}

// GetResource returns the Resource field value if set, zero value otherwise.
func (o *VcenterTokenserviceTokenExchangeExchangeSpec) GetResource() string {
	if o == nil || o.Resource == nil {
		var ret string
		return ret
	}
	return *o.Resource
}

// GetResourceOk returns a tuple with the Resource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterTokenserviceTokenExchangeExchangeSpec) GetResourceOk() (*string, bool) {
	if o == nil || o.Resource == nil {
		return nil, false
	}
	return o.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (o *VcenterTokenserviceTokenExchangeExchangeSpec) HasResource() bool {
	if o != nil && o.Resource != nil {
		return true
	}

	return false
}

// SetResource gets a reference to the given string and assigns it to the Resource field.
func (o *VcenterTokenserviceTokenExchangeExchangeSpec) SetResource(v string) {
	o.Resource = &v
}

// GetAudience returns the Audience field value if set, zero value otherwise.
func (o *VcenterTokenserviceTokenExchangeExchangeSpec) GetAudience() string {
	if o == nil || o.Audience == nil {
		var ret string
		return ret
	}
	return *o.Audience
}

// GetAudienceOk returns a tuple with the Audience field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterTokenserviceTokenExchangeExchangeSpec) GetAudienceOk() (*string, bool) {
	if o == nil || o.Audience == nil {
		return nil, false
	}
	return o.Audience, true
}

// HasAudience returns a boolean if a field has been set.
func (o *VcenterTokenserviceTokenExchangeExchangeSpec) HasAudience() bool {
	if o != nil && o.Audience != nil {
		return true
	}

	return false
}

// SetAudience gets a reference to the given string and assigns it to the Audience field.
func (o *VcenterTokenserviceTokenExchangeExchangeSpec) SetAudience(v string) {
	o.Audience = &v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *VcenterTokenserviceTokenExchangeExchangeSpec) GetScope() string {
	if o == nil || o.Scope == nil {
		var ret string
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterTokenserviceTokenExchangeExchangeSpec) GetScopeOk() (*string, bool) {
	if o == nil || o.Scope == nil {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *VcenterTokenserviceTokenExchangeExchangeSpec) HasScope() bool {
	if o != nil && o.Scope != nil {
		return true
	}

	return false
}

// SetScope gets a reference to the given string and assigns it to the Scope field.
func (o *VcenterTokenserviceTokenExchangeExchangeSpec) SetScope(v string) {
	o.Scope = &v
}

// GetRequestedTokenType returns the RequestedTokenType field value if set, zero value otherwise.
func (o *VcenterTokenserviceTokenExchangeExchangeSpec) GetRequestedTokenType() string {
	if o == nil || o.RequestedTokenType == nil {
		var ret string
		return ret
	}
	return *o.RequestedTokenType
}

// GetRequestedTokenTypeOk returns a tuple with the RequestedTokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterTokenserviceTokenExchangeExchangeSpec) GetRequestedTokenTypeOk() (*string, bool) {
	if o == nil || o.RequestedTokenType == nil {
		return nil, false
	}
	return o.RequestedTokenType, true
}

// HasRequestedTokenType returns a boolean if a field has been set.
func (o *VcenterTokenserviceTokenExchangeExchangeSpec) HasRequestedTokenType() bool {
	if o != nil && o.RequestedTokenType != nil {
		return true
	}

	return false
}

// SetRequestedTokenType gets a reference to the given string and assigns it to the RequestedTokenType field.
func (o *VcenterTokenserviceTokenExchangeExchangeSpec) SetRequestedTokenType(v string) {
	o.RequestedTokenType = &v
}

// GetSubjectToken returns the SubjectToken field value
func (o *VcenterTokenserviceTokenExchangeExchangeSpec) GetSubjectToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubjectToken
}

// GetSubjectTokenOk returns a tuple with the SubjectToken field value
// and a boolean to check if the value has been set.
func (o *VcenterTokenserviceTokenExchangeExchangeSpec) GetSubjectTokenOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SubjectToken, true
}

// SetSubjectToken sets field value
func (o *VcenterTokenserviceTokenExchangeExchangeSpec) SetSubjectToken(v string) {
	o.SubjectToken = v
}

// GetSubjectTokenType returns the SubjectTokenType field value
func (o *VcenterTokenserviceTokenExchangeExchangeSpec) GetSubjectTokenType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubjectTokenType
}

// GetSubjectTokenTypeOk returns a tuple with the SubjectTokenType field value
// and a boolean to check if the value has been set.
func (o *VcenterTokenserviceTokenExchangeExchangeSpec) GetSubjectTokenTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SubjectTokenType, true
}

// SetSubjectTokenType sets field value
func (o *VcenterTokenserviceTokenExchangeExchangeSpec) SetSubjectTokenType(v string) {
	o.SubjectTokenType = v
}

// GetActorToken returns the ActorToken field value if set, zero value otherwise.
func (o *VcenterTokenserviceTokenExchangeExchangeSpec) GetActorToken() string {
	if o == nil || o.ActorToken == nil {
		var ret string
		return ret
	}
	return *o.ActorToken
}

// GetActorTokenOk returns a tuple with the ActorToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterTokenserviceTokenExchangeExchangeSpec) GetActorTokenOk() (*string, bool) {
	if o == nil || o.ActorToken == nil {
		return nil, false
	}
	return o.ActorToken, true
}

// HasActorToken returns a boolean if a field has been set.
func (o *VcenterTokenserviceTokenExchangeExchangeSpec) HasActorToken() bool {
	if o != nil && o.ActorToken != nil {
		return true
	}

	return false
}

// SetActorToken gets a reference to the given string and assigns it to the ActorToken field.
func (o *VcenterTokenserviceTokenExchangeExchangeSpec) SetActorToken(v string) {
	o.ActorToken = &v
}

// GetActorTokenType returns the ActorTokenType field value if set, zero value otherwise.
func (o *VcenterTokenserviceTokenExchangeExchangeSpec) GetActorTokenType() string {
	if o == nil || o.ActorTokenType == nil {
		var ret string
		return ret
	}
	return *o.ActorTokenType
}

// GetActorTokenTypeOk returns a tuple with the ActorTokenType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterTokenserviceTokenExchangeExchangeSpec) GetActorTokenTypeOk() (*string, bool) {
	if o == nil || o.ActorTokenType == nil {
		return nil, false
	}
	return o.ActorTokenType, true
}

// HasActorTokenType returns a boolean if a field has been set.
func (o *VcenterTokenserviceTokenExchangeExchangeSpec) HasActorTokenType() bool {
	if o != nil && o.ActorTokenType != nil {
		return true
	}

	return false
}

// SetActorTokenType gets a reference to the given string and assigns it to the ActorTokenType field.
func (o *VcenterTokenserviceTokenExchangeExchangeSpec) SetActorTokenType(v string) {
	o.ActorTokenType = &v
}

func (o VcenterTokenserviceTokenExchangeExchangeSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["grant_type"] = o.GrantType
	}
	if o.Resource != nil {
		toSerialize["resource"] = o.Resource
	}
	if o.Audience != nil {
		toSerialize["audience"] = o.Audience
	}
	if o.Scope != nil {
		toSerialize["scope"] = o.Scope
	}
	if o.RequestedTokenType != nil {
		toSerialize["requested_token_type"] = o.RequestedTokenType
	}
	if true {
		toSerialize["subject_token"] = o.SubjectToken
	}
	if true {
		toSerialize["subject_token_type"] = o.SubjectTokenType
	}
	if o.ActorToken != nil {
		toSerialize["actor_token"] = o.ActorToken
	}
	if o.ActorTokenType != nil {
		toSerialize["actor_token_type"] = o.ActorTokenType
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterTokenserviceTokenExchangeExchangeSpec struct {
	value *VcenterTokenserviceTokenExchangeExchangeSpec
	isSet bool
}

func (v NullableVcenterTokenserviceTokenExchangeExchangeSpec) Get() *VcenterTokenserviceTokenExchangeExchangeSpec {
	return v.value
}

func (v *NullableVcenterTokenserviceTokenExchangeExchangeSpec) Set(val *VcenterTokenserviceTokenExchangeExchangeSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterTokenserviceTokenExchangeExchangeSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterTokenserviceTokenExchangeExchangeSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterTokenserviceTokenExchangeExchangeSpec(val *VcenterTokenserviceTokenExchangeExchangeSpec) *NullableVcenterTokenserviceTokenExchangeExchangeSpec {
	return &NullableVcenterTokenserviceTokenExchangeExchangeSpec{value: val, isSet: true}
}

func (v NullableVcenterTokenserviceTokenExchangeExchangeSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterTokenserviceTokenExchangeExchangeSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


