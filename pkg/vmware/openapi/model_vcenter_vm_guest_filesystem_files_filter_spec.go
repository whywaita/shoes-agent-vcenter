/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterVmGuestFilesystemFilesFilterSpec struct for VcenterVmGuestFilesystemFilesFilterSpec
type VcenterVmGuestFilesystemFilesFilterSpec struct {
	// The perl-compatible regular expression used to filter the returned files. If unset the pattern '.*' (match everything) is used.
	MatchPattern *string `json:"match_pattern,omitempty"`
}

// NewVcenterVmGuestFilesystemFilesFilterSpec instantiates a new VcenterVmGuestFilesystemFilesFilterSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterVmGuestFilesystemFilesFilterSpec() *VcenterVmGuestFilesystemFilesFilterSpec {
	this := VcenterVmGuestFilesystemFilesFilterSpec{}
	return &this
}

// NewVcenterVmGuestFilesystemFilesFilterSpecWithDefaults instantiates a new VcenterVmGuestFilesystemFilesFilterSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterVmGuestFilesystemFilesFilterSpecWithDefaults() *VcenterVmGuestFilesystemFilesFilterSpec {
	this := VcenterVmGuestFilesystemFilesFilterSpec{}
	return &this
}

// GetMatchPattern returns the MatchPattern field value if set, zero value otherwise.
func (o *VcenterVmGuestFilesystemFilesFilterSpec) GetMatchPattern() string {
	if o == nil || o.MatchPattern == nil {
		var ret string
		return ret
	}
	return *o.MatchPattern
}

// GetMatchPatternOk returns a tuple with the MatchPattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmGuestFilesystemFilesFilterSpec) GetMatchPatternOk() (*string, bool) {
	if o == nil || o.MatchPattern == nil {
		return nil, false
	}
	return o.MatchPattern, true
}

// HasMatchPattern returns a boolean if a field has been set.
func (o *VcenterVmGuestFilesystemFilesFilterSpec) HasMatchPattern() bool {
	if o != nil && o.MatchPattern != nil {
		return true
	}

	return false
}

// SetMatchPattern gets a reference to the given string and assigns it to the MatchPattern field.
func (o *VcenterVmGuestFilesystemFilesFilterSpec) SetMatchPattern(v string) {
	o.MatchPattern = &v
}

func (o VcenterVmGuestFilesystemFilesFilterSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MatchPattern != nil {
		toSerialize["match_pattern"] = o.MatchPattern
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterVmGuestFilesystemFilesFilterSpec struct {
	value *VcenterVmGuestFilesystemFilesFilterSpec
	isSet bool
}

func (v NullableVcenterVmGuestFilesystemFilesFilterSpec) Get() *VcenterVmGuestFilesystemFilesFilterSpec {
	return v.value
}

func (v *NullableVcenterVmGuestFilesystemFilesFilterSpec) Set(val *VcenterVmGuestFilesystemFilesFilterSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterVmGuestFilesystemFilesFilterSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterVmGuestFilesystemFilesFilterSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterVmGuestFilesystemFilesFilterSpec(val *VcenterVmGuestFilesystemFilesFilterSpec) *NullableVcenterVmGuestFilesystemFilesFilterSpec {
	return &NullableVcenterVmGuestFilesystemFilesFilterSpec{value: val, isSet: true}
}

func (v NullableVcenterVmGuestFilesystemFilesFilterSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterVmGuestFilesystemFilesFilterSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


