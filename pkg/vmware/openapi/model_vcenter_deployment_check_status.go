/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// VcenterDeploymentCheckStatus The CheckStatus enumerated type defines the status of the checks.
type VcenterDeploymentCheckStatus string

// List of vcenter.deployment.check_status
const (
	VCENTERDEPLOYMENTCHECKSTATUS_SUCCESS VcenterDeploymentCheckStatus = "SUCCESS"
	VCENTERDEPLOYMENTCHECKSTATUS_FAILED VcenterDeploymentCheckStatus = "FAILED"
)

// All allowed values of VcenterDeploymentCheckStatus enum
var AllowedVcenterDeploymentCheckStatusEnumValues = []VcenterDeploymentCheckStatus{
	"SUCCESS",
	"FAILED",
}

func (v *VcenterDeploymentCheckStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := VcenterDeploymentCheckStatus(value)
	for _, existing := range AllowedVcenterDeploymentCheckStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid VcenterDeploymentCheckStatus", value)
}

// NewVcenterDeploymentCheckStatusFromValue returns a pointer to a valid VcenterDeploymentCheckStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewVcenterDeploymentCheckStatusFromValue(v string) (*VcenterDeploymentCheckStatus, error) {
	ev := VcenterDeploymentCheckStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for VcenterDeploymentCheckStatus: valid values are %v", v, AllowedVcenterDeploymentCheckStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v VcenterDeploymentCheckStatus) IsValid() bool {
	for _, existing := range AllowedVcenterDeploymentCheckStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to vcenter.deployment.check_status value
func (v VcenterDeploymentCheckStatus) Ptr() *VcenterDeploymentCheckStatus {
	return &v
}

type NullableVcenterDeploymentCheckStatus struct {
	value *VcenterDeploymentCheckStatus
	isSet bool
}

func (v NullableVcenterDeploymentCheckStatus) Get() *VcenterDeploymentCheckStatus {
	return v.value
}

func (v *NullableVcenterDeploymentCheckStatus) Set(val *VcenterDeploymentCheckStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterDeploymentCheckStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterDeploymentCheckStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterDeploymentCheckStatus(val *VcenterDeploymentCheckStatus) *NullableVcenterDeploymentCheckStatus {
	return &NullableVcenterDeploymentCheckStatus{value: val, isSet: true}
}

func (v NullableVcenterDeploymentCheckStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterDeploymentCheckStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

