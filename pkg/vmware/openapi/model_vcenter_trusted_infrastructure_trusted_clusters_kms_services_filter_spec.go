/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec struct for VcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec
type VcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec struct {
	// A set of IDs by which to filter the services. If unset, the services will not be filtered by ID. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: vcenter.trusted_infrastructure.kms.Service. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: vcenter.trusted_infrastructure.kms.Service.
	Services *[]string `json:"services,omitempty"`
	// The service's address. If unset, the services will not be filtered by address.
	Address *[]VcenterTrustedInfrastructureNetworkAddress `json:"address,omitempty"`
	// The group determines the Attestation Service instances this Key Provider Service can accept reports from. If unset, the services will not be filtered by group.
	Group *[]string `json:"group,omitempty"`
	// The cluster specifies the Trust Authority Cluster this Key Provider Service instance belongs to. If unset, the services will not be filtered by trustAuthorityCluster.
	TrustAuthorityCluster *[]string `json:"trust_authority_cluster,omitempty"`
}

// NewVcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec instantiates a new VcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec() *VcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec {
	this := VcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec{}
	return &this
}

// NewVcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpecWithDefaults instantiates a new VcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpecWithDefaults() *VcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec {
	this := VcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec{}
	return &this
}

// GetServices returns the Services field value if set, zero value otherwise.
func (o *VcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec) GetServices() []string {
	if o == nil || o.Services == nil {
		var ret []string
		return ret
	}
	return *o.Services
}

// GetServicesOk returns a tuple with the Services field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec) GetServicesOk() (*[]string, bool) {
	if o == nil || o.Services == nil {
		return nil, false
	}
	return o.Services, true
}

// HasServices returns a boolean if a field has been set.
func (o *VcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec) HasServices() bool {
	if o != nil && o.Services != nil {
		return true
	}

	return false
}

// SetServices gets a reference to the given []string and assigns it to the Services field.
func (o *VcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec) SetServices(v []string) {
	o.Services = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *VcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec) GetAddress() []VcenterTrustedInfrastructureNetworkAddress {
	if o == nil || o.Address == nil {
		var ret []VcenterTrustedInfrastructureNetworkAddress
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec) GetAddressOk() (*[]VcenterTrustedInfrastructureNetworkAddress, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *VcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given []VcenterTrustedInfrastructureNetworkAddress and assigns it to the Address field.
func (o *VcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec) SetAddress(v []VcenterTrustedInfrastructureNetworkAddress) {
	o.Address = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *VcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec) GetGroup() []string {
	if o == nil || o.Group == nil {
		var ret []string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec) GetGroupOk() (*[]string, bool) {
	if o == nil || o.Group == nil {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *VcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec) HasGroup() bool {
	if o != nil && o.Group != nil {
		return true
	}

	return false
}

// SetGroup gets a reference to the given []string and assigns it to the Group field.
func (o *VcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec) SetGroup(v []string) {
	o.Group = &v
}

// GetTrustAuthorityCluster returns the TrustAuthorityCluster field value if set, zero value otherwise.
func (o *VcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec) GetTrustAuthorityCluster() []string {
	if o == nil || o.TrustAuthorityCluster == nil {
		var ret []string
		return ret
	}
	return *o.TrustAuthorityCluster
}

// GetTrustAuthorityClusterOk returns a tuple with the TrustAuthorityCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec) GetTrustAuthorityClusterOk() (*[]string, bool) {
	if o == nil || o.TrustAuthorityCluster == nil {
		return nil, false
	}
	return o.TrustAuthorityCluster, true
}

// HasTrustAuthorityCluster returns a boolean if a field has been set.
func (o *VcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec) HasTrustAuthorityCluster() bool {
	if o != nil && o.TrustAuthorityCluster != nil {
		return true
	}

	return false
}

// SetTrustAuthorityCluster gets a reference to the given []string and assigns it to the TrustAuthorityCluster field.
func (o *VcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec) SetTrustAuthorityCluster(v []string) {
	o.TrustAuthorityCluster = &v
}

func (o VcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Services != nil {
		toSerialize["services"] = o.Services
	}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.Group != nil {
		toSerialize["group"] = o.Group
	}
	if o.TrustAuthorityCluster != nil {
		toSerialize["trust_authority_cluster"] = o.TrustAuthorityCluster
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec struct {
	value *VcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec
	isSet bool
}

func (v NullableVcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec) Get() *VcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec {
	return v.value
}

func (v *NullableVcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec) Set(val *VcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec(val *VcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec) *NullableVcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec {
	return &NullableVcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec{value: val, isSet: true}
}

func (v NullableVcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterTrustedInfrastructureTrustedClustersKmsServicesFilterSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


