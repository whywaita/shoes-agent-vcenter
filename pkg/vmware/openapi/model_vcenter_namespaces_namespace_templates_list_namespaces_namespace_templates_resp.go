/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterNamespacesNamespaceTemplatesListNamespacesNamespaceTemplatesResp struct for VcenterNamespacesNamespaceTemplatesListNamespacesNamespaceTemplatesResp
type VcenterNamespacesNamespaceTemplatesListNamespacesNamespaceTemplatesResp struct {
	Value []VcenterNamespacesNamespaceTemplatesSummary `json:"value"`
}

// NewVcenterNamespacesNamespaceTemplatesListNamespacesNamespaceTemplatesResp instantiates a new VcenterNamespacesNamespaceTemplatesListNamespacesNamespaceTemplatesResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterNamespacesNamespaceTemplatesListNamespacesNamespaceTemplatesResp(value []VcenterNamespacesNamespaceTemplatesSummary) *VcenterNamespacesNamespaceTemplatesListNamespacesNamespaceTemplatesResp {
	this := VcenterNamespacesNamespaceTemplatesListNamespacesNamespaceTemplatesResp{}
	this.Value = value
	return &this
}

// NewVcenterNamespacesNamespaceTemplatesListNamespacesNamespaceTemplatesRespWithDefaults instantiates a new VcenterNamespacesNamespaceTemplatesListNamespacesNamespaceTemplatesResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterNamespacesNamespaceTemplatesListNamespacesNamespaceTemplatesRespWithDefaults() *VcenterNamespacesNamespaceTemplatesListNamespacesNamespaceTemplatesResp {
	this := VcenterNamespacesNamespaceTemplatesListNamespacesNamespaceTemplatesResp{}
	return &this
}

// GetValue returns the Value field value
func (o *VcenterNamespacesNamespaceTemplatesListNamespacesNamespaceTemplatesResp) GetValue() []VcenterNamespacesNamespaceTemplatesSummary {
	if o == nil {
		var ret []VcenterNamespacesNamespaceTemplatesSummary
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespacesNamespaceTemplatesListNamespacesNamespaceTemplatesResp) GetValueOk() (*[]VcenterNamespacesNamespaceTemplatesSummary, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *VcenterNamespacesNamespaceTemplatesListNamespacesNamespaceTemplatesResp) SetValue(v []VcenterNamespacesNamespaceTemplatesSummary) {
	o.Value = v
}

func (o VcenterNamespacesNamespaceTemplatesListNamespacesNamespaceTemplatesResp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterNamespacesNamespaceTemplatesListNamespacesNamespaceTemplatesResp struct {
	value *VcenterNamespacesNamespaceTemplatesListNamespacesNamespaceTemplatesResp
	isSet bool
}

func (v NullableVcenterNamespacesNamespaceTemplatesListNamespacesNamespaceTemplatesResp) Get() *VcenterNamespacesNamespaceTemplatesListNamespacesNamespaceTemplatesResp {
	return v.value
}

func (v *NullableVcenterNamespacesNamespaceTemplatesListNamespacesNamespaceTemplatesResp) Set(val *VcenterNamespacesNamespaceTemplatesListNamespacesNamespaceTemplatesResp) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterNamespacesNamespaceTemplatesListNamespacesNamespaceTemplatesResp) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterNamespacesNamespaceTemplatesListNamespacesNamespaceTemplatesResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterNamespacesNamespaceTemplatesListNamespacesNamespaceTemplatesResp(val *VcenterNamespacesNamespaceTemplatesListNamespacesNamespaceTemplatesResp) *NullableVcenterNamespacesNamespaceTemplatesListNamespacesNamespaceTemplatesResp {
	return &NullableVcenterNamespacesNamespaceTemplatesListNamespacesNamespaceTemplatesResp{value: val, isSet: true}
}

func (v NullableVcenterNamespacesNamespaceTemplatesListNamespacesNamespaceTemplatesResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterNamespacesNamespaceTemplatesListNamespacesNamespaceTemplatesResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


