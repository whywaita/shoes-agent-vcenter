/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterComputePoliciesTagUsageSummary struct for VcenterComputePoliciesTagUsageSummary
type VcenterComputePoliciesTagUsageSummary struct {
	// Identifier of the policy that uses the tag indicated by {@link #tag}.
	Policy string `json:"policy"`
	// Identifier of the tag type used by the policy indicated by {@link #policy}.
	TagType string `json:"tag_type"`
	// Identifier of the tag used by the policy indicated by {@link #policy}.
	Tag string `json:"tag"`
	// Name of the tag used by the policy indicated by {@link #policy}.
	TagName string `json:"tag_name"`
	// Name of the category that has {@link #tag}.
	CategoryName string `json:"category_name"`
}

// NewVcenterComputePoliciesTagUsageSummary instantiates a new VcenterComputePoliciesTagUsageSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterComputePoliciesTagUsageSummary(policy string, tagType string, tag string, tagName string, categoryName string) *VcenterComputePoliciesTagUsageSummary {
	this := VcenterComputePoliciesTagUsageSummary{}
	this.Policy = policy
	this.TagType = tagType
	this.Tag = tag
	this.TagName = tagName
	this.CategoryName = categoryName
	return &this
}

// NewVcenterComputePoliciesTagUsageSummaryWithDefaults instantiates a new VcenterComputePoliciesTagUsageSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterComputePoliciesTagUsageSummaryWithDefaults() *VcenterComputePoliciesTagUsageSummary {
	this := VcenterComputePoliciesTagUsageSummary{}
	return &this
}

// GetPolicy returns the Policy field value
func (o *VcenterComputePoliciesTagUsageSummary) GetPolicy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value
// and a boolean to check if the value has been set.
func (o *VcenterComputePoliciesTagUsageSummary) GetPolicyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Policy, true
}

// SetPolicy sets field value
func (o *VcenterComputePoliciesTagUsageSummary) SetPolicy(v string) {
	o.Policy = v
}

// GetTagType returns the TagType field value
func (o *VcenterComputePoliciesTagUsageSummary) GetTagType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TagType
}

// GetTagTypeOk returns a tuple with the TagType field value
// and a boolean to check if the value has been set.
func (o *VcenterComputePoliciesTagUsageSummary) GetTagTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TagType, true
}

// SetTagType sets field value
func (o *VcenterComputePoliciesTagUsageSummary) SetTagType(v string) {
	o.TagType = v
}

// GetTag returns the Tag field value
func (o *VcenterComputePoliciesTagUsageSummary) GetTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value
// and a boolean to check if the value has been set.
func (o *VcenterComputePoliciesTagUsageSummary) GetTagOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Tag, true
}

// SetTag sets field value
func (o *VcenterComputePoliciesTagUsageSummary) SetTag(v string) {
	o.Tag = v
}

// GetTagName returns the TagName field value
func (o *VcenterComputePoliciesTagUsageSummary) GetTagName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TagName
}

// GetTagNameOk returns a tuple with the TagName field value
// and a boolean to check if the value has been set.
func (o *VcenterComputePoliciesTagUsageSummary) GetTagNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TagName, true
}

// SetTagName sets field value
func (o *VcenterComputePoliciesTagUsageSummary) SetTagName(v string) {
	o.TagName = v
}

// GetCategoryName returns the CategoryName field value
func (o *VcenterComputePoliciesTagUsageSummary) GetCategoryName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CategoryName
}

// GetCategoryNameOk returns a tuple with the CategoryName field value
// and a boolean to check if the value has been set.
func (o *VcenterComputePoliciesTagUsageSummary) GetCategoryNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CategoryName, true
}

// SetCategoryName sets field value
func (o *VcenterComputePoliciesTagUsageSummary) SetCategoryName(v string) {
	o.CategoryName = v
}

func (o VcenterComputePoliciesTagUsageSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["policy"] = o.Policy
	}
	if true {
		toSerialize["tag_type"] = o.TagType
	}
	if true {
		toSerialize["tag"] = o.Tag
	}
	if true {
		toSerialize["tag_name"] = o.TagName
	}
	if true {
		toSerialize["category_name"] = o.CategoryName
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterComputePoliciesTagUsageSummary struct {
	value *VcenterComputePoliciesTagUsageSummary
	isSet bool
}

func (v NullableVcenterComputePoliciesTagUsageSummary) Get() *VcenterComputePoliciesTagUsageSummary {
	return v.value
}

func (v *NullableVcenterComputePoliciesTagUsageSummary) Set(val *VcenterComputePoliciesTagUsageSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterComputePoliciesTagUsageSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterComputePoliciesTagUsageSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterComputePoliciesTagUsageSummary(val *VcenterComputePoliciesTagUsageSummary) *NullableVcenterComputePoliciesTagUsageSummary {
	return &NullableVcenterComputePoliciesTagUsageSummary{value: val, isSet: true}
}

func (v NullableVcenterComputePoliciesTagUsageSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterComputePoliciesTagUsageSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


