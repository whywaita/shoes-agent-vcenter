/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterDeploymentDataMigrationInfo struct for VcenterDeploymentDataMigrationInfo
type VcenterDeploymentDataMigrationInfo struct {
	Core VcenterDeploymentDataMigrationEstimate `json:"core"`
	CoreEventsTasks VcenterDeploymentDataMigrationEstimate `json:"core_events_tasks"`
	All VcenterDeploymentDataMigrationEstimate `json:"all"`
	CoreEventsTasksWithDeferred *VcenterDeploymentDataMigrationEstimate `json:"core_events_tasks_with_deferred,omitempty"`
	AllWithDeferred *VcenterDeploymentDataMigrationEstimate `json:"all_with_deferred,omitempty"`
}

// NewVcenterDeploymentDataMigrationInfo instantiates a new VcenterDeploymentDataMigrationInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterDeploymentDataMigrationInfo(core VcenterDeploymentDataMigrationEstimate, coreEventsTasks VcenterDeploymentDataMigrationEstimate, all VcenterDeploymentDataMigrationEstimate) *VcenterDeploymentDataMigrationInfo {
	this := VcenterDeploymentDataMigrationInfo{}
	this.Core = core
	this.CoreEventsTasks = coreEventsTasks
	this.All = all
	return &this
}

// NewVcenterDeploymentDataMigrationInfoWithDefaults instantiates a new VcenterDeploymentDataMigrationInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterDeploymentDataMigrationInfoWithDefaults() *VcenterDeploymentDataMigrationInfo {
	this := VcenterDeploymentDataMigrationInfo{}
	return &this
}

// GetCore returns the Core field value
func (o *VcenterDeploymentDataMigrationInfo) GetCore() VcenterDeploymentDataMigrationEstimate {
	if o == nil {
		var ret VcenterDeploymentDataMigrationEstimate
		return ret
	}

	return o.Core
}

// GetCoreOk returns a tuple with the Core field value
// and a boolean to check if the value has been set.
func (o *VcenterDeploymentDataMigrationInfo) GetCoreOk() (*VcenterDeploymentDataMigrationEstimate, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Core, true
}

// SetCore sets field value
func (o *VcenterDeploymentDataMigrationInfo) SetCore(v VcenterDeploymentDataMigrationEstimate) {
	o.Core = v
}

// GetCoreEventsTasks returns the CoreEventsTasks field value
func (o *VcenterDeploymentDataMigrationInfo) GetCoreEventsTasks() VcenterDeploymentDataMigrationEstimate {
	if o == nil {
		var ret VcenterDeploymentDataMigrationEstimate
		return ret
	}

	return o.CoreEventsTasks
}

// GetCoreEventsTasksOk returns a tuple with the CoreEventsTasks field value
// and a boolean to check if the value has been set.
func (o *VcenterDeploymentDataMigrationInfo) GetCoreEventsTasksOk() (*VcenterDeploymentDataMigrationEstimate, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CoreEventsTasks, true
}

// SetCoreEventsTasks sets field value
func (o *VcenterDeploymentDataMigrationInfo) SetCoreEventsTasks(v VcenterDeploymentDataMigrationEstimate) {
	o.CoreEventsTasks = v
}

// GetAll returns the All field value
func (o *VcenterDeploymentDataMigrationInfo) GetAll() VcenterDeploymentDataMigrationEstimate {
	if o == nil {
		var ret VcenterDeploymentDataMigrationEstimate
		return ret
	}

	return o.All
}

// GetAllOk returns a tuple with the All field value
// and a boolean to check if the value has been set.
func (o *VcenterDeploymentDataMigrationInfo) GetAllOk() (*VcenterDeploymentDataMigrationEstimate, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.All, true
}

// SetAll sets field value
func (o *VcenterDeploymentDataMigrationInfo) SetAll(v VcenterDeploymentDataMigrationEstimate) {
	o.All = v
}

// GetCoreEventsTasksWithDeferred returns the CoreEventsTasksWithDeferred field value if set, zero value otherwise.
func (o *VcenterDeploymentDataMigrationInfo) GetCoreEventsTasksWithDeferred() VcenterDeploymentDataMigrationEstimate {
	if o == nil || o.CoreEventsTasksWithDeferred == nil {
		var ret VcenterDeploymentDataMigrationEstimate
		return ret
	}
	return *o.CoreEventsTasksWithDeferred
}

// GetCoreEventsTasksWithDeferredOk returns a tuple with the CoreEventsTasksWithDeferred field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterDeploymentDataMigrationInfo) GetCoreEventsTasksWithDeferredOk() (*VcenterDeploymentDataMigrationEstimate, bool) {
	if o == nil || o.CoreEventsTasksWithDeferred == nil {
		return nil, false
	}
	return o.CoreEventsTasksWithDeferred, true
}

// HasCoreEventsTasksWithDeferred returns a boolean if a field has been set.
func (o *VcenterDeploymentDataMigrationInfo) HasCoreEventsTasksWithDeferred() bool {
	if o != nil && o.CoreEventsTasksWithDeferred != nil {
		return true
	}

	return false
}

// SetCoreEventsTasksWithDeferred gets a reference to the given VcenterDeploymentDataMigrationEstimate and assigns it to the CoreEventsTasksWithDeferred field.
func (o *VcenterDeploymentDataMigrationInfo) SetCoreEventsTasksWithDeferred(v VcenterDeploymentDataMigrationEstimate) {
	o.CoreEventsTasksWithDeferred = &v
}

// GetAllWithDeferred returns the AllWithDeferred field value if set, zero value otherwise.
func (o *VcenterDeploymentDataMigrationInfo) GetAllWithDeferred() VcenterDeploymentDataMigrationEstimate {
	if o == nil || o.AllWithDeferred == nil {
		var ret VcenterDeploymentDataMigrationEstimate
		return ret
	}
	return *o.AllWithDeferred
}

// GetAllWithDeferredOk returns a tuple with the AllWithDeferred field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterDeploymentDataMigrationInfo) GetAllWithDeferredOk() (*VcenterDeploymentDataMigrationEstimate, bool) {
	if o == nil || o.AllWithDeferred == nil {
		return nil, false
	}
	return o.AllWithDeferred, true
}

// HasAllWithDeferred returns a boolean if a field has been set.
func (o *VcenterDeploymentDataMigrationInfo) HasAllWithDeferred() bool {
	if o != nil && o.AllWithDeferred != nil {
		return true
	}

	return false
}

// SetAllWithDeferred gets a reference to the given VcenterDeploymentDataMigrationEstimate and assigns it to the AllWithDeferred field.
func (o *VcenterDeploymentDataMigrationInfo) SetAllWithDeferred(v VcenterDeploymentDataMigrationEstimate) {
	o.AllWithDeferred = &v
}

func (o VcenterDeploymentDataMigrationInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["core"] = o.Core
	}
	if true {
		toSerialize["core_events_tasks"] = o.CoreEventsTasks
	}
	if true {
		toSerialize["all"] = o.All
	}
	if o.CoreEventsTasksWithDeferred != nil {
		toSerialize["core_events_tasks_with_deferred"] = o.CoreEventsTasksWithDeferred
	}
	if o.AllWithDeferred != nil {
		toSerialize["all_with_deferred"] = o.AllWithDeferred
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterDeploymentDataMigrationInfo struct {
	value *VcenterDeploymentDataMigrationInfo
	isSet bool
}

func (v NullableVcenterDeploymentDataMigrationInfo) Get() *VcenterDeploymentDataMigrationInfo {
	return v.value
}

func (v *NullableVcenterDeploymentDataMigrationInfo) Set(val *VcenterDeploymentDataMigrationInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterDeploymentDataMigrationInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterDeploymentDataMigrationInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterDeploymentDataMigrationInfo(val *VcenterDeploymentDataMigrationInfo) *NullableVcenterDeploymentDataMigrationInfo {
	return &NullableVcenterDeploymentDataMigrationInfo{value: val, isSet: true}
}

func (v NullableVcenterDeploymentDataMigrationInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterDeploymentDataMigrationInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


