/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKeyServerCreateSpecType The Providers.KeyServerCreateSpec.Type enumerated type lists the key server types.
type VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKeyServerCreateSpecType string

// List of VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKeyServerCreateSpecType
const (
	VCENTERTRUSTEDINFRASTRUCTURETRUSTAUTHORITYCLUSTERSKMSPROVIDERSKEYSERVERCREATESPECTYPE_KMIP VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKeyServerCreateSpecType = "KMIP"
)

// All allowed values of VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKeyServerCreateSpecType enum
var AllowedVcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKeyServerCreateSpecTypeEnumValues = []VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKeyServerCreateSpecType{
	"KMIP",
}

func (v *VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKeyServerCreateSpecType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKeyServerCreateSpecType(value)
	for _, existing := range AllowedVcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKeyServerCreateSpecTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKeyServerCreateSpecType", value)
}

// NewVcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKeyServerCreateSpecTypeFromValue returns a pointer to a valid VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKeyServerCreateSpecType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewVcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKeyServerCreateSpecTypeFromValue(v string) (*VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKeyServerCreateSpecType, error) {
	ev := VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKeyServerCreateSpecType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKeyServerCreateSpecType: valid values are %v", v, AllowedVcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKeyServerCreateSpecTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKeyServerCreateSpecType) IsValid() bool {
	for _, existing := range AllowedVcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKeyServerCreateSpecTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKeyServerCreateSpecType value
func (v VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKeyServerCreateSpecType) Ptr() *VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKeyServerCreateSpecType {
	return &v
}

type NullableVcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKeyServerCreateSpecType struct {
	value *VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKeyServerCreateSpecType
	isSet bool
}

func (v NullableVcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKeyServerCreateSpecType) Get() *VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKeyServerCreateSpecType {
	return v.value
}

func (v *NullableVcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKeyServerCreateSpecType) Set(val *VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKeyServerCreateSpecType) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKeyServerCreateSpecType) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKeyServerCreateSpecType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKeyServerCreateSpecType(val *VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKeyServerCreateSpecType) *NullableVcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKeyServerCreateSpecType {
	return &NullableVcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKeyServerCreateSpecType{value: val, isSet: true}
}

func (v NullableVcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKeyServerCreateSpecType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKeyServerCreateSpecType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

