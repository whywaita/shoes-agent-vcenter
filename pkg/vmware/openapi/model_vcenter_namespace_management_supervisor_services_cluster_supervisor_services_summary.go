/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary struct for VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary
type VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary struct {
	// The identifier of the Supervisor Service. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.namespace_management.SupervisorService. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.namespace_management.SupervisorService.
	SupervisorService string `json:"supervisor_service"`
	// The desired version of this Supervisor Service.
	DesiredVersion string `json:"desired_version"`
	ConfigStatus VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesConfigStatus `json:"config_status"`
	// The current version for the Supervisor Service. If unset, there is no version installed for the Supervisor Service.
	CurrentVersion *string `json:"current_version,omitempty"`
}

// NewVcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary instantiates a new VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary(supervisorService string, desiredVersion string, configStatus VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesConfigStatus) *VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary {
	this := VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary{}
	this.SupervisorService = supervisorService
	this.DesiredVersion = desiredVersion
	this.ConfigStatus = configStatus
	return &this
}

// NewVcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummaryWithDefaults instantiates a new VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummaryWithDefaults() *VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary {
	this := VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary{}
	return &this
}

// GetSupervisorService returns the SupervisorService field value
func (o *VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary) GetSupervisorService() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SupervisorService
}

// GetSupervisorServiceOk returns a tuple with the SupervisorService field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary) GetSupervisorServiceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SupervisorService, true
}

// SetSupervisorService sets field value
func (o *VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary) SetSupervisorService(v string) {
	o.SupervisorService = v
}

// GetDesiredVersion returns the DesiredVersion field value
func (o *VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary) GetDesiredVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DesiredVersion
}

// GetDesiredVersionOk returns a tuple with the DesiredVersion field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary) GetDesiredVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DesiredVersion, true
}

// SetDesiredVersion sets field value
func (o *VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary) SetDesiredVersion(v string) {
	o.DesiredVersion = v
}

// GetConfigStatus returns the ConfigStatus field value
func (o *VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary) GetConfigStatus() VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesConfigStatus {
	if o == nil {
		var ret VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesConfigStatus
		return ret
	}

	return o.ConfigStatus
}

// GetConfigStatusOk returns a tuple with the ConfigStatus field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary) GetConfigStatusOk() (*VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesConfigStatus, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ConfigStatus, true
}

// SetConfigStatus sets field value
func (o *VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary) SetConfigStatus(v VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesConfigStatus) {
	o.ConfigStatus = v
}

// GetCurrentVersion returns the CurrentVersion field value if set, zero value otherwise.
func (o *VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary) GetCurrentVersion() string {
	if o == nil || o.CurrentVersion == nil {
		var ret string
		return ret
	}
	return *o.CurrentVersion
}

// GetCurrentVersionOk returns a tuple with the CurrentVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary) GetCurrentVersionOk() (*string, bool) {
	if o == nil || o.CurrentVersion == nil {
		return nil, false
	}
	return o.CurrentVersion, true
}

// HasCurrentVersion returns a boolean if a field has been set.
func (o *VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary) HasCurrentVersion() bool {
	if o != nil && o.CurrentVersion != nil {
		return true
	}

	return false
}

// SetCurrentVersion gets a reference to the given string and assigns it to the CurrentVersion field.
func (o *VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary) SetCurrentVersion(v string) {
	o.CurrentVersion = &v
}

func (o VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["supervisor_service"] = o.SupervisorService
	}
	if true {
		toSerialize["desired_version"] = o.DesiredVersion
	}
	if true {
		toSerialize["config_status"] = o.ConfigStatus
	}
	if o.CurrentVersion != nil {
		toSerialize["current_version"] = o.CurrentVersion
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary struct {
	value *VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary
	isSet bool
}

func (v NullableVcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary) Get() *VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary {
	return v.value
}

func (v *NullableVcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary) Set(val *VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary(val *VcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary) *NullableVcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary {
	return &NullableVcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary{value: val, isSet: true}
}

func (v NullableVcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterNamespaceManagementSupervisorServicesClusterSupervisorServicesSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


