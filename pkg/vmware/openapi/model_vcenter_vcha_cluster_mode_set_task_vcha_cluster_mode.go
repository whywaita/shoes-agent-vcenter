/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterVchaClusterModeSetTaskVchaClusterMode struct for VcenterVchaClusterModeSetTaskVchaClusterMode
type VcenterVchaClusterModeSetTaskVchaClusterMode struct {
	Mode *VcenterVchaClusterModeClusterMode `json:"mode,omitempty"`
}

// NewVcenterVchaClusterModeSetTaskVchaClusterMode instantiates a new VcenterVchaClusterModeSetTaskVchaClusterMode object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterVchaClusterModeSetTaskVchaClusterMode() *VcenterVchaClusterModeSetTaskVchaClusterMode {
	this := VcenterVchaClusterModeSetTaskVchaClusterMode{}
	return &this
}

// NewVcenterVchaClusterModeSetTaskVchaClusterModeWithDefaults instantiates a new VcenterVchaClusterModeSetTaskVchaClusterMode object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterVchaClusterModeSetTaskVchaClusterModeWithDefaults() *VcenterVchaClusterModeSetTaskVchaClusterMode {
	this := VcenterVchaClusterModeSetTaskVchaClusterMode{}
	return &this
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *VcenterVchaClusterModeSetTaskVchaClusterMode) GetMode() VcenterVchaClusterModeClusterMode {
	if o == nil || o.Mode == nil {
		var ret VcenterVchaClusterModeClusterMode
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVchaClusterModeSetTaskVchaClusterMode) GetModeOk() (*VcenterVchaClusterModeClusterMode, bool) {
	if o == nil || o.Mode == nil {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *VcenterVchaClusterModeSetTaskVchaClusterMode) HasMode() bool {
	if o != nil && o.Mode != nil {
		return true
	}

	return false
}

// SetMode gets a reference to the given VcenterVchaClusterModeClusterMode and assigns it to the Mode field.
func (o *VcenterVchaClusterModeSetTaskVchaClusterMode) SetMode(v VcenterVchaClusterModeClusterMode) {
	o.Mode = &v
}

func (o VcenterVchaClusterModeSetTaskVchaClusterMode) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Mode != nil {
		toSerialize["mode"] = o.Mode
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterVchaClusterModeSetTaskVchaClusterMode struct {
	value *VcenterVchaClusterModeSetTaskVchaClusterMode
	isSet bool
}

func (v NullableVcenterVchaClusterModeSetTaskVchaClusterMode) Get() *VcenterVchaClusterModeSetTaskVchaClusterMode {
	return v.value
}

func (v *NullableVcenterVchaClusterModeSetTaskVchaClusterMode) Set(val *VcenterVchaClusterModeSetTaskVchaClusterMode) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterVchaClusterModeSetTaskVchaClusterMode) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterVchaClusterModeSetTaskVchaClusterMode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterVchaClusterModeSetTaskVchaClusterMode(val *VcenterVchaClusterModeSetTaskVchaClusterMode) *NullableVcenterVchaClusterModeSetTaskVchaClusterMode {
	return &NullableVcenterVchaClusterModeSetTaskVchaClusterMode{value: val, isSet: true}
}

func (v NullableVcenterVchaClusterModeSetTaskVchaClusterMode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterVchaClusterModeSetTaskVchaClusterMode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


