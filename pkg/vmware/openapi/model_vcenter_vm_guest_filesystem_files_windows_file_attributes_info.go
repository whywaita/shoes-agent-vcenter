/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// VcenterVmGuestFilesystemFilesWindowsFileAttributesInfo struct for VcenterVmGuestFilesystemFilesWindowsFileAttributesInfo
type VcenterVmGuestFilesystemFilesWindowsFileAttributesInfo struct {
	// The file is hidden.
	Hidden bool `json:"hidden"`
	// The file is read-only.
	ReadOnly bool `json:"read_only"`
	// The date and time the file was created.
	Created time.Time `json:"created"`
}

// NewVcenterVmGuestFilesystemFilesWindowsFileAttributesInfo instantiates a new VcenterVmGuestFilesystemFilesWindowsFileAttributesInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterVmGuestFilesystemFilesWindowsFileAttributesInfo(hidden bool, readOnly bool, created time.Time) *VcenterVmGuestFilesystemFilesWindowsFileAttributesInfo {
	this := VcenterVmGuestFilesystemFilesWindowsFileAttributesInfo{}
	this.Hidden = hidden
	this.ReadOnly = readOnly
	this.Created = created
	return &this
}

// NewVcenterVmGuestFilesystemFilesWindowsFileAttributesInfoWithDefaults instantiates a new VcenterVmGuestFilesystemFilesWindowsFileAttributesInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterVmGuestFilesystemFilesWindowsFileAttributesInfoWithDefaults() *VcenterVmGuestFilesystemFilesWindowsFileAttributesInfo {
	this := VcenterVmGuestFilesystemFilesWindowsFileAttributesInfo{}
	return &this
}

// GetHidden returns the Hidden field value
func (o *VcenterVmGuestFilesystemFilesWindowsFileAttributesInfo) GetHidden() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Hidden
}

// GetHiddenOk returns a tuple with the Hidden field value
// and a boolean to check if the value has been set.
func (o *VcenterVmGuestFilesystemFilesWindowsFileAttributesInfo) GetHiddenOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Hidden, true
}

// SetHidden sets field value
func (o *VcenterVmGuestFilesystemFilesWindowsFileAttributesInfo) SetHidden(v bool) {
	o.Hidden = v
}

// GetReadOnly returns the ReadOnly field value
func (o *VcenterVmGuestFilesystemFilesWindowsFileAttributesInfo) GetReadOnly() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ReadOnly
}

// GetReadOnlyOk returns a tuple with the ReadOnly field value
// and a boolean to check if the value has been set.
func (o *VcenterVmGuestFilesystemFilesWindowsFileAttributesInfo) GetReadOnlyOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ReadOnly, true
}

// SetReadOnly sets field value
func (o *VcenterVmGuestFilesystemFilesWindowsFileAttributesInfo) SetReadOnly(v bool) {
	o.ReadOnly = v
}

// GetCreated returns the Created field value
func (o *VcenterVmGuestFilesystemFilesWindowsFileAttributesInfo) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *VcenterVmGuestFilesystemFilesWindowsFileAttributesInfo) GetCreatedOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *VcenterVmGuestFilesystemFilesWindowsFileAttributesInfo) SetCreated(v time.Time) {
	o.Created = v
}

func (o VcenterVmGuestFilesystemFilesWindowsFileAttributesInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["hidden"] = o.Hidden
	}
	if true {
		toSerialize["read_only"] = o.ReadOnly
	}
	if true {
		toSerialize["created"] = o.Created
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterVmGuestFilesystemFilesWindowsFileAttributesInfo struct {
	value *VcenterVmGuestFilesystemFilesWindowsFileAttributesInfo
	isSet bool
}

func (v NullableVcenterVmGuestFilesystemFilesWindowsFileAttributesInfo) Get() *VcenterVmGuestFilesystemFilesWindowsFileAttributesInfo {
	return v.value
}

func (v *NullableVcenterVmGuestFilesystemFilesWindowsFileAttributesInfo) Set(val *VcenterVmGuestFilesystemFilesWindowsFileAttributesInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterVmGuestFilesystemFilesWindowsFileAttributesInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterVmGuestFilesystemFilesWindowsFileAttributesInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterVmGuestFilesystemFilesWindowsFileAttributesInfo(val *VcenterVmGuestFilesystemFilesWindowsFileAttributesInfo) *NullableVcenterVmGuestFilesystemFilesWindowsFileAttributesInfo {
	return &NullableVcenterVmGuestFilesystemFilesWindowsFileAttributesInfo{value: val, isSet: true}
}

func (v NullableVcenterVmGuestFilesystemFilesWindowsFileAttributesInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterVmGuestFilesystemFilesWindowsFileAttributesInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


