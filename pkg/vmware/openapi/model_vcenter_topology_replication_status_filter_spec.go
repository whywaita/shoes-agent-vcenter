/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterTopologyReplicationStatusFilterSpec struct for VcenterTopologyReplicationStatusFilterSpec
type VcenterTopologyReplicationStatusFilterSpec struct {
	// Identifier that a vCenter and Platform Services Controller node must have to match the filter. (see ReplicationStatus.Summary.node). If unset or empty, all vCenter and Platform Services Controller nodes of type VCSA_EMBEDDED/PSC_EXTERNAL match the filter. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: vcenter.VCenter.name. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: vcenter.VCenter.name.
	Nodes *[]string `json:"nodes,omitempty"`
}

// NewVcenterTopologyReplicationStatusFilterSpec instantiates a new VcenterTopologyReplicationStatusFilterSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterTopologyReplicationStatusFilterSpec() *VcenterTopologyReplicationStatusFilterSpec {
	this := VcenterTopologyReplicationStatusFilterSpec{}
	return &this
}

// NewVcenterTopologyReplicationStatusFilterSpecWithDefaults instantiates a new VcenterTopologyReplicationStatusFilterSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterTopologyReplicationStatusFilterSpecWithDefaults() *VcenterTopologyReplicationStatusFilterSpec {
	this := VcenterTopologyReplicationStatusFilterSpec{}
	return &this
}

// GetNodes returns the Nodes field value if set, zero value otherwise.
func (o *VcenterTopologyReplicationStatusFilterSpec) GetNodes() []string {
	if o == nil || o.Nodes == nil {
		var ret []string
		return ret
	}
	return *o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterTopologyReplicationStatusFilterSpec) GetNodesOk() (*[]string, bool) {
	if o == nil || o.Nodes == nil {
		return nil, false
	}
	return o.Nodes, true
}

// HasNodes returns a boolean if a field has been set.
func (o *VcenterTopologyReplicationStatusFilterSpec) HasNodes() bool {
	if o != nil && o.Nodes != nil {
		return true
	}

	return false
}

// SetNodes gets a reference to the given []string and assigns it to the Nodes field.
func (o *VcenterTopologyReplicationStatusFilterSpec) SetNodes(v []string) {
	o.Nodes = &v
}

func (o VcenterTopologyReplicationStatusFilterSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Nodes != nil {
		toSerialize["nodes"] = o.Nodes
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterTopologyReplicationStatusFilterSpec struct {
	value *VcenterTopologyReplicationStatusFilterSpec
	isSet bool
}

func (v NullableVcenterTopologyReplicationStatusFilterSpec) Get() *VcenterTopologyReplicationStatusFilterSpec {
	return v.value
}

func (v *NullableVcenterTopologyReplicationStatusFilterSpec) Set(val *VcenterTopologyReplicationStatusFilterSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterTopologyReplicationStatusFilterSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterTopologyReplicationStatusFilterSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterTopologyReplicationStatusFilterSpec(val *VcenterTopologyReplicationStatusFilterSpec) *NullableVcenterTopologyReplicationStatusFilterSpec {
	return &NullableVcenterTopologyReplicationStatusFilterSpec{value: val, isSet: true}
}

func (v NullableVcenterTopologyReplicationStatusFilterSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterTopologyReplicationStatusFilterSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


