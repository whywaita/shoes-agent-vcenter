/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKmipServerCreateSpec struct for VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKmipServerCreateSpec
type VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKmipServerCreateSpec struct {
	// List of Key Management Interoperability Protocol (KMIP) compliant key servers.   Key servers must be configured for active-active replication. If the server port is unset, a default value for KMIP's port will be used. 
	Servers []VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersServer `json:"servers"`
	// Username for authentication. If unset, no username will be added.
	Username *string `json:"username,omitempty"`
}

// NewVcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKmipServerCreateSpec instantiates a new VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKmipServerCreateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKmipServerCreateSpec(servers []VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersServer) *VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKmipServerCreateSpec {
	this := VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKmipServerCreateSpec{}
	this.Servers = servers
	return &this
}

// NewVcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKmipServerCreateSpecWithDefaults instantiates a new VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKmipServerCreateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKmipServerCreateSpecWithDefaults() *VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKmipServerCreateSpec {
	this := VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKmipServerCreateSpec{}
	return &this
}

// GetServers returns the Servers field value
func (o *VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKmipServerCreateSpec) GetServers() []VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersServer {
	if o == nil {
		var ret []VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersServer
		return ret
	}

	return o.Servers
}

// GetServersOk returns a tuple with the Servers field value
// and a boolean to check if the value has been set.
func (o *VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKmipServerCreateSpec) GetServersOk() (*[]VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersServer, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Servers, true
}

// SetServers sets field value
func (o *VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKmipServerCreateSpec) SetServers(v []VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersServer) {
	o.Servers = v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKmipServerCreateSpec) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKmipServerCreateSpec) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKmipServerCreateSpec) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKmipServerCreateSpec) SetUsername(v string) {
	o.Username = &v
}

func (o VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKmipServerCreateSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["servers"] = o.Servers
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKmipServerCreateSpec struct {
	value *VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKmipServerCreateSpec
	isSet bool
}

func (v NullableVcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKmipServerCreateSpec) Get() *VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKmipServerCreateSpec {
	return v.value
}

func (v *NullableVcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKmipServerCreateSpec) Set(val *VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKmipServerCreateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKmipServerCreateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKmipServerCreateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKmipServerCreateSpec(val *VcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKmipServerCreateSpec) *NullableVcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKmipServerCreateSpec {
	return &NullableVcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKmipServerCreateSpec{value: val, isSet: true}
}

func (v NullableVcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKmipServerCreateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterTrustedInfrastructureTrustAuthorityClustersKmsProvidersKmipServerCreateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


