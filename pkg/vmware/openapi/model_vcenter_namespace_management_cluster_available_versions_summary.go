/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// VcenterNamespaceManagementClusterAvailableVersionsSummary struct for VcenterNamespaceManagementClusterAvailableVersionsSummary
type VcenterNamespaceManagementClusterAvailableVersionsSummary struct {
	// Version of the upgrade.
	Version string `json:"version"`
	// Name of the upgrade.
	Name string `json:"name"`
	// Description of the upgrade.
	Description string `json:"description"`
	// Release date of the upgrade.
	ReleaseDate time.Time `json:"release_date"`
	// Release details of the upgrade.
	ReleaseNotes string `json:"release_notes"`
}

// NewVcenterNamespaceManagementClusterAvailableVersionsSummary instantiates a new VcenterNamespaceManagementClusterAvailableVersionsSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterNamespaceManagementClusterAvailableVersionsSummary(version string, name string, description string, releaseDate time.Time, releaseNotes string) *VcenterNamespaceManagementClusterAvailableVersionsSummary {
	this := VcenterNamespaceManagementClusterAvailableVersionsSummary{}
	this.Version = version
	this.Name = name
	this.Description = description
	this.ReleaseDate = releaseDate
	this.ReleaseNotes = releaseNotes
	return &this
}

// NewVcenterNamespaceManagementClusterAvailableVersionsSummaryWithDefaults instantiates a new VcenterNamespaceManagementClusterAvailableVersionsSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterNamespaceManagementClusterAvailableVersionsSummaryWithDefaults() *VcenterNamespaceManagementClusterAvailableVersionsSummary {
	this := VcenterNamespaceManagementClusterAvailableVersionsSummary{}
	return &this
}

// GetVersion returns the Version field value
func (o *VcenterNamespaceManagementClusterAvailableVersionsSummary) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespaceManagementClusterAvailableVersionsSummary) GetVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *VcenterNamespaceManagementClusterAvailableVersionsSummary) SetVersion(v string) {
	o.Version = v
}

// GetName returns the Name field value
func (o *VcenterNamespaceManagementClusterAvailableVersionsSummary) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespaceManagementClusterAvailableVersionsSummary) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *VcenterNamespaceManagementClusterAvailableVersionsSummary) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *VcenterNamespaceManagementClusterAvailableVersionsSummary) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespaceManagementClusterAvailableVersionsSummary) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *VcenterNamespaceManagementClusterAvailableVersionsSummary) SetDescription(v string) {
	o.Description = v
}

// GetReleaseDate returns the ReleaseDate field value
func (o *VcenterNamespaceManagementClusterAvailableVersionsSummary) GetReleaseDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ReleaseDate
}

// GetReleaseDateOk returns a tuple with the ReleaseDate field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespaceManagementClusterAvailableVersionsSummary) GetReleaseDateOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ReleaseDate, true
}

// SetReleaseDate sets field value
func (o *VcenterNamespaceManagementClusterAvailableVersionsSummary) SetReleaseDate(v time.Time) {
	o.ReleaseDate = v
}

// GetReleaseNotes returns the ReleaseNotes field value
func (o *VcenterNamespaceManagementClusterAvailableVersionsSummary) GetReleaseNotes() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReleaseNotes
}

// GetReleaseNotesOk returns a tuple with the ReleaseNotes field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespaceManagementClusterAvailableVersionsSummary) GetReleaseNotesOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ReleaseNotes, true
}

// SetReleaseNotes sets field value
func (o *VcenterNamespaceManagementClusterAvailableVersionsSummary) SetReleaseNotes(v string) {
	o.ReleaseNotes = v
}

func (o VcenterNamespaceManagementClusterAvailableVersionsSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["version"] = o.Version
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["release_date"] = o.ReleaseDate
	}
	if true {
		toSerialize["release_notes"] = o.ReleaseNotes
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterNamespaceManagementClusterAvailableVersionsSummary struct {
	value *VcenterNamespaceManagementClusterAvailableVersionsSummary
	isSet bool
}

func (v NullableVcenterNamespaceManagementClusterAvailableVersionsSummary) Get() *VcenterNamespaceManagementClusterAvailableVersionsSummary {
	return v.value
}

func (v *NullableVcenterNamespaceManagementClusterAvailableVersionsSummary) Set(val *VcenterNamespaceManagementClusterAvailableVersionsSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterNamespaceManagementClusterAvailableVersionsSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterNamespaceManagementClusterAvailableVersionsSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterNamespaceManagementClusterAvailableVersionsSummary(val *VcenterNamespaceManagementClusterAvailableVersionsSummary) *NullableVcenterNamespaceManagementClusterAvailableVersionsSummary {
	return &NullableVcenterNamespaceManagementClusterAvailableVersionsSummary{value: val, isSet: true}
}

func (v NullableVcenterNamespaceManagementClusterAvailableVersionsSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterNamespaceManagementClusterAvailableVersionsSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


