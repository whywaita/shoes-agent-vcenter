/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterVchaClusterVmInfo struct for VcenterVchaClusterVmInfo
type VcenterVchaClusterVmInfo struct {
	Passive VcenterVchaClusterNodeVmInfo `json:"passive"`
	Witness VcenterVchaClusterNodeVmInfo `json:"witness"`
}

// NewVcenterVchaClusterVmInfo instantiates a new VcenterVchaClusterVmInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterVchaClusterVmInfo(passive VcenterVchaClusterNodeVmInfo, witness VcenterVchaClusterNodeVmInfo) *VcenterVchaClusterVmInfo {
	this := VcenterVchaClusterVmInfo{}
	this.Passive = passive
	this.Witness = witness
	return &this
}

// NewVcenterVchaClusterVmInfoWithDefaults instantiates a new VcenterVchaClusterVmInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterVchaClusterVmInfoWithDefaults() *VcenterVchaClusterVmInfo {
	this := VcenterVchaClusterVmInfo{}
	return &this
}

// GetPassive returns the Passive field value
func (o *VcenterVchaClusterVmInfo) GetPassive() VcenterVchaClusterNodeVmInfo {
	if o == nil {
		var ret VcenterVchaClusterNodeVmInfo
		return ret
	}

	return o.Passive
}

// GetPassiveOk returns a tuple with the Passive field value
// and a boolean to check if the value has been set.
func (o *VcenterVchaClusterVmInfo) GetPassiveOk() (*VcenterVchaClusterNodeVmInfo, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Passive, true
}

// SetPassive sets field value
func (o *VcenterVchaClusterVmInfo) SetPassive(v VcenterVchaClusterNodeVmInfo) {
	o.Passive = v
}

// GetWitness returns the Witness field value
func (o *VcenterVchaClusterVmInfo) GetWitness() VcenterVchaClusterNodeVmInfo {
	if o == nil {
		var ret VcenterVchaClusterNodeVmInfo
		return ret
	}

	return o.Witness
}

// GetWitnessOk returns a tuple with the Witness field value
// and a boolean to check if the value has been set.
func (o *VcenterVchaClusterVmInfo) GetWitnessOk() (*VcenterVchaClusterNodeVmInfo, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Witness, true
}

// SetWitness sets field value
func (o *VcenterVchaClusterVmInfo) SetWitness(v VcenterVchaClusterNodeVmInfo) {
	o.Witness = v
}

func (o VcenterVchaClusterVmInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["passive"] = o.Passive
	}
	if true {
		toSerialize["witness"] = o.Witness
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterVchaClusterVmInfo struct {
	value *VcenterVchaClusterVmInfo
	isSet bool
}

func (v NullableVcenterVchaClusterVmInfo) Get() *VcenterVchaClusterVmInfo {
	return v.value
}

func (v *NullableVcenterVchaClusterVmInfo) Set(val *VcenterVchaClusterVmInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterVchaClusterVmInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterVchaClusterVmInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterVchaClusterVmInfo(val *VcenterVchaClusterVmInfo) *NullableVcenterVchaClusterVmInfo {
	return &NullableVcenterVchaClusterVmInfo{value: val, isSet: true}
}

func (v NullableVcenterVchaClusterVmInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterVchaClusterVmInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


