/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterNamespacesNamespaceSelfServiceInfo struct for VcenterNamespacesNamespaceSelfServiceInfo
type VcenterNamespacesNamespaceSelfServiceInfo struct {
	// Identifier for the cluster to which namespace service is associated. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: ClusterComputeResource. When operations return a value of this structure as a result, the field will be an identifier for the resource type: ClusterComputeResource.
	Cluster string `json:"cluster"`
	Capability VcenterNamespacesNamespaceSelfServiceCapability `json:"capability"`
	Status VcenterNamespacesNamespaceSelfServiceStatus `json:"status"`
	// Current set of messages associated with the object.
	Messages []VcenterNamespacesInstancesMessage `json:"messages"`
}

// NewVcenterNamespacesNamespaceSelfServiceInfo instantiates a new VcenterNamespacesNamespaceSelfServiceInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterNamespacesNamespaceSelfServiceInfo(cluster string, capability VcenterNamespacesNamespaceSelfServiceCapability, status VcenterNamespacesNamespaceSelfServiceStatus, messages []VcenterNamespacesInstancesMessage) *VcenterNamespacesNamespaceSelfServiceInfo {
	this := VcenterNamespacesNamespaceSelfServiceInfo{}
	this.Cluster = cluster
	this.Capability = capability
	this.Status = status
	this.Messages = messages
	return &this
}

// NewVcenterNamespacesNamespaceSelfServiceInfoWithDefaults instantiates a new VcenterNamespacesNamespaceSelfServiceInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterNamespacesNamespaceSelfServiceInfoWithDefaults() *VcenterNamespacesNamespaceSelfServiceInfo {
	this := VcenterNamespacesNamespaceSelfServiceInfo{}
	return &this
}

// GetCluster returns the Cluster field value
func (o *VcenterNamespacesNamespaceSelfServiceInfo) GetCluster() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespacesNamespaceSelfServiceInfo) GetClusterOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Cluster, true
}

// SetCluster sets field value
func (o *VcenterNamespacesNamespaceSelfServiceInfo) SetCluster(v string) {
	o.Cluster = v
}

// GetCapability returns the Capability field value
func (o *VcenterNamespacesNamespaceSelfServiceInfo) GetCapability() VcenterNamespacesNamespaceSelfServiceCapability {
	if o == nil {
		var ret VcenterNamespacesNamespaceSelfServiceCapability
		return ret
	}

	return o.Capability
}

// GetCapabilityOk returns a tuple with the Capability field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespacesNamespaceSelfServiceInfo) GetCapabilityOk() (*VcenterNamespacesNamespaceSelfServiceCapability, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Capability, true
}

// SetCapability sets field value
func (o *VcenterNamespacesNamespaceSelfServiceInfo) SetCapability(v VcenterNamespacesNamespaceSelfServiceCapability) {
	o.Capability = v
}

// GetStatus returns the Status field value
func (o *VcenterNamespacesNamespaceSelfServiceInfo) GetStatus() VcenterNamespacesNamespaceSelfServiceStatus {
	if o == nil {
		var ret VcenterNamespacesNamespaceSelfServiceStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespacesNamespaceSelfServiceInfo) GetStatusOk() (*VcenterNamespacesNamespaceSelfServiceStatus, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *VcenterNamespacesNamespaceSelfServiceInfo) SetStatus(v VcenterNamespacesNamespaceSelfServiceStatus) {
	o.Status = v
}

// GetMessages returns the Messages field value
func (o *VcenterNamespacesNamespaceSelfServiceInfo) GetMessages() []VcenterNamespacesInstancesMessage {
	if o == nil {
		var ret []VcenterNamespacesInstancesMessage
		return ret
	}

	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespacesNamespaceSelfServiceInfo) GetMessagesOk() (*[]VcenterNamespacesInstancesMessage, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Messages, true
}

// SetMessages sets field value
func (o *VcenterNamespacesNamespaceSelfServiceInfo) SetMessages(v []VcenterNamespacesInstancesMessage) {
	o.Messages = v
}

func (o VcenterNamespacesNamespaceSelfServiceInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["cluster"] = o.Cluster
	}
	if true {
		toSerialize["capability"] = o.Capability
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["messages"] = o.Messages
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterNamespacesNamespaceSelfServiceInfo struct {
	value *VcenterNamespacesNamespaceSelfServiceInfo
	isSet bool
}

func (v NullableVcenterNamespacesNamespaceSelfServiceInfo) Get() *VcenterNamespacesNamespaceSelfServiceInfo {
	return v.value
}

func (v *NullableVcenterNamespacesNamespaceSelfServiceInfo) Set(val *VcenterNamespacesNamespaceSelfServiceInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterNamespacesNamespaceSelfServiceInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterNamespacesNamespaceSelfServiceInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterNamespacesNamespaceSelfServiceInfo(val *VcenterNamespacesNamespaceSelfServiceInfo) *NullableVcenterNamespacesNamespaceSelfServiceInfo {
	return &NullableVcenterNamespacesNamespaceSelfServiceInfo{value: val, isSet: true}
}

func (v NullableVcenterNamespacesNamespaceSelfServiceInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterNamespacesNamespaceSelfServiceInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


