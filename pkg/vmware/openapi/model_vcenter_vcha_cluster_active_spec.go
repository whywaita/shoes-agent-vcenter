/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterVchaClusterActiveSpec struct for VcenterVchaClusterActiveSpec
type VcenterVchaClusterActiveSpec struct {
	HaNetworkType *VcenterVchaNetworkType `json:"ha_network_type,omitempty"`
	// The identifier of the Network object used for the HA network.  If the Cluster.ActiveSpec.ha-network field is set, then the Cluster.ActiveSpec.ha-network-type field must be set.  If the Cluster.ActiveSpec.ha-network field is unset, then the Cluster.ActiveSpec.ha-network-type field is ignored. If unset and the Cluster.ActiveSpec.ha-network-type field is unset, then the second NIC is assumed to be already configured.  If unset and the Cluster.ActiveSpec.ha-network field is set, then an error is reported. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: Network:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: Network:VCenter.
	HaNetwork *string `json:"ha_network,omitempty"`
	HaIp VcenterVchaIpSpec `json:"ha_ip"`
}

// NewVcenterVchaClusterActiveSpec instantiates a new VcenterVchaClusterActiveSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterVchaClusterActiveSpec(haIp VcenterVchaIpSpec) *VcenterVchaClusterActiveSpec {
	this := VcenterVchaClusterActiveSpec{}
	this.HaIp = haIp
	return &this
}

// NewVcenterVchaClusterActiveSpecWithDefaults instantiates a new VcenterVchaClusterActiveSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterVchaClusterActiveSpecWithDefaults() *VcenterVchaClusterActiveSpec {
	this := VcenterVchaClusterActiveSpec{}
	return &this
}

// GetHaNetworkType returns the HaNetworkType field value if set, zero value otherwise.
func (o *VcenterVchaClusterActiveSpec) GetHaNetworkType() VcenterVchaNetworkType {
	if o == nil || o.HaNetworkType == nil {
		var ret VcenterVchaNetworkType
		return ret
	}
	return *o.HaNetworkType
}

// GetHaNetworkTypeOk returns a tuple with the HaNetworkType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVchaClusterActiveSpec) GetHaNetworkTypeOk() (*VcenterVchaNetworkType, bool) {
	if o == nil || o.HaNetworkType == nil {
		return nil, false
	}
	return o.HaNetworkType, true
}

// HasHaNetworkType returns a boolean if a field has been set.
func (o *VcenterVchaClusterActiveSpec) HasHaNetworkType() bool {
	if o != nil && o.HaNetworkType != nil {
		return true
	}

	return false
}

// SetHaNetworkType gets a reference to the given VcenterVchaNetworkType and assigns it to the HaNetworkType field.
func (o *VcenterVchaClusterActiveSpec) SetHaNetworkType(v VcenterVchaNetworkType) {
	o.HaNetworkType = &v
}

// GetHaNetwork returns the HaNetwork field value if set, zero value otherwise.
func (o *VcenterVchaClusterActiveSpec) GetHaNetwork() string {
	if o == nil || o.HaNetwork == nil {
		var ret string
		return ret
	}
	return *o.HaNetwork
}

// GetHaNetworkOk returns a tuple with the HaNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVchaClusterActiveSpec) GetHaNetworkOk() (*string, bool) {
	if o == nil || o.HaNetwork == nil {
		return nil, false
	}
	return o.HaNetwork, true
}

// HasHaNetwork returns a boolean if a field has been set.
func (o *VcenterVchaClusterActiveSpec) HasHaNetwork() bool {
	if o != nil && o.HaNetwork != nil {
		return true
	}

	return false
}

// SetHaNetwork gets a reference to the given string and assigns it to the HaNetwork field.
func (o *VcenterVchaClusterActiveSpec) SetHaNetwork(v string) {
	o.HaNetwork = &v
}

// GetHaIp returns the HaIp field value
func (o *VcenterVchaClusterActiveSpec) GetHaIp() VcenterVchaIpSpec {
	if o == nil {
		var ret VcenterVchaIpSpec
		return ret
	}

	return o.HaIp
}

// GetHaIpOk returns a tuple with the HaIp field value
// and a boolean to check if the value has been set.
func (o *VcenterVchaClusterActiveSpec) GetHaIpOk() (*VcenterVchaIpSpec, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.HaIp, true
}

// SetHaIp sets field value
func (o *VcenterVchaClusterActiveSpec) SetHaIp(v VcenterVchaIpSpec) {
	o.HaIp = v
}

func (o VcenterVchaClusterActiveSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.HaNetworkType != nil {
		toSerialize["ha_network_type"] = o.HaNetworkType
	}
	if o.HaNetwork != nil {
		toSerialize["ha_network"] = o.HaNetwork
	}
	if true {
		toSerialize["ha_ip"] = o.HaIp
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterVchaClusterActiveSpec struct {
	value *VcenterVchaClusterActiveSpec
	isSet bool
}

func (v NullableVcenterVchaClusterActiveSpec) Get() *VcenterVchaClusterActiveSpec {
	return v.value
}

func (v *NullableVcenterVchaClusterActiveSpec) Set(val *VcenterVchaClusterActiveSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterVchaClusterActiveSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterVchaClusterActiveSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterVchaClusterActiveSpec(val *VcenterVchaClusterActiveSpec) *NullableVcenterVchaClusterActiveSpec {
	return &NullableVcenterVchaClusterActiveSpec{value: val, isSet: true}
}

func (v NullableVcenterVchaClusterActiveSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterVchaClusterActiveSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


