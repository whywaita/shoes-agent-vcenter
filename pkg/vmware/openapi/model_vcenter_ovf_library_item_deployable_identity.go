/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterOvfLibraryItemDeployableIdentity struct for VcenterOvfLibraryItemDeployableIdentity
type VcenterOvfLibraryItemDeployableIdentity struct {
	// Type of the deployable resource.
	Type string `json:"type"`
	// Identifier of the deployable resource.
	Id string `json:"id"`
}

// NewVcenterOvfLibraryItemDeployableIdentity instantiates a new VcenterOvfLibraryItemDeployableIdentity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterOvfLibraryItemDeployableIdentity(type_ string, id string) *VcenterOvfLibraryItemDeployableIdentity {
	this := VcenterOvfLibraryItemDeployableIdentity{}
	this.Type = type_
	this.Id = id
	return &this
}

// NewVcenterOvfLibraryItemDeployableIdentityWithDefaults instantiates a new VcenterOvfLibraryItemDeployableIdentity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterOvfLibraryItemDeployableIdentityWithDefaults() *VcenterOvfLibraryItemDeployableIdentity {
	this := VcenterOvfLibraryItemDeployableIdentity{}
	return &this
}

// GetType returns the Type field value
func (o *VcenterOvfLibraryItemDeployableIdentity) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *VcenterOvfLibraryItemDeployableIdentity) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *VcenterOvfLibraryItemDeployableIdentity) SetType(v string) {
	o.Type = v
}

// GetId returns the Id field value
func (o *VcenterOvfLibraryItemDeployableIdentity) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *VcenterOvfLibraryItemDeployableIdentity) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *VcenterOvfLibraryItemDeployableIdentity) SetId(v string) {
	o.Id = v
}

func (o VcenterOvfLibraryItemDeployableIdentity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterOvfLibraryItemDeployableIdentity struct {
	value *VcenterOvfLibraryItemDeployableIdentity
	isSet bool
}

func (v NullableVcenterOvfLibraryItemDeployableIdentity) Get() *VcenterOvfLibraryItemDeployableIdentity {
	return v.value
}

func (v *NullableVcenterOvfLibraryItemDeployableIdentity) Set(val *VcenterOvfLibraryItemDeployableIdentity) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterOvfLibraryItemDeployableIdentity) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterOvfLibraryItemDeployableIdentity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterOvfLibraryItemDeployableIdentity(val *VcenterOvfLibraryItemDeployableIdentity) *NullableVcenterOvfLibraryItemDeployableIdentity {
	return &NullableVcenterOvfLibraryItemDeployableIdentity{value: val, isSet: true}
}

func (v NullableVcenterOvfLibraryItemDeployableIdentity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterOvfLibraryItemDeployableIdentity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


