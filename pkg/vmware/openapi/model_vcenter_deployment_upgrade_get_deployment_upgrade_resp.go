/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterDeploymentUpgradeGetDeploymentUpgradeResp struct for VcenterDeploymentUpgradeGetDeploymentUpgradeResp
type VcenterDeploymentUpgradeGetDeploymentUpgradeResp struct {
	Value VcenterDeploymentUpgradeUpgradeSpec `json:"value"`
}

// NewVcenterDeploymentUpgradeGetDeploymentUpgradeResp instantiates a new VcenterDeploymentUpgradeGetDeploymentUpgradeResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterDeploymentUpgradeGetDeploymentUpgradeResp(value VcenterDeploymentUpgradeUpgradeSpec) *VcenterDeploymentUpgradeGetDeploymentUpgradeResp {
	this := VcenterDeploymentUpgradeGetDeploymentUpgradeResp{}
	this.Value = value
	return &this
}

// NewVcenterDeploymentUpgradeGetDeploymentUpgradeRespWithDefaults instantiates a new VcenterDeploymentUpgradeGetDeploymentUpgradeResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterDeploymentUpgradeGetDeploymentUpgradeRespWithDefaults() *VcenterDeploymentUpgradeGetDeploymentUpgradeResp {
	this := VcenterDeploymentUpgradeGetDeploymentUpgradeResp{}
	return &this
}

// GetValue returns the Value field value
func (o *VcenterDeploymentUpgradeGetDeploymentUpgradeResp) GetValue() VcenterDeploymentUpgradeUpgradeSpec {
	if o == nil {
		var ret VcenterDeploymentUpgradeUpgradeSpec
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *VcenterDeploymentUpgradeGetDeploymentUpgradeResp) GetValueOk() (*VcenterDeploymentUpgradeUpgradeSpec, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *VcenterDeploymentUpgradeGetDeploymentUpgradeResp) SetValue(v VcenterDeploymentUpgradeUpgradeSpec) {
	o.Value = v
}

func (o VcenterDeploymentUpgradeGetDeploymentUpgradeResp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterDeploymentUpgradeGetDeploymentUpgradeResp struct {
	value *VcenterDeploymentUpgradeGetDeploymentUpgradeResp
	isSet bool
}

func (v NullableVcenterDeploymentUpgradeGetDeploymentUpgradeResp) Get() *VcenterDeploymentUpgradeGetDeploymentUpgradeResp {
	return v.value
}

func (v *NullableVcenterDeploymentUpgradeGetDeploymentUpgradeResp) Set(val *VcenterDeploymentUpgradeGetDeploymentUpgradeResp) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterDeploymentUpgradeGetDeploymentUpgradeResp) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterDeploymentUpgradeGetDeploymentUpgradeResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterDeploymentUpgradeGetDeploymentUpgradeResp(val *VcenterDeploymentUpgradeGetDeploymentUpgradeResp) *NullableVcenterDeploymentUpgradeGetDeploymentUpgradeResp {
	return &NullableVcenterDeploymentUpgradeGetDeploymentUpgradeResp{value: val, isSet: true}
}

func (v NullableVcenterDeploymentUpgradeGetDeploymentUpgradeResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterDeploymentUpgradeGetDeploymentUpgradeResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


