/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterVmHardwareAdapterScsiSummary struct for VcenterVmHardwareAdapterScsiSummary
type VcenterVmHardwareAdapterScsiSummary struct {
	// Identifier of the virtual SCSI adapter. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.vm.hardware.ScsiAdapter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.vm.hardware.ScsiAdapter.
	Adapter string `json:"adapter"`
}

// NewVcenterVmHardwareAdapterScsiSummary instantiates a new VcenterVmHardwareAdapterScsiSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterVmHardwareAdapterScsiSummary(adapter string) *VcenterVmHardwareAdapterScsiSummary {
	this := VcenterVmHardwareAdapterScsiSummary{}
	this.Adapter = adapter
	return &this
}

// NewVcenterVmHardwareAdapterScsiSummaryWithDefaults instantiates a new VcenterVmHardwareAdapterScsiSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterVmHardwareAdapterScsiSummaryWithDefaults() *VcenterVmHardwareAdapterScsiSummary {
	this := VcenterVmHardwareAdapterScsiSummary{}
	return &this
}

// GetAdapter returns the Adapter field value
func (o *VcenterVmHardwareAdapterScsiSummary) GetAdapter() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Adapter
}

// GetAdapterOk returns a tuple with the Adapter field value
// and a boolean to check if the value has been set.
func (o *VcenterVmHardwareAdapterScsiSummary) GetAdapterOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Adapter, true
}

// SetAdapter sets field value
func (o *VcenterVmHardwareAdapterScsiSummary) SetAdapter(v string) {
	o.Adapter = v
}

func (o VcenterVmHardwareAdapterScsiSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["adapter"] = o.Adapter
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterVmHardwareAdapterScsiSummary struct {
	value *VcenterVmHardwareAdapterScsiSummary
	isSet bool
}

func (v NullableVcenterVmHardwareAdapterScsiSummary) Get() *VcenterVmHardwareAdapterScsiSummary {
	return v.value
}

func (v *NullableVcenterVmHardwareAdapterScsiSummary) Set(val *VcenterVmHardwareAdapterScsiSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterVmHardwareAdapterScsiSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterVmHardwareAdapterScsiSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterVmHardwareAdapterScsiSummary(val *VcenterVmHardwareAdapterScsiSummary) *NullableVcenterVmHardwareAdapterScsiSummary {
	return &NullableVcenterVmHardwareAdapterScsiSummary{value: val, isSet: true}
}

func (v NullableVcenterVmHardwareAdapterScsiSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterVmHardwareAdapterScsiSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


