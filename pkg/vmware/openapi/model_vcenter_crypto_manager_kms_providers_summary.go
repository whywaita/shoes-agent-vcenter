/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterCryptoManagerKmsProvidersSummary struct for VcenterCryptoManagerKmsProvidersSummary
type VcenterCryptoManagerKmsProvidersSummary struct {
	// Provider identifier When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.crypto_manager.kms.provider. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.crypto_manager.kms.provider.
	Provider string `json:"provider"`
	Type VcenterCryptoManagerKmsProvidersType `json:"type"`
	Health VcenterCryptoManagerKmsProvidersHealth `json:"health"`
}

// NewVcenterCryptoManagerKmsProvidersSummary instantiates a new VcenterCryptoManagerKmsProvidersSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterCryptoManagerKmsProvidersSummary(provider string, type_ VcenterCryptoManagerKmsProvidersType, health VcenterCryptoManagerKmsProvidersHealth) *VcenterCryptoManagerKmsProvidersSummary {
	this := VcenterCryptoManagerKmsProvidersSummary{}
	this.Provider = provider
	this.Type = type_
	this.Health = health
	return &this
}

// NewVcenterCryptoManagerKmsProvidersSummaryWithDefaults instantiates a new VcenterCryptoManagerKmsProvidersSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterCryptoManagerKmsProvidersSummaryWithDefaults() *VcenterCryptoManagerKmsProvidersSummary {
	this := VcenterCryptoManagerKmsProvidersSummary{}
	return &this
}

// GetProvider returns the Provider field value
func (o *VcenterCryptoManagerKmsProvidersSummary) GetProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *VcenterCryptoManagerKmsProvidersSummary) GetProviderOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *VcenterCryptoManagerKmsProvidersSummary) SetProvider(v string) {
	o.Provider = v
}

// GetType returns the Type field value
func (o *VcenterCryptoManagerKmsProvidersSummary) GetType() VcenterCryptoManagerKmsProvidersType {
	if o == nil {
		var ret VcenterCryptoManagerKmsProvidersType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *VcenterCryptoManagerKmsProvidersSummary) GetTypeOk() (*VcenterCryptoManagerKmsProvidersType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *VcenterCryptoManagerKmsProvidersSummary) SetType(v VcenterCryptoManagerKmsProvidersType) {
	o.Type = v
}

// GetHealth returns the Health field value
func (o *VcenterCryptoManagerKmsProvidersSummary) GetHealth() VcenterCryptoManagerKmsProvidersHealth {
	if o == nil {
		var ret VcenterCryptoManagerKmsProvidersHealth
		return ret
	}

	return o.Health
}

// GetHealthOk returns a tuple with the Health field value
// and a boolean to check if the value has been set.
func (o *VcenterCryptoManagerKmsProvidersSummary) GetHealthOk() (*VcenterCryptoManagerKmsProvidersHealth, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Health, true
}

// SetHealth sets field value
func (o *VcenterCryptoManagerKmsProvidersSummary) SetHealth(v VcenterCryptoManagerKmsProvidersHealth) {
	o.Health = v
}

func (o VcenterCryptoManagerKmsProvidersSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["provider"] = o.Provider
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["health"] = o.Health
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterCryptoManagerKmsProvidersSummary struct {
	value *VcenterCryptoManagerKmsProvidersSummary
	isSet bool
}

func (v NullableVcenterCryptoManagerKmsProvidersSummary) Get() *VcenterCryptoManagerKmsProvidersSummary {
	return v.value
}

func (v *NullableVcenterCryptoManagerKmsProvidersSummary) Set(val *VcenterCryptoManagerKmsProvidersSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterCryptoManagerKmsProvidersSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterCryptoManagerKmsProvidersSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterCryptoManagerKmsProvidersSummary(val *VcenterCryptoManagerKmsProvidersSummary) *NullableVcenterCryptoManagerKmsProvidersSummary {
	return &NullableVcenterCryptoManagerKmsProvidersSummary{value: val, isSet: true}
}

func (v NullableVcenterCryptoManagerKmsProvidersSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterCryptoManagerKmsProvidersSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


