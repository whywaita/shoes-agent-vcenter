/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterGuestWindowsNetworkAdapterSettings struct for VcenterGuestWindowsNetworkAdapterSettings
type VcenterGuestWindowsNetworkAdapterSettings struct {
	// A list of server IP addresses to use for DNS lookup in a Windows guest operating system.   These servers should be specified in the order of preference. If this list is not empty, and if a DHCP IP address is used, then these settings override the DHCP settings.  If unset, no DNS servers are set.
	DnsServers *[]string `json:"dns_servers,omitempty"`
	// A DNS domain suffix such as vmware.com. If unset, no DNS domain is set.
	DnsDomain *string `json:"dns_domain,omitempty"`
	// List of WINS Servers to set for the Windows guest operating system. A Maximum of two IP addresses can be specified in this list. The first IP address will be set as the primary WINS server. The second IP address will be set as the secondary WINS server. If unset, no WINS Servers are set.
	WinsServers *[]string `json:"wins_servers,omitempty"`
	NetBIOSMode *VcenterGuestWindowsNetworkAdapterSettingsNetBIOSMode `json:"net_BIOS_mode,omitempty"`
}

// NewVcenterGuestWindowsNetworkAdapterSettings instantiates a new VcenterGuestWindowsNetworkAdapterSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterGuestWindowsNetworkAdapterSettings() *VcenterGuestWindowsNetworkAdapterSettings {
	this := VcenterGuestWindowsNetworkAdapterSettings{}
	return &this
}

// NewVcenterGuestWindowsNetworkAdapterSettingsWithDefaults instantiates a new VcenterGuestWindowsNetworkAdapterSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterGuestWindowsNetworkAdapterSettingsWithDefaults() *VcenterGuestWindowsNetworkAdapterSettings {
	this := VcenterGuestWindowsNetworkAdapterSettings{}
	return &this
}

// GetDnsServers returns the DnsServers field value if set, zero value otherwise.
func (o *VcenterGuestWindowsNetworkAdapterSettings) GetDnsServers() []string {
	if o == nil || o.DnsServers == nil {
		var ret []string
		return ret
	}
	return *o.DnsServers
}

// GetDnsServersOk returns a tuple with the DnsServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterGuestWindowsNetworkAdapterSettings) GetDnsServersOk() (*[]string, bool) {
	if o == nil || o.DnsServers == nil {
		return nil, false
	}
	return o.DnsServers, true
}

// HasDnsServers returns a boolean if a field has been set.
func (o *VcenterGuestWindowsNetworkAdapterSettings) HasDnsServers() bool {
	if o != nil && o.DnsServers != nil {
		return true
	}

	return false
}

// SetDnsServers gets a reference to the given []string and assigns it to the DnsServers field.
func (o *VcenterGuestWindowsNetworkAdapterSettings) SetDnsServers(v []string) {
	o.DnsServers = &v
}

// GetDnsDomain returns the DnsDomain field value if set, zero value otherwise.
func (o *VcenterGuestWindowsNetworkAdapterSettings) GetDnsDomain() string {
	if o == nil || o.DnsDomain == nil {
		var ret string
		return ret
	}
	return *o.DnsDomain
}

// GetDnsDomainOk returns a tuple with the DnsDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterGuestWindowsNetworkAdapterSettings) GetDnsDomainOk() (*string, bool) {
	if o == nil || o.DnsDomain == nil {
		return nil, false
	}
	return o.DnsDomain, true
}

// HasDnsDomain returns a boolean if a field has been set.
func (o *VcenterGuestWindowsNetworkAdapterSettings) HasDnsDomain() bool {
	if o != nil && o.DnsDomain != nil {
		return true
	}

	return false
}

// SetDnsDomain gets a reference to the given string and assigns it to the DnsDomain field.
func (o *VcenterGuestWindowsNetworkAdapterSettings) SetDnsDomain(v string) {
	o.DnsDomain = &v
}

// GetWinsServers returns the WinsServers field value if set, zero value otherwise.
func (o *VcenterGuestWindowsNetworkAdapterSettings) GetWinsServers() []string {
	if o == nil || o.WinsServers == nil {
		var ret []string
		return ret
	}
	return *o.WinsServers
}

// GetWinsServersOk returns a tuple with the WinsServers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterGuestWindowsNetworkAdapterSettings) GetWinsServersOk() (*[]string, bool) {
	if o == nil || o.WinsServers == nil {
		return nil, false
	}
	return o.WinsServers, true
}

// HasWinsServers returns a boolean if a field has been set.
func (o *VcenterGuestWindowsNetworkAdapterSettings) HasWinsServers() bool {
	if o != nil && o.WinsServers != nil {
		return true
	}

	return false
}

// SetWinsServers gets a reference to the given []string and assigns it to the WinsServers field.
func (o *VcenterGuestWindowsNetworkAdapterSettings) SetWinsServers(v []string) {
	o.WinsServers = &v
}

// GetNetBIOSMode returns the NetBIOSMode field value if set, zero value otherwise.
func (o *VcenterGuestWindowsNetworkAdapterSettings) GetNetBIOSMode() VcenterGuestWindowsNetworkAdapterSettingsNetBIOSMode {
	if o == nil || o.NetBIOSMode == nil {
		var ret VcenterGuestWindowsNetworkAdapterSettingsNetBIOSMode
		return ret
	}
	return *o.NetBIOSMode
}

// GetNetBIOSModeOk returns a tuple with the NetBIOSMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterGuestWindowsNetworkAdapterSettings) GetNetBIOSModeOk() (*VcenterGuestWindowsNetworkAdapterSettingsNetBIOSMode, bool) {
	if o == nil || o.NetBIOSMode == nil {
		return nil, false
	}
	return o.NetBIOSMode, true
}

// HasNetBIOSMode returns a boolean if a field has been set.
func (o *VcenterGuestWindowsNetworkAdapterSettings) HasNetBIOSMode() bool {
	if o != nil && o.NetBIOSMode != nil {
		return true
	}

	return false
}

// SetNetBIOSMode gets a reference to the given VcenterGuestWindowsNetworkAdapterSettingsNetBIOSMode and assigns it to the NetBIOSMode field.
func (o *VcenterGuestWindowsNetworkAdapterSettings) SetNetBIOSMode(v VcenterGuestWindowsNetworkAdapterSettingsNetBIOSMode) {
	o.NetBIOSMode = &v
}

func (o VcenterGuestWindowsNetworkAdapterSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DnsServers != nil {
		toSerialize["dns_servers"] = o.DnsServers
	}
	if o.DnsDomain != nil {
		toSerialize["dns_domain"] = o.DnsDomain
	}
	if o.WinsServers != nil {
		toSerialize["wins_servers"] = o.WinsServers
	}
	if o.NetBIOSMode != nil {
		toSerialize["net_BIOS_mode"] = o.NetBIOSMode
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterGuestWindowsNetworkAdapterSettings struct {
	value *VcenterGuestWindowsNetworkAdapterSettings
	isSet bool
}

func (v NullableVcenterGuestWindowsNetworkAdapterSettings) Get() *VcenterGuestWindowsNetworkAdapterSettings {
	return v.value
}

func (v *NullableVcenterGuestWindowsNetworkAdapterSettings) Set(val *VcenterGuestWindowsNetworkAdapterSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterGuestWindowsNetworkAdapterSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterGuestWindowsNetworkAdapterSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterGuestWindowsNetworkAdapterSettings(val *VcenterGuestWindowsNetworkAdapterSettings) *NullableVcenterGuestWindowsNetworkAdapterSettings {
	return &NullableVcenterGuestWindowsNetworkAdapterSettings{value: val, isSet: true}
}

func (v NullableVcenterGuestWindowsNetworkAdapterSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterGuestWindowsNetworkAdapterSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


