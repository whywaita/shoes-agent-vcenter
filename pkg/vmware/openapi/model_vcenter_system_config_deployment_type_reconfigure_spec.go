/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterSystemConfigDeploymentTypeReconfigureSpec struct for VcenterSystemConfigDeploymentTypeReconfigureSpec
type VcenterSystemConfigDeploymentTypeReconfigureSpec struct {
	Type VcenterDeploymentApplianceType `json:"type"`
	RemotePsc *VcenterDeploymentRemotePscSpec `json:"remote_psc,omitempty"`
}

// NewVcenterSystemConfigDeploymentTypeReconfigureSpec instantiates a new VcenterSystemConfigDeploymentTypeReconfigureSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterSystemConfigDeploymentTypeReconfigureSpec(type_ VcenterDeploymentApplianceType) *VcenterSystemConfigDeploymentTypeReconfigureSpec {
	this := VcenterSystemConfigDeploymentTypeReconfigureSpec{}
	this.Type = type_
	return &this
}

// NewVcenterSystemConfigDeploymentTypeReconfigureSpecWithDefaults instantiates a new VcenterSystemConfigDeploymentTypeReconfigureSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterSystemConfigDeploymentTypeReconfigureSpecWithDefaults() *VcenterSystemConfigDeploymentTypeReconfigureSpec {
	this := VcenterSystemConfigDeploymentTypeReconfigureSpec{}
	return &this
}

// GetType returns the Type field value
func (o *VcenterSystemConfigDeploymentTypeReconfigureSpec) GetType() VcenterDeploymentApplianceType {
	if o == nil {
		var ret VcenterDeploymentApplianceType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *VcenterSystemConfigDeploymentTypeReconfigureSpec) GetTypeOk() (*VcenterDeploymentApplianceType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *VcenterSystemConfigDeploymentTypeReconfigureSpec) SetType(v VcenterDeploymentApplianceType) {
	o.Type = v
}

// GetRemotePsc returns the RemotePsc field value if set, zero value otherwise.
func (o *VcenterSystemConfigDeploymentTypeReconfigureSpec) GetRemotePsc() VcenterDeploymentRemotePscSpec {
	if o == nil || o.RemotePsc == nil {
		var ret VcenterDeploymentRemotePscSpec
		return ret
	}
	return *o.RemotePsc
}

// GetRemotePscOk returns a tuple with the RemotePsc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterSystemConfigDeploymentTypeReconfigureSpec) GetRemotePscOk() (*VcenterDeploymentRemotePscSpec, bool) {
	if o == nil || o.RemotePsc == nil {
		return nil, false
	}
	return o.RemotePsc, true
}

// HasRemotePsc returns a boolean if a field has been set.
func (o *VcenterSystemConfigDeploymentTypeReconfigureSpec) HasRemotePsc() bool {
	if o != nil && o.RemotePsc != nil {
		return true
	}

	return false
}

// SetRemotePsc gets a reference to the given VcenterDeploymentRemotePscSpec and assigns it to the RemotePsc field.
func (o *VcenterSystemConfigDeploymentTypeReconfigureSpec) SetRemotePsc(v VcenterDeploymentRemotePscSpec) {
	o.RemotePsc = &v
}

func (o VcenterSystemConfigDeploymentTypeReconfigureSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if o.RemotePsc != nil {
		toSerialize["remote_psc"] = o.RemotePsc
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterSystemConfigDeploymentTypeReconfigureSpec struct {
	value *VcenterSystemConfigDeploymentTypeReconfigureSpec
	isSet bool
}

func (v NullableVcenterSystemConfigDeploymentTypeReconfigureSpec) Get() *VcenterSystemConfigDeploymentTypeReconfigureSpec {
	return v.value
}

func (v *NullableVcenterSystemConfigDeploymentTypeReconfigureSpec) Set(val *VcenterSystemConfigDeploymentTypeReconfigureSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterSystemConfigDeploymentTypeReconfigureSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterSystemConfigDeploymentTypeReconfigureSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterSystemConfigDeploymentTypeReconfigureSpec(val *VcenterSystemConfigDeploymentTypeReconfigureSpec) *NullableVcenterSystemConfigDeploymentTypeReconfigureSpec {
	return &NullableVcenterSystemConfigDeploymentTypeReconfigureSpec{value: val, isSet: true}
}

func (v NullableVcenterSystemConfigDeploymentTypeReconfigureSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterSystemConfigDeploymentTypeReconfigureSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


