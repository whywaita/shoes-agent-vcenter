/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterVmTemplateLibraryItemsCheckOutsCheckInVmTemplateLibraryItemsCheckOuts struct for VcenterVmTemplateLibraryItemsCheckOutsCheckInVmTemplateLibraryItemsCheckOuts
type VcenterVmTemplateLibraryItemsCheckOutsCheckInVmTemplateLibraryItemsCheckOuts struct {
	Spec *VcenterVmTemplateLibraryItemsCheckOutsCheckInSpec `json:"spec,omitempty"`
}

// NewVcenterVmTemplateLibraryItemsCheckOutsCheckInVmTemplateLibraryItemsCheckOuts instantiates a new VcenterVmTemplateLibraryItemsCheckOutsCheckInVmTemplateLibraryItemsCheckOuts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterVmTemplateLibraryItemsCheckOutsCheckInVmTemplateLibraryItemsCheckOuts() *VcenterVmTemplateLibraryItemsCheckOutsCheckInVmTemplateLibraryItemsCheckOuts {
	this := VcenterVmTemplateLibraryItemsCheckOutsCheckInVmTemplateLibraryItemsCheckOuts{}
	return &this
}

// NewVcenterVmTemplateLibraryItemsCheckOutsCheckInVmTemplateLibraryItemsCheckOutsWithDefaults instantiates a new VcenterVmTemplateLibraryItemsCheckOutsCheckInVmTemplateLibraryItemsCheckOuts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterVmTemplateLibraryItemsCheckOutsCheckInVmTemplateLibraryItemsCheckOutsWithDefaults() *VcenterVmTemplateLibraryItemsCheckOutsCheckInVmTemplateLibraryItemsCheckOuts {
	this := VcenterVmTemplateLibraryItemsCheckOutsCheckInVmTemplateLibraryItemsCheckOuts{}
	return &this
}

// GetSpec returns the Spec field value if set, zero value otherwise.
func (o *VcenterVmTemplateLibraryItemsCheckOutsCheckInVmTemplateLibraryItemsCheckOuts) GetSpec() VcenterVmTemplateLibraryItemsCheckOutsCheckInSpec {
	if o == nil || o.Spec == nil {
		var ret VcenterVmTemplateLibraryItemsCheckOutsCheckInSpec
		return ret
	}
	return *o.Spec
}

// GetSpecOk returns a tuple with the Spec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmTemplateLibraryItemsCheckOutsCheckInVmTemplateLibraryItemsCheckOuts) GetSpecOk() (*VcenterVmTemplateLibraryItemsCheckOutsCheckInSpec, bool) {
	if o == nil || o.Spec == nil {
		return nil, false
	}
	return o.Spec, true
}

// HasSpec returns a boolean if a field has been set.
func (o *VcenterVmTemplateLibraryItemsCheckOutsCheckInVmTemplateLibraryItemsCheckOuts) HasSpec() bool {
	if o != nil && o.Spec != nil {
		return true
	}

	return false
}

// SetSpec gets a reference to the given VcenterVmTemplateLibraryItemsCheckOutsCheckInSpec and assigns it to the Spec field.
func (o *VcenterVmTemplateLibraryItemsCheckOutsCheckInVmTemplateLibraryItemsCheckOuts) SetSpec(v VcenterVmTemplateLibraryItemsCheckOutsCheckInSpec) {
	o.Spec = &v
}

func (o VcenterVmTemplateLibraryItemsCheckOutsCheckInVmTemplateLibraryItemsCheckOuts) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Spec != nil {
		toSerialize["spec"] = o.Spec
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterVmTemplateLibraryItemsCheckOutsCheckInVmTemplateLibraryItemsCheckOuts struct {
	value *VcenterVmTemplateLibraryItemsCheckOutsCheckInVmTemplateLibraryItemsCheckOuts
	isSet bool
}

func (v NullableVcenterVmTemplateLibraryItemsCheckOutsCheckInVmTemplateLibraryItemsCheckOuts) Get() *VcenterVmTemplateLibraryItemsCheckOutsCheckInVmTemplateLibraryItemsCheckOuts {
	return v.value
}

func (v *NullableVcenterVmTemplateLibraryItemsCheckOutsCheckInVmTemplateLibraryItemsCheckOuts) Set(val *VcenterVmTemplateLibraryItemsCheckOutsCheckInVmTemplateLibraryItemsCheckOuts) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterVmTemplateLibraryItemsCheckOutsCheckInVmTemplateLibraryItemsCheckOuts) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterVmTemplateLibraryItemsCheckOutsCheckInVmTemplateLibraryItemsCheckOuts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterVmTemplateLibraryItemsCheckOutsCheckInVmTemplateLibraryItemsCheckOuts(val *VcenterVmTemplateLibraryItemsCheckOutsCheckInVmTemplateLibraryItemsCheckOuts) *NullableVcenterVmTemplateLibraryItemsCheckOutsCheckInVmTemplateLibraryItemsCheckOuts {
	return &NullableVcenterVmTemplateLibraryItemsCheckOutsCheckInVmTemplateLibraryItemsCheckOuts{value: val, isSet: true}
}

func (v NullableVcenterVmTemplateLibraryItemsCheckOutsCheckInVmTemplateLibraryItemsCheckOuts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterVmTemplateLibraryItemsCheckOutsCheckInVmTemplateLibraryItemsCheckOuts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


