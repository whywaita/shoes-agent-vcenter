/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterLcmDiscoveryProduct struct for VcenterLcmDiscoveryProduct
type VcenterLcmDiscoveryProduct struct {
	// Identifies a product and a version uniquely.  The identifier consists of product internal name and version.  When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: PRODUCT. When operations return a value of this structure as a result, the field will be an identifier for the resource type: PRODUCT.
	InstalledProduct string `json:"installed_product"`
	// A public official product name.
	Name string `json:"name"`
	// Current product version.
	Version string `json:"version"`
	// Future version of the product after upgrade. Product.target-version may not be applicable.
	TargetVersion *string `json:"target_version,omitempty"`
	// The list of hostname/IPs of the instances of the VMware products deployed in the environment. This field would be empty for manually added products.
	Deployments *[]string `json:"deployments,omitempty"`
	// Indicates if the product is auto-detected by the system or manually added. If it is set to true it means it is auto-detected.
	Auto bool `json:"auto"`
}

// NewVcenterLcmDiscoveryProduct instantiates a new VcenterLcmDiscoveryProduct object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterLcmDiscoveryProduct(installedProduct string, name string, version string, auto bool) *VcenterLcmDiscoveryProduct {
	this := VcenterLcmDiscoveryProduct{}
	this.InstalledProduct = installedProduct
	this.Name = name
	this.Version = version
	this.Auto = auto
	return &this
}

// NewVcenterLcmDiscoveryProductWithDefaults instantiates a new VcenterLcmDiscoveryProduct object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterLcmDiscoveryProductWithDefaults() *VcenterLcmDiscoveryProduct {
	this := VcenterLcmDiscoveryProduct{}
	return &this
}

// GetInstalledProduct returns the InstalledProduct field value
func (o *VcenterLcmDiscoveryProduct) GetInstalledProduct() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstalledProduct
}

// GetInstalledProductOk returns a tuple with the InstalledProduct field value
// and a boolean to check if the value has been set.
func (o *VcenterLcmDiscoveryProduct) GetInstalledProductOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.InstalledProduct, true
}

// SetInstalledProduct sets field value
func (o *VcenterLcmDiscoveryProduct) SetInstalledProduct(v string) {
	o.InstalledProduct = v
}

// GetName returns the Name field value
func (o *VcenterLcmDiscoveryProduct) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *VcenterLcmDiscoveryProduct) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *VcenterLcmDiscoveryProduct) SetName(v string) {
	o.Name = v
}

// GetVersion returns the Version field value
func (o *VcenterLcmDiscoveryProduct) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *VcenterLcmDiscoveryProduct) GetVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *VcenterLcmDiscoveryProduct) SetVersion(v string) {
	o.Version = v
}

// GetTargetVersion returns the TargetVersion field value if set, zero value otherwise.
func (o *VcenterLcmDiscoveryProduct) GetTargetVersion() string {
	if o == nil || o.TargetVersion == nil {
		var ret string
		return ret
	}
	return *o.TargetVersion
}

// GetTargetVersionOk returns a tuple with the TargetVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterLcmDiscoveryProduct) GetTargetVersionOk() (*string, bool) {
	if o == nil || o.TargetVersion == nil {
		return nil, false
	}
	return o.TargetVersion, true
}

// HasTargetVersion returns a boolean if a field has been set.
func (o *VcenterLcmDiscoveryProduct) HasTargetVersion() bool {
	if o != nil && o.TargetVersion != nil {
		return true
	}

	return false
}

// SetTargetVersion gets a reference to the given string and assigns it to the TargetVersion field.
func (o *VcenterLcmDiscoveryProduct) SetTargetVersion(v string) {
	o.TargetVersion = &v
}

// GetDeployments returns the Deployments field value if set, zero value otherwise.
func (o *VcenterLcmDiscoveryProduct) GetDeployments() []string {
	if o == nil || o.Deployments == nil {
		var ret []string
		return ret
	}
	return *o.Deployments
}

// GetDeploymentsOk returns a tuple with the Deployments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterLcmDiscoveryProduct) GetDeploymentsOk() (*[]string, bool) {
	if o == nil || o.Deployments == nil {
		return nil, false
	}
	return o.Deployments, true
}

// HasDeployments returns a boolean if a field has been set.
func (o *VcenterLcmDiscoveryProduct) HasDeployments() bool {
	if o != nil && o.Deployments != nil {
		return true
	}

	return false
}

// SetDeployments gets a reference to the given []string and assigns it to the Deployments field.
func (o *VcenterLcmDiscoveryProduct) SetDeployments(v []string) {
	o.Deployments = &v
}

// GetAuto returns the Auto field value
func (o *VcenterLcmDiscoveryProduct) GetAuto() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Auto
}

// GetAutoOk returns a tuple with the Auto field value
// and a boolean to check if the value has been set.
func (o *VcenterLcmDiscoveryProduct) GetAutoOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Auto, true
}

// SetAuto sets field value
func (o *VcenterLcmDiscoveryProduct) SetAuto(v bool) {
	o.Auto = v
}

func (o VcenterLcmDiscoveryProduct) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["installed_product"] = o.InstalledProduct
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["version"] = o.Version
	}
	if o.TargetVersion != nil {
		toSerialize["target_version"] = o.TargetVersion
	}
	if o.Deployments != nil {
		toSerialize["deployments"] = o.Deployments
	}
	if true {
		toSerialize["auto"] = o.Auto
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterLcmDiscoveryProduct struct {
	value *VcenterLcmDiscoveryProduct
	isSet bool
}

func (v NullableVcenterLcmDiscoveryProduct) Get() *VcenterLcmDiscoveryProduct {
	return v.value
}

func (v *NullableVcenterLcmDiscoveryProduct) Set(val *VcenterLcmDiscoveryProduct) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterLcmDiscoveryProduct) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterLcmDiscoveryProduct) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterLcmDiscoveryProduct(val *VcenterLcmDiscoveryProduct) *NullableVcenterLcmDiscoveryProduct {
	return &NullableVcenterLcmDiscoveryProduct{value: val, isSet: true}
}

func (v NullableVcenterLcmDiscoveryProduct) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterLcmDiscoveryProduct) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


