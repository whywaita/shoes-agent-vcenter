/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterVmHardwareAdapterScsiUpdateSpec struct for VcenterVmHardwareAdapterScsiUpdateSpec
type VcenterVmHardwareAdapterScsiUpdateSpec struct {
	Sharing *VcenterVmHardwareAdapterScsiSharing `json:"sharing,omitempty"`
}

// NewVcenterVmHardwareAdapterScsiUpdateSpec instantiates a new VcenterVmHardwareAdapterScsiUpdateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterVmHardwareAdapterScsiUpdateSpec() *VcenterVmHardwareAdapterScsiUpdateSpec {
	this := VcenterVmHardwareAdapterScsiUpdateSpec{}
	return &this
}

// NewVcenterVmHardwareAdapterScsiUpdateSpecWithDefaults instantiates a new VcenterVmHardwareAdapterScsiUpdateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterVmHardwareAdapterScsiUpdateSpecWithDefaults() *VcenterVmHardwareAdapterScsiUpdateSpec {
	this := VcenterVmHardwareAdapterScsiUpdateSpec{}
	return &this
}

// GetSharing returns the Sharing field value if set, zero value otherwise.
func (o *VcenterVmHardwareAdapterScsiUpdateSpec) GetSharing() VcenterVmHardwareAdapterScsiSharing {
	if o == nil || o.Sharing == nil {
		var ret VcenterVmHardwareAdapterScsiSharing
		return ret
	}
	return *o.Sharing
}

// GetSharingOk returns a tuple with the Sharing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmHardwareAdapterScsiUpdateSpec) GetSharingOk() (*VcenterVmHardwareAdapterScsiSharing, bool) {
	if o == nil || o.Sharing == nil {
		return nil, false
	}
	return o.Sharing, true
}

// HasSharing returns a boolean if a field has been set.
func (o *VcenterVmHardwareAdapterScsiUpdateSpec) HasSharing() bool {
	if o != nil && o.Sharing != nil {
		return true
	}

	return false
}

// SetSharing gets a reference to the given VcenterVmHardwareAdapterScsiSharing and assigns it to the Sharing field.
func (o *VcenterVmHardwareAdapterScsiUpdateSpec) SetSharing(v VcenterVmHardwareAdapterScsiSharing) {
	o.Sharing = &v
}

func (o VcenterVmHardwareAdapterScsiUpdateSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Sharing != nil {
		toSerialize["sharing"] = o.Sharing
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterVmHardwareAdapterScsiUpdateSpec struct {
	value *VcenterVmHardwareAdapterScsiUpdateSpec
	isSet bool
}

func (v NullableVcenterVmHardwareAdapterScsiUpdateSpec) Get() *VcenterVmHardwareAdapterScsiUpdateSpec {
	return v.value
}

func (v *NullableVcenterVmHardwareAdapterScsiUpdateSpec) Set(val *VcenterVmHardwareAdapterScsiUpdateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterVmHardwareAdapterScsiUpdateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterVmHardwareAdapterScsiUpdateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterVmHardwareAdapterScsiUpdateSpec(val *VcenterVmHardwareAdapterScsiUpdateSpec) *NullableVcenterVmHardwareAdapterScsiUpdateSpec {
	return &NullableVcenterVmHardwareAdapterScsiUpdateSpec{value: val, isSet: true}
}

func (v NullableVcenterVmHardwareAdapterScsiUpdateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterVmHardwareAdapterScsiUpdateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


