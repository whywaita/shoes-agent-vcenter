/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterVmHardwareCpuUpdateVmHardwareCpu struct for VcenterVmHardwareCpuUpdateVmHardwareCpu
type VcenterVmHardwareCpuUpdateVmHardwareCpu struct {
	Spec *VcenterVmHardwareCpuUpdateSpec `json:"spec,omitempty"`
}

// NewVcenterVmHardwareCpuUpdateVmHardwareCpu instantiates a new VcenterVmHardwareCpuUpdateVmHardwareCpu object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterVmHardwareCpuUpdateVmHardwareCpu() *VcenterVmHardwareCpuUpdateVmHardwareCpu {
	this := VcenterVmHardwareCpuUpdateVmHardwareCpu{}
	return &this
}

// NewVcenterVmHardwareCpuUpdateVmHardwareCpuWithDefaults instantiates a new VcenterVmHardwareCpuUpdateVmHardwareCpu object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterVmHardwareCpuUpdateVmHardwareCpuWithDefaults() *VcenterVmHardwareCpuUpdateVmHardwareCpu {
	this := VcenterVmHardwareCpuUpdateVmHardwareCpu{}
	return &this
}

// GetSpec returns the Spec field value if set, zero value otherwise.
func (o *VcenterVmHardwareCpuUpdateVmHardwareCpu) GetSpec() VcenterVmHardwareCpuUpdateSpec {
	if o == nil || o.Spec == nil {
		var ret VcenterVmHardwareCpuUpdateSpec
		return ret
	}
	return *o.Spec
}

// GetSpecOk returns a tuple with the Spec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmHardwareCpuUpdateVmHardwareCpu) GetSpecOk() (*VcenterVmHardwareCpuUpdateSpec, bool) {
	if o == nil || o.Spec == nil {
		return nil, false
	}
	return o.Spec, true
}

// HasSpec returns a boolean if a field has been set.
func (o *VcenterVmHardwareCpuUpdateVmHardwareCpu) HasSpec() bool {
	if o != nil && o.Spec != nil {
		return true
	}

	return false
}

// SetSpec gets a reference to the given VcenterVmHardwareCpuUpdateSpec and assigns it to the Spec field.
func (o *VcenterVmHardwareCpuUpdateVmHardwareCpu) SetSpec(v VcenterVmHardwareCpuUpdateSpec) {
	o.Spec = &v
}

func (o VcenterVmHardwareCpuUpdateVmHardwareCpu) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Spec != nil {
		toSerialize["spec"] = o.Spec
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterVmHardwareCpuUpdateVmHardwareCpu struct {
	value *VcenterVmHardwareCpuUpdateVmHardwareCpu
	isSet bool
}

func (v NullableVcenterVmHardwareCpuUpdateVmHardwareCpu) Get() *VcenterVmHardwareCpuUpdateVmHardwareCpu {
	return v.value
}

func (v *NullableVcenterVmHardwareCpuUpdateVmHardwareCpu) Set(val *VcenterVmHardwareCpuUpdateVmHardwareCpu) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterVmHardwareCpuUpdateVmHardwareCpu) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterVmHardwareCpuUpdateVmHardwareCpu) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterVmHardwareCpuUpdateVmHardwareCpu(val *VcenterVmHardwareCpuUpdateVmHardwareCpu) *NullableVcenterVmHardwareCpuUpdateVmHardwareCpu {
	return &NullableVcenterVmHardwareCpuUpdateVmHardwareCpu{value: val, isSet: true}
}

func (v NullableVcenterVmHardwareCpuUpdateVmHardwareCpu) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterVmHardwareCpuUpdateVmHardwareCpu) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


