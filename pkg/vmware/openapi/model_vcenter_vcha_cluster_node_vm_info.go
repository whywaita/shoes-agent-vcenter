/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterVchaClusterNodeVmInfo struct for VcenterVchaClusterNodeVmInfo
type VcenterVchaClusterNodeVmInfo struct {
	// The identifier of the virtual machine of the VCHA node. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: VirtualMachine:VCenter. When operations return a value of this structure as a result, the field will be an identifier for the resource type: VirtualMachine:VCenter.
	Vm string `json:"vm"`
	// BIOS UUID for the node.
	BiosUuid string `json:"bios_uuid"`
}

// NewVcenterVchaClusterNodeVmInfo instantiates a new VcenterVchaClusterNodeVmInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterVchaClusterNodeVmInfo(vm string, biosUuid string) *VcenterVchaClusterNodeVmInfo {
	this := VcenterVchaClusterNodeVmInfo{}
	this.Vm = vm
	this.BiosUuid = biosUuid
	return &this
}

// NewVcenterVchaClusterNodeVmInfoWithDefaults instantiates a new VcenterVchaClusterNodeVmInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterVchaClusterNodeVmInfoWithDefaults() *VcenterVchaClusterNodeVmInfo {
	this := VcenterVchaClusterNodeVmInfo{}
	return &this
}

// GetVm returns the Vm field value
func (o *VcenterVchaClusterNodeVmInfo) GetVm() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Vm
}

// GetVmOk returns a tuple with the Vm field value
// and a boolean to check if the value has been set.
func (o *VcenterVchaClusterNodeVmInfo) GetVmOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Vm, true
}

// SetVm sets field value
func (o *VcenterVchaClusterNodeVmInfo) SetVm(v string) {
	o.Vm = v
}

// GetBiosUuid returns the BiosUuid field value
func (o *VcenterVchaClusterNodeVmInfo) GetBiosUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BiosUuid
}

// GetBiosUuidOk returns a tuple with the BiosUuid field value
// and a boolean to check if the value has been set.
func (o *VcenterVchaClusterNodeVmInfo) GetBiosUuidOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BiosUuid, true
}

// SetBiosUuid sets field value
func (o *VcenterVchaClusterNodeVmInfo) SetBiosUuid(v string) {
	o.BiosUuid = v
}

func (o VcenterVchaClusterNodeVmInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["vm"] = o.Vm
	}
	if true {
		toSerialize["bios_uuid"] = o.BiosUuid
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterVchaClusterNodeVmInfo struct {
	value *VcenterVchaClusterNodeVmInfo
	isSet bool
}

func (v NullableVcenterVchaClusterNodeVmInfo) Get() *VcenterVchaClusterNodeVmInfo {
	return v.value
}

func (v *NullableVcenterVchaClusterNodeVmInfo) Set(val *VcenterVchaClusterNodeVmInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterVchaClusterNodeVmInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterVchaClusterNodeVmInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterVchaClusterNodeVmInfo(val *VcenterVchaClusterNodeVmInfo) *NullableVcenterVchaClusterNodeVmInfo {
	return &NullableVcenterVchaClusterNodeVmInfo{value: val, isSet: true}
}

func (v NullableVcenterVchaClusterNodeVmInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterVchaClusterNodeVmInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


