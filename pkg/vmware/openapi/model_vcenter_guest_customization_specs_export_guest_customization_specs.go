/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterGuestCustomizationSpecsExportGuestCustomizationSpecs struct for VcenterGuestCustomizationSpecsExportGuestCustomizationSpecs
type VcenterGuestCustomizationSpecsExportGuestCustomizationSpecs struct {
	Format *VcenterGuestCustomizationSpecsFormat `json:"format,omitempty"`
}

// NewVcenterGuestCustomizationSpecsExportGuestCustomizationSpecs instantiates a new VcenterGuestCustomizationSpecsExportGuestCustomizationSpecs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterGuestCustomizationSpecsExportGuestCustomizationSpecs() *VcenterGuestCustomizationSpecsExportGuestCustomizationSpecs {
	this := VcenterGuestCustomizationSpecsExportGuestCustomizationSpecs{}
	return &this
}

// NewVcenterGuestCustomizationSpecsExportGuestCustomizationSpecsWithDefaults instantiates a new VcenterGuestCustomizationSpecsExportGuestCustomizationSpecs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterGuestCustomizationSpecsExportGuestCustomizationSpecsWithDefaults() *VcenterGuestCustomizationSpecsExportGuestCustomizationSpecs {
	this := VcenterGuestCustomizationSpecsExportGuestCustomizationSpecs{}
	return &this
}

// GetFormat returns the Format field value if set, zero value otherwise.
func (o *VcenterGuestCustomizationSpecsExportGuestCustomizationSpecs) GetFormat() VcenterGuestCustomizationSpecsFormat {
	if o == nil || o.Format == nil {
		var ret VcenterGuestCustomizationSpecsFormat
		return ret
	}
	return *o.Format
}

// GetFormatOk returns a tuple with the Format field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterGuestCustomizationSpecsExportGuestCustomizationSpecs) GetFormatOk() (*VcenterGuestCustomizationSpecsFormat, bool) {
	if o == nil || o.Format == nil {
		return nil, false
	}
	return o.Format, true
}

// HasFormat returns a boolean if a field has been set.
func (o *VcenterGuestCustomizationSpecsExportGuestCustomizationSpecs) HasFormat() bool {
	if o != nil && o.Format != nil {
		return true
	}

	return false
}

// SetFormat gets a reference to the given VcenterGuestCustomizationSpecsFormat and assigns it to the Format field.
func (o *VcenterGuestCustomizationSpecsExportGuestCustomizationSpecs) SetFormat(v VcenterGuestCustomizationSpecsFormat) {
	o.Format = &v
}

func (o VcenterGuestCustomizationSpecsExportGuestCustomizationSpecs) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Format != nil {
		toSerialize["format"] = o.Format
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterGuestCustomizationSpecsExportGuestCustomizationSpecs struct {
	value *VcenterGuestCustomizationSpecsExportGuestCustomizationSpecs
	isSet bool
}

func (v NullableVcenterGuestCustomizationSpecsExportGuestCustomizationSpecs) Get() *VcenterGuestCustomizationSpecsExportGuestCustomizationSpecs {
	return v.value
}

func (v *NullableVcenterGuestCustomizationSpecsExportGuestCustomizationSpecs) Set(val *VcenterGuestCustomizationSpecsExportGuestCustomizationSpecs) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterGuestCustomizationSpecsExportGuestCustomizationSpecs) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterGuestCustomizationSpecsExportGuestCustomizationSpecs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterGuestCustomizationSpecsExportGuestCustomizationSpecs(val *VcenterGuestCustomizationSpecsExportGuestCustomizationSpecs) *NullableVcenterGuestCustomizationSpecsExportGuestCustomizationSpecs {
	return &NullableVcenterGuestCustomizationSpecsExportGuestCustomizationSpecs{value: val, isSet: true}
}

func (v NullableVcenterGuestCustomizationSpecsExportGuestCustomizationSpecs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterGuestCustomizationSpecsExportGuestCustomizationSpecs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


