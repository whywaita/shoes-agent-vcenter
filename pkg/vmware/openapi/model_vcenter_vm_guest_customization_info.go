/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// VcenterVmGuestCustomizationInfo struct for VcenterVmGuestCustomizationInfo
type VcenterVmGuestCustomizationInfo struct {
	Status VcenterVmGuestCustomizationInfoStatus `json:"status"`
	// Description of the error if the Customization.Info.status of customization operation is FAILED. This field will be unset if the status is not FAILED or there is no information available for the error.
	Error *string `json:"error,omitempty"`
	// Time when the customization process has started inside the guest operating system. This field will be unset if the status is PENDING.
	StartTime *time.Time `json:"start_time,omitempty"`
	// Time when the customization process has completed inside the guest operating system. This field will be unset if the status is not SUCCEEDED or FAILED.
	EndTime *time.Time `json:"end_time,omitempty"`
}

// NewVcenterVmGuestCustomizationInfo instantiates a new VcenterVmGuestCustomizationInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterVmGuestCustomizationInfo(status VcenterVmGuestCustomizationInfoStatus) *VcenterVmGuestCustomizationInfo {
	this := VcenterVmGuestCustomizationInfo{}
	this.Status = status
	return &this
}

// NewVcenterVmGuestCustomizationInfoWithDefaults instantiates a new VcenterVmGuestCustomizationInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterVmGuestCustomizationInfoWithDefaults() *VcenterVmGuestCustomizationInfo {
	this := VcenterVmGuestCustomizationInfo{}
	return &this
}

// GetStatus returns the Status field value
func (o *VcenterVmGuestCustomizationInfo) GetStatus() VcenterVmGuestCustomizationInfoStatus {
	if o == nil {
		var ret VcenterVmGuestCustomizationInfoStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *VcenterVmGuestCustomizationInfo) GetStatusOk() (*VcenterVmGuestCustomizationInfoStatus, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *VcenterVmGuestCustomizationInfo) SetStatus(v VcenterVmGuestCustomizationInfoStatus) {
	o.Status = v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *VcenterVmGuestCustomizationInfo) GetError() string {
	if o == nil || o.Error == nil {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmGuestCustomizationInfo) GetErrorOk() (*string, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *VcenterVmGuestCustomizationInfo) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *VcenterVmGuestCustomizationInfo) SetError(v string) {
	o.Error = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *VcenterVmGuestCustomizationInfo) GetStartTime() time.Time {
	if o == nil || o.StartTime == nil {
		var ret time.Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmGuestCustomizationInfo) GetStartTimeOk() (*time.Time, bool) {
	if o == nil || o.StartTime == nil {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *VcenterVmGuestCustomizationInfo) HasStartTime() bool {
	if o != nil && o.StartTime != nil {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given time.Time and assigns it to the StartTime field.
func (o *VcenterVmGuestCustomizationInfo) SetStartTime(v time.Time) {
	o.StartTime = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *VcenterVmGuestCustomizationInfo) GetEndTime() time.Time {
	if o == nil || o.EndTime == nil {
		var ret time.Time
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmGuestCustomizationInfo) GetEndTimeOk() (*time.Time, bool) {
	if o == nil || o.EndTime == nil {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *VcenterVmGuestCustomizationInfo) HasEndTime() bool {
	if o != nil && o.EndTime != nil {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given time.Time and assigns it to the EndTime field.
func (o *VcenterVmGuestCustomizationInfo) SetEndTime(v time.Time) {
	o.EndTime = &v
}

func (o VcenterVmGuestCustomizationInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["status"] = o.Status
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	if o.StartTime != nil {
		toSerialize["start_time"] = o.StartTime
	}
	if o.EndTime != nil {
		toSerialize["end_time"] = o.EndTime
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterVmGuestCustomizationInfo struct {
	value *VcenterVmGuestCustomizationInfo
	isSet bool
}

func (v NullableVcenterVmGuestCustomizationInfo) Get() *VcenterVmGuestCustomizationInfo {
	return v.value
}

func (v *NullableVcenterVmGuestCustomizationInfo) Set(val *VcenterVmGuestCustomizationInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterVmGuestCustomizationInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterVmGuestCustomizationInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterVmGuestCustomizationInfo(val *VcenterVmGuestCustomizationInfo) *NullableVcenterVmGuestCustomizationInfo {
	return &NullableVcenterVmGuestCustomizationInfo{value: val, isSet: true}
}

func (v NullableVcenterVmGuestCustomizationInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterVmGuestCustomizationInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


