/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterGuestCloudinitConfiguration struct for VcenterGuestCloudinitConfiguration
type VcenterGuestCloudinitConfiguration struct {
	// Metadata includes the network, instance id and hostname that cloud-init processes to configure the virtual machine. It is in json or yaml format. The max size of the metadata is 524288 bytes. See https://cloudinit.readthedocs.io/en/latest/topics/datasources/ovf.html about supported meta data formats.
	Metadata string `json:"metadata"`
	// Userdata is the user customized content that cloud-init processes to configure the virtual machine. See https://cloudinit.readthedocs.io/en/latest/topics/format.html about user data formats. See https://cloudinit.readthedocs.io/en/latest/topics/modules.html# about user data modules. The max size of the userdata is 524288 bytes. If unset, no cloud-init user data will be used as part of the cloud-init configuration.
	Userdata *string `json:"userdata,omitempty"`
}

// NewVcenterGuestCloudinitConfiguration instantiates a new VcenterGuestCloudinitConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterGuestCloudinitConfiguration(metadata string) *VcenterGuestCloudinitConfiguration {
	this := VcenterGuestCloudinitConfiguration{}
	this.Metadata = metadata
	return &this
}

// NewVcenterGuestCloudinitConfigurationWithDefaults instantiates a new VcenterGuestCloudinitConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterGuestCloudinitConfigurationWithDefaults() *VcenterGuestCloudinitConfiguration {
	this := VcenterGuestCloudinitConfiguration{}
	return &this
}

// GetMetadata returns the Metadata field value
func (o *VcenterGuestCloudinitConfiguration) GetMetadata() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value
// and a boolean to check if the value has been set.
func (o *VcenterGuestCloudinitConfiguration) GetMetadataOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Metadata, true
}

// SetMetadata sets field value
func (o *VcenterGuestCloudinitConfiguration) SetMetadata(v string) {
	o.Metadata = v
}

// GetUserdata returns the Userdata field value if set, zero value otherwise.
func (o *VcenterGuestCloudinitConfiguration) GetUserdata() string {
	if o == nil || o.Userdata == nil {
		var ret string
		return ret
	}
	return *o.Userdata
}

// GetUserdataOk returns a tuple with the Userdata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterGuestCloudinitConfiguration) GetUserdataOk() (*string, bool) {
	if o == nil || o.Userdata == nil {
		return nil, false
	}
	return o.Userdata, true
}

// HasUserdata returns a boolean if a field has been set.
func (o *VcenterGuestCloudinitConfiguration) HasUserdata() bool {
	if o != nil && o.Userdata != nil {
		return true
	}

	return false
}

// SetUserdata gets a reference to the given string and assigns it to the Userdata field.
func (o *VcenterGuestCloudinitConfiguration) SetUserdata(v string) {
	o.Userdata = &v
}

func (o VcenterGuestCloudinitConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Userdata != nil {
		toSerialize["userdata"] = o.Userdata
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterGuestCloudinitConfiguration struct {
	value *VcenterGuestCloudinitConfiguration
	isSet bool
}

func (v NullableVcenterGuestCloudinitConfiguration) Get() *VcenterGuestCloudinitConfiguration {
	return v.value
}

func (v *NullableVcenterGuestCloudinitConfiguration) Set(val *VcenterGuestCloudinitConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterGuestCloudinitConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterGuestCloudinitConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterGuestCloudinitConfiguration(val *VcenterGuestCloudinitConfiguration) *NullableVcenterGuestCloudinitConfiguration {
	return &NullableVcenterGuestCloudinitConfiguration{value: val, isSet: true}
}

func (v NullableVcenterGuestCloudinitConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterGuestCloudinitConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


