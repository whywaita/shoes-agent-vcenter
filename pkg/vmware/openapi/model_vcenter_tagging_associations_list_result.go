/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterTaggingAssociationsListResult struct for VcenterTaggingAssociationsListResult
type VcenterTaggingAssociationsListResult struct {
	// List of tag associations.
	Associations []VcenterTaggingAssociationsSummary `json:"associations"`
	// Marker is an opaque data structure that allows the caller to request the next page of tag associations. If unset or empty, there are no more tag associations to request. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.tagging.associations.Marker. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.tagging.associations.Marker.
	Marker *string `json:"marker,omitempty"`
	Status VcenterTaggingAssociationsLastIterationStatus `json:"status"`
}

// NewVcenterTaggingAssociationsListResult instantiates a new VcenterTaggingAssociationsListResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterTaggingAssociationsListResult(associations []VcenterTaggingAssociationsSummary, status VcenterTaggingAssociationsLastIterationStatus) *VcenterTaggingAssociationsListResult {
	this := VcenterTaggingAssociationsListResult{}
	this.Associations = associations
	this.Status = status
	return &this
}

// NewVcenterTaggingAssociationsListResultWithDefaults instantiates a new VcenterTaggingAssociationsListResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterTaggingAssociationsListResultWithDefaults() *VcenterTaggingAssociationsListResult {
	this := VcenterTaggingAssociationsListResult{}
	return &this
}

// GetAssociations returns the Associations field value
func (o *VcenterTaggingAssociationsListResult) GetAssociations() []VcenterTaggingAssociationsSummary {
	if o == nil {
		var ret []VcenterTaggingAssociationsSummary
		return ret
	}

	return o.Associations
}

// GetAssociationsOk returns a tuple with the Associations field value
// and a boolean to check if the value has been set.
func (o *VcenterTaggingAssociationsListResult) GetAssociationsOk() (*[]VcenterTaggingAssociationsSummary, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Associations, true
}

// SetAssociations sets field value
func (o *VcenterTaggingAssociationsListResult) SetAssociations(v []VcenterTaggingAssociationsSummary) {
	o.Associations = v
}

// GetMarker returns the Marker field value if set, zero value otherwise.
func (o *VcenterTaggingAssociationsListResult) GetMarker() string {
	if o == nil || o.Marker == nil {
		var ret string
		return ret
	}
	return *o.Marker
}

// GetMarkerOk returns a tuple with the Marker field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterTaggingAssociationsListResult) GetMarkerOk() (*string, bool) {
	if o == nil || o.Marker == nil {
		return nil, false
	}
	return o.Marker, true
}

// HasMarker returns a boolean if a field has been set.
func (o *VcenterTaggingAssociationsListResult) HasMarker() bool {
	if o != nil && o.Marker != nil {
		return true
	}

	return false
}

// SetMarker gets a reference to the given string and assigns it to the Marker field.
func (o *VcenterTaggingAssociationsListResult) SetMarker(v string) {
	o.Marker = &v
}

// GetStatus returns the Status field value
func (o *VcenterTaggingAssociationsListResult) GetStatus() VcenterTaggingAssociationsLastIterationStatus {
	if o == nil {
		var ret VcenterTaggingAssociationsLastIterationStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *VcenterTaggingAssociationsListResult) GetStatusOk() (*VcenterTaggingAssociationsLastIterationStatus, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *VcenterTaggingAssociationsListResult) SetStatus(v VcenterTaggingAssociationsLastIterationStatus) {
	o.Status = v
}

func (o VcenterTaggingAssociationsListResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["associations"] = o.Associations
	}
	if o.Marker != nil {
		toSerialize["marker"] = o.Marker
	}
	if true {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterTaggingAssociationsListResult struct {
	value *VcenterTaggingAssociationsListResult
	isSet bool
}

func (v NullableVcenterTaggingAssociationsListResult) Get() *VcenterTaggingAssociationsListResult {
	return v.value
}

func (v *NullableVcenterTaggingAssociationsListResult) Set(val *VcenterTaggingAssociationsListResult) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterTaggingAssociationsListResult) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterTaggingAssociationsListResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterTaggingAssociationsListResult(val *VcenterTaggingAssociationsListResult) *NullableVcenterTaggingAssociationsListResult {
	return &NullableVcenterTaggingAssociationsListResult{value: val, isSet: true}
}

func (v NullableVcenterTaggingAssociationsListResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterTaggingAssociationsListResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


