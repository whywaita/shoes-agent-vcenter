/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// VcenterVmStoragePolicyComplianceVmComplianceInfo struct for VcenterVmStoragePolicyComplianceVmComplianceInfo
type VcenterVmStoragePolicyComplianceVmComplianceInfo struct {
	Status VcenterVmStoragePolicyComplianceStatus `json:"status"`
	// Date and time of the most recent compliance check.
	CheckTime time.Time `json:"check_time"`
	// Identifier of the storage policy associated with the virtual machine. If unset SPBM is unable to retrieve or determine the associated policy, Compliance.VmComplianceInfo.failure-cause is set in such casses. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.StoragePolicy. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.StoragePolicy.
	Policy *string `json:"policy,omitempty"`
	// The exception that caused the compliance check to fail. There can be more than one cause, since a policy can contain capabilities from multiple providers. If empty, it implies no failures while retrieving compliance.
	FailureCause []VapiStdLocalizableMessage `json:"failure_cause"`
}

// NewVcenterVmStoragePolicyComplianceVmComplianceInfo instantiates a new VcenterVmStoragePolicyComplianceVmComplianceInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterVmStoragePolicyComplianceVmComplianceInfo(status VcenterVmStoragePolicyComplianceStatus, checkTime time.Time, failureCause []VapiStdLocalizableMessage) *VcenterVmStoragePolicyComplianceVmComplianceInfo {
	this := VcenterVmStoragePolicyComplianceVmComplianceInfo{}
	this.Status = status
	this.CheckTime = checkTime
	this.FailureCause = failureCause
	return &this
}

// NewVcenterVmStoragePolicyComplianceVmComplianceInfoWithDefaults instantiates a new VcenterVmStoragePolicyComplianceVmComplianceInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterVmStoragePolicyComplianceVmComplianceInfoWithDefaults() *VcenterVmStoragePolicyComplianceVmComplianceInfo {
	this := VcenterVmStoragePolicyComplianceVmComplianceInfo{}
	return &this
}

// GetStatus returns the Status field value
func (o *VcenterVmStoragePolicyComplianceVmComplianceInfo) GetStatus() VcenterVmStoragePolicyComplianceStatus {
	if o == nil {
		var ret VcenterVmStoragePolicyComplianceStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *VcenterVmStoragePolicyComplianceVmComplianceInfo) GetStatusOk() (*VcenterVmStoragePolicyComplianceStatus, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *VcenterVmStoragePolicyComplianceVmComplianceInfo) SetStatus(v VcenterVmStoragePolicyComplianceStatus) {
	o.Status = v
}

// GetCheckTime returns the CheckTime field value
func (o *VcenterVmStoragePolicyComplianceVmComplianceInfo) GetCheckTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CheckTime
}

// GetCheckTimeOk returns a tuple with the CheckTime field value
// and a boolean to check if the value has been set.
func (o *VcenterVmStoragePolicyComplianceVmComplianceInfo) GetCheckTimeOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CheckTime, true
}

// SetCheckTime sets field value
func (o *VcenterVmStoragePolicyComplianceVmComplianceInfo) SetCheckTime(v time.Time) {
	o.CheckTime = v
}

// GetPolicy returns the Policy field value if set, zero value otherwise.
func (o *VcenterVmStoragePolicyComplianceVmComplianceInfo) GetPolicy() string {
	if o == nil || o.Policy == nil {
		var ret string
		return ret
	}
	return *o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmStoragePolicyComplianceVmComplianceInfo) GetPolicyOk() (*string, bool) {
	if o == nil || o.Policy == nil {
		return nil, false
	}
	return o.Policy, true
}

// HasPolicy returns a boolean if a field has been set.
func (o *VcenterVmStoragePolicyComplianceVmComplianceInfo) HasPolicy() bool {
	if o != nil && o.Policy != nil {
		return true
	}

	return false
}

// SetPolicy gets a reference to the given string and assigns it to the Policy field.
func (o *VcenterVmStoragePolicyComplianceVmComplianceInfo) SetPolicy(v string) {
	o.Policy = &v
}

// GetFailureCause returns the FailureCause field value
func (o *VcenterVmStoragePolicyComplianceVmComplianceInfo) GetFailureCause() []VapiStdLocalizableMessage {
	if o == nil {
		var ret []VapiStdLocalizableMessage
		return ret
	}

	return o.FailureCause
}

// GetFailureCauseOk returns a tuple with the FailureCause field value
// and a boolean to check if the value has been set.
func (o *VcenterVmStoragePolicyComplianceVmComplianceInfo) GetFailureCauseOk() (*[]VapiStdLocalizableMessage, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FailureCause, true
}

// SetFailureCause sets field value
func (o *VcenterVmStoragePolicyComplianceVmComplianceInfo) SetFailureCause(v []VapiStdLocalizableMessage) {
	o.FailureCause = v
}

func (o VcenterVmStoragePolicyComplianceVmComplianceInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["check_time"] = o.CheckTime
	}
	if o.Policy != nil {
		toSerialize["policy"] = o.Policy
	}
	if true {
		toSerialize["failure_cause"] = o.FailureCause
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterVmStoragePolicyComplianceVmComplianceInfo struct {
	value *VcenterVmStoragePolicyComplianceVmComplianceInfo
	isSet bool
}

func (v NullableVcenterVmStoragePolicyComplianceVmComplianceInfo) Get() *VcenterVmStoragePolicyComplianceVmComplianceInfo {
	return v.value
}

func (v *NullableVcenterVmStoragePolicyComplianceVmComplianceInfo) Set(val *VcenterVmStoragePolicyComplianceVmComplianceInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterVmStoragePolicyComplianceVmComplianceInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterVmStoragePolicyComplianceVmComplianceInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterVmStoragePolicyComplianceVmComplianceInfo(val *VcenterVmStoragePolicyComplianceVmComplianceInfo) *NullableVcenterVmStoragePolicyComplianceVmComplianceInfo {
	return &NullableVcenterVmStoragePolicyComplianceVmComplianceInfo{value: val, isSet: true}
}

func (v NullableVcenterVmStoragePolicyComplianceVmComplianceInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterVmStoragePolicyComplianceVmComplianceInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


