/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterNamespaceManagementSupervisorServicesCustomCreateSpec struct for VcenterNamespaceManagementSupervisorServicesCustomCreateSpec
type VcenterNamespaceManagementSupervisorServicesCustomCreateSpec struct {
	// The identifier of the Supervisor Service. This has DNS_LABEL restrictions as specified in . This must be an alphanumeric (a-z and 0-9) string and with maximum length of 63 characters and with the '-' character allowed anywhere except the first or last character. This identifier must be unique across all Namespaces in this vCenter server. Additionally, the ID 'namespaces' is reserved and must not be used. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.namespace_management.SupervisorService. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.namespace_management.SupervisorService.
	SupervisorService string `json:"supervisor_service"`
	// A human readable name of the Supervisor Service.
	DisplayName string `json:"display_name"`
	// A human readable description of the Supervisor Service. If unset, the Supervisor Service description will be empty.
	Description *string `json:"description,omitempty"`
	VersionSpec VcenterNamespaceManagementSupervisorServicesVersionsCustomCreateSpec `json:"version_spec"`
}

// NewVcenterNamespaceManagementSupervisorServicesCustomCreateSpec instantiates a new VcenterNamespaceManagementSupervisorServicesCustomCreateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterNamespaceManagementSupervisorServicesCustomCreateSpec(supervisorService string, displayName string, versionSpec VcenterNamespaceManagementSupervisorServicesVersionsCustomCreateSpec) *VcenterNamespaceManagementSupervisorServicesCustomCreateSpec {
	this := VcenterNamespaceManagementSupervisorServicesCustomCreateSpec{}
	this.SupervisorService = supervisorService
	this.DisplayName = displayName
	this.VersionSpec = versionSpec
	return &this
}

// NewVcenterNamespaceManagementSupervisorServicesCustomCreateSpecWithDefaults instantiates a new VcenterNamespaceManagementSupervisorServicesCustomCreateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterNamespaceManagementSupervisorServicesCustomCreateSpecWithDefaults() *VcenterNamespaceManagementSupervisorServicesCustomCreateSpec {
	this := VcenterNamespaceManagementSupervisorServicesCustomCreateSpec{}
	return &this
}

// GetSupervisorService returns the SupervisorService field value
func (o *VcenterNamespaceManagementSupervisorServicesCustomCreateSpec) GetSupervisorService() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SupervisorService
}

// GetSupervisorServiceOk returns a tuple with the SupervisorService field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespaceManagementSupervisorServicesCustomCreateSpec) GetSupervisorServiceOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SupervisorService, true
}

// SetSupervisorService sets field value
func (o *VcenterNamespaceManagementSupervisorServicesCustomCreateSpec) SetSupervisorService(v string) {
	o.SupervisorService = v
}

// GetDisplayName returns the DisplayName field value
func (o *VcenterNamespaceManagementSupervisorServicesCustomCreateSpec) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespaceManagementSupervisorServicesCustomCreateSpec) GetDisplayNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *VcenterNamespaceManagementSupervisorServicesCustomCreateSpec) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *VcenterNamespaceManagementSupervisorServicesCustomCreateSpec) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterNamespaceManagementSupervisorServicesCustomCreateSpec) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *VcenterNamespaceManagementSupervisorServicesCustomCreateSpec) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *VcenterNamespaceManagementSupervisorServicesCustomCreateSpec) SetDescription(v string) {
	o.Description = &v
}

// GetVersionSpec returns the VersionSpec field value
func (o *VcenterNamespaceManagementSupervisorServicesCustomCreateSpec) GetVersionSpec() VcenterNamespaceManagementSupervisorServicesVersionsCustomCreateSpec {
	if o == nil {
		var ret VcenterNamespaceManagementSupervisorServicesVersionsCustomCreateSpec
		return ret
	}

	return o.VersionSpec
}

// GetVersionSpecOk returns a tuple with the VersionSpec field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespaceManagementSupervisorServicesCustomCreateSpec) GetVersionSpecOk() (*VcenterNamespaceManagementSupervisorServicesVersionsCustomCreateSpec, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.VersionSpec, true
}

// SetVersionSpec sets field value
func (o *VcenterNamespaceManagementSupervisorServicesCustomCreateSpec) SetVersionSpec(v VcenterNamespaceManagementSupervisorServicesVersionsCustomCreateSpec) {
	o.VersionSpec = v
}

func (o VcenterNamespaceManagementSupervisorServicesCustomCreateSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["supervisor_service"] = o.SupervisorService
	}
	if true {
		toSerialize["display_name"] = o.DisplayName
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["version_spec"] = o.VersionSpec
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterNamespaceManagementSupervisorServicesCustomCreateSpec struct {
	value *VcenterNamespaceManagementSupervisorServicesCustomCreateSpec
	isSet bool
}

func (v NullableVcenterNamespaceManagementSupervisorServicesCustomCreateSpec) Get() *VcenterNamespaceManagementSupervisorServicesCustomCreateSpec {
	return v.value
}

func (v *NullableVcenterNamespaceManagementSupervisorServicesCustomCreateSpec) Set(val *VcenterNamespaceManagementSupervisorServicesCustomCreateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterNamespaceManagementSupervisorServicesCustomCreateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterNamespaceManagementSupervisorServicesCustomCreateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterNamespaceManagementSupervisorServicesCustomCreateSpec(val *VcenterNamespaceManagementSupervisorServicesCustomCreateSpec) *NullableVcenterNamespaceManagementSupervisorServicesCustomCreateSpec {
	return &NullableVcenterNamespaceManagementSupervisorServicesCustomCreateSpec{value: val, isSet: true}
}

func (v NullableVcenterNamespaceManagementSupervisorServicesCustomCreateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterNamespaceManagementSupervisorServicesCustomCreateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


