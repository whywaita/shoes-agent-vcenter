/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterCryptoManagerKmsProvidersExportSpec struct for VcenterCryptoManagerKmsProvidersExportSpec
type VcenterCryptoManagerKmsProvidersExportSpec struct {
	// Provider identifier When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.crypto_manager.kms.provider. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.crypto_manager.kms.provider.
	Provider string `json:"provider"`
	// Password used to encrypt the exported configuration. If unset or empty, the configuration will not be encrypted.
	Password *string `json:"password,omitempty"`
}

// NewVcenterCryptoManagerKmsProvidersExportSpec instantiates a new VcenterCryptoManagerKmsProvidersExportSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterCryptoManagerKmsProvidersExportSpec(provider string) *VcenterCryptoManagerKmsProvidersExportSpec {
	this := VcenterCryptoManagerKmsProvidersExportSpec{}
	this.Provider = provider
	return &this
}

// NewVcenterCryptoManagerKmsProvidersExportSpecWithDefaults instantiates a new VcenterCryptoManagerKmsProvidersExportSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterCryptoManagerKmsProvidersExportSpecWithDefaults() *VcenterCryptoManagerKmsProvidersExportSpec {
	this := VcenterCryptoManagerKmsProvidersExportSpec{}
	return &this
}

// GetProvider returns the Provider field value
func (o *VcenterCryptoManagerKmsProvidersExportSpec) GetProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *VcenterCryptoManagerKmsProvidersExportSpec) GetProviderOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *VcenterCryptoManagerKmsProvidersExportSpec) SetProvider(v string) {
	o.Provider = v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *VcenterCryptoManagerKmsProvidersExportSpec) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterCryptoManagerKmsProvidersExportSpec) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *VcenterCryptoManagerKmsProvidersExportSpec) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *VcenterCryptoManagerKmsProvidersExportSpec) SetPassword(v string) {
	o.Password = &v
}

func (o VcenterCryptoManagerKmsProvidersExportSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["provider"] = o.Provider
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterCryptoManagerKmsProvidersExportSpec struct {
	value *VcenterCryptoManagerKmsProvidersExportSpec
	isSet bool
}

func (v NullableVcenterCryptoManagerKmsProvidersExportSpec) Get() *VcenterCryptoManagerKmsProvidersExportSpec {
	return v.value
}

func (v *NullableVcenterCryptoManagerKmsProvidersExportSpec) Set(val *VcenterCryptoManagerKmsProvidersExportSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterCryptoManagerKmsProvidersExportSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterCryptoManagerKmsProvidersExportSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterCryptoManagerKmsProvidersExportSpec(val *VcenterCryptoManagerKmsProvidersExportSpec) *NullableVcenterCryptoManagerKmsProvidersExportSpec {
	return &NullableVcenterCryptoManagerKmsProvidersExportSpec{value: val, isSet: true}
}

func (v NullableVcenterCryptoManagerKmsProvidersExportSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterCryptoManagerKmsProvidersExportSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


