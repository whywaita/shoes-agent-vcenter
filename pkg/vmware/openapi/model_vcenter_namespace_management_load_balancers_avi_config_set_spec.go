/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterNamespaceManagementLoadBalancersAviConfigSetSpec struct for VcenterNamespaceManagementLoadBalancersAviConfigSetSpec
type VcenterNamespaceManagementLoadBalancersAviConfigSetSpec struct {
	Server VcenterNamespaceManagementLoadBalancersServer `json:"server"`
	// An administrator user name for accessing the Avi Controller.
	Username string `json:"username"`
	// The password for the administrator user.
	Password string `json:"password"`
	// CertificateAuthorityChain contains PEM-encoded CA chain which is used to verify x509 certificates received from the server.
	CertificateAuthorityChain string `json:"certificate_authority_chain"`
}

// NewVcenterNamespaceManagementLoadBalancersAviConfigSetSpec instantiates a new VcenterNamespaceManagementLoadBalancersAviConfigSetSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterNamespaceManagementLoadBalancersAviConfigSetSpec(server VcenterNamespaceManagementLoadBalancersServer, username string, password string, certificateAuthorityChain string) *VcenterNamespaceManagementLoadBalancersAviConfigSetSpec {
	this := VcenterNamespaceManagementLoadBalancersAviConfigSetSpec{}
	this.Server = server
	this.Username = username
	this.Password = password
	this.CertificateAuthorityChain = certificateAuthorityChain
	return &this
}

// NewVcenterNamespaceManagementLoadBalancersAviConfigSetSpecWithDefaults instantiates a new VcenterNamespaceManagementLoadBalancersAviConfigSetSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterNamespaceManagementLoadBalancersAviConfigSetSpecWithDefaults() *VcenterNamespaceManagementLoadBalancersAviConfigSetSpec {
	this := VcenterNamespaceManagementLoadBalancersAviConfigSetSpec{}
	return &this
}

// GetServer returns the Server field value
func (o *VcenterNamespaceManagementLoadBalancersAviConfigSetSpec) GetServer() VcenterNamespaceManagementLoadBalancersServer {
	if o == nil {
		var ret VcenterNamespaceManagementLoadBalancersServer
		return ret
	}

	return o.Server
}

// GetServerOk returns a tuple with the Server field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespaceManagementLoadBalancersAviConfigSetSpec) GetServerOk() (*VcenterNamespaceManagementLoadBalancersServer, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Server, true
}

// SetServer sets field value
func (o *VcenterNamespaceManagementLoadBalancersAviConfigSetSpec) SetServer(v VcenterNamespaceManagementLoadBalancersServer) {
	o.Server = v
}

// GetUsername returns the Username field value
func (o *VcenterNamespaceManagementLoadBalancersAviConfigSetSpec) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespaceManagementLoadBalancersAviConfigSetSpec) GetUsernameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *VcenterNamespaceManagementLoadBalancersAviConfigSetSpec) SetUsername(v string) {
	o.Username = v
}

// GetPassword returns the Password field value
func (o *VcenterNamespaceManagementLoadBalancersAviConfigSetSpec) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespaceManagementLoadBalancersAviConfigSetSpec) GetPasswordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *VcenterNamespaceManagementLoadBalancersAviConfigSetSpec) SetPassword(v string) {
	o.Password = v
}

// GetCertificateAuthorityChain returns the CertificateAuthorityChain field value
func (o *VcenterNamespaceManagementLoadBalancersAviConfigSetSpec) GetCertificateAuthorityChain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CertificateAuthorityChain
}

// GetCertificateAuthorityChainOk returns a tuple with the CertificateAuthorityChain field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespaceManagementLoadBalancersAviConfigSetSpec) GetCertificateAuthorityChainOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CertificateAuthorityChain, true
}

// SetCertificateAuthorityChain sets field value
func (o *VcenterNamespaceManagementLoadBalancersAviConfigSetSpec) SetCertificateAuthorityChain(v string) {
	o.CertificateAuthorityChain = v
}

func (o VcenterNamespaceManagementLoadBalancersAviConfigSetSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["server"] = o.Server
	}
	if true {
		toSerialize["username"] = o.Username
	}
	if true {
		toSerialize["password"] = o.Password
	}
	if true {
		toSerialize["certificate_authority_chain"] = o.CertificateAuthorityChain
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterNamespaceManagementLoadBalancersAviConfigSetSpec struct {
	value *VcenterNamespaceManagementLoadBalancersAviConfigSetSpec
	isSet bool
}

func (v NullableVcenterNamespaceManagementLoadBalancersAviConfigSetSpec) Get() *VcenterNamespaceManagementLoadBalancersAviConfigSetSpec {
	return v.value
}

func (v *NullableVcenterNamespaceManagementLoadBalancersAviConfigSetSpec) Set(val *VcenterNamespaceManagementLoadBalancersAviConfigSetSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterNamespaceManagementLoadBalancersAviConfigSetSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterNamespaceManagementLoadBalancersAviConfigSetSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterNamespaceManagementLoadBalancersAviConfigSetSpec(val *VcenterNamespaceManagementLoadBalancersAviConfigSetSpec) *NullableVcenterNamespaceManagementLoadBalancersAviConfigSetSpec {
	return &NullableVcenterNamespaceManagementLoadBalancersAviConfigSetSpec{value: val, isSet: true}
}

func (v NullableVcenterNamespaceManagementLoadBalancersAviConfigSetSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterNamespaceManagementLoadBalancersAviConfigSetSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


