/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CisTaskProgress struct for CisTaskProgress
type CisTaskProgress struct {
	// Total amount of the work for the operation.
	Total int64 `json:"total"`
	// The amount of work completed for the operation. The value can only be incremented.
	Completed int64 `json:"completed"`
	Message VapiStdLocalizableMessage `json:"message"`
}

// NewCisTaskProgress instantiates a new CisTaskProgress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCisTaskProgress(total int64, completed int64, message VapiStdLocalizableMessage) *CisTaskProgress {
	this := CisTaskProgress{}
	this.Total = total
	this.Completed = completed
	this.Message = message
	return &this
}

// NewCisTaskProgressWithDefaults instantiates a new CisTaskProgress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCisTaskProgressWithDefaults() *CisTaskProgress {
	this := CisTaskProgress{}
	return &this
}

// GetTotal returns the Total field value
func (o *CisTaskProgress) GetTotal() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *CisTaskProgress) GetTotalOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *CisTaskProgress) SetTotal(v int64) {
	o.Total = v
}

// GetCompleted returns the Completed field value
func (o *CisTaskProgress) GetCompleted() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Completed
}

// GetCompletedOk returns a tuple with the Completed field value
// and a boolean to check if the value has been set.
func (o *CisTaskProgress) GetCompletedOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Completed, true
}

// SetCompleted sets field value
func (o *CisTaskProgress) SetCompleted(v int64) {
	o.Completed = v
}

// GetMessage returns the Message field value
func (o *CisTaskProgress) GetMessage() VapiStdLocalizableMessage {
	if o == nil {
		var ret VapiStdLocalizableMessage
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *CisTaskProgress) GetMessageOk() (*VapiStdLocalizableMessage, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *CisTaskProgress) SetMessage(v VapiStdLocalizableMessage) {
	o.Message = v
}

func (o CisTaskProgress) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["total"] = o.Total
	}
	if true {
		toSerialize["completed"] = o.Completed
	}
	if true {
		toSerialize["message"] = o.Message
	}
	return json.Marshal(toSerialize)
}

type NullableCisTaskProgress struct {
	value *CisTaskProgress
	isSet bool
}

func (v NullableCisTaskProgress) Get() *CisTaskProgress {
	return v.value
}

func (v *NullableCisTaskProgress) Set(val *CisTaskProgress) {
	v.value = val
	v.isSet = true
}

func (v NullableCisTaskProgress) IsSet() bool {
	return v.isSet
}

func (v *NullableCisTaskProgress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCisTaskProgress(val *CisTaskProgress) *NullableCisTaskProgress {
	return &NullableCisTaskProgress{value: val, isSet: true}
}

func (v NullableCisTaskProgress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCisTaskProgress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


