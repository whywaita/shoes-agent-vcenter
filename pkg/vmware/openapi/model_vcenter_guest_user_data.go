/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterGuestUserData struct for VcenterGuestUserData
type VcenterGuestUserData struct {
	ComputerName VcenterGuestHostnameGenerator `json:"computer_name"`
	// Full name of the end user. Note that this is not the username but full name specified in \"Firstname Lastname\" format.
	FullName string `json:"full_name"`
	// Name of the organization that owns the computer.
	Organization string `json:"organization"`
	// The product Key to use for activating Windows guest operating system.
	ProductKey string `json:"product_key"`
}

// NewVcenterGuestUserData instantiates a new VcenterGuestUserData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterGuestUserData(computerName VcenterGuestHostnameGenerator, fullName string, organization string, productKey string) *VcenterGuestUserData {
	this := VcenterGuestUserData{}
	this.ComputerName = computerName
	this.FullName = fullName
	this.Organization = organization
	this.ProductKey = productKey
	return &this
}

// NewVcenterGuestUserDataWithDefaults instantiates a new VcenterGuestUserData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterGuestUserDataWithDefaults() *VcenterGuestUserData {
	this := VcenterGuestUserData{}
	return &this
}

// GetComputerName returns the ComputerName field value
func (o *VcenterGuestUserData) GetComputerName() VcenterGuestHostnameGenerator {
	if o == nil {
		var ret VcenterGuestHostnameGenerator
		return ret
	}

	return o.ComputerName
}

// GetComputerNameOk returns a tuple with the ComputerName field value
// and a boolean to check if the value has been set.
func (o *VcenterGuestUserData) GetComputerNameOk() (*VcenterGuestHostnameGenerator, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ComputerName, true
}

// SetComputerName sets field value
func (o *VcenterGuestUserData) SetComputerName(v VcenterGuestHostnameGenerator) {
	o.ComputerName = v
}

// GetFullName returns the FullName field value
func (o *VcenterGuestUserData) GetFullName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value
// and a boolean to check if the value has been set.
func (o *VcenterGuestUserData) GetFullNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FullName, true
}

// SetFullName sets field value
func (o *VcenterGuestUserData) SetFullName(v string) {
	o.FullName = v
}

// GetOrganization returns the Organization field value
func (o *VcenterGuestUserData) GetOrganization() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value
// and a boolean to check if the value has been set.
func (o *VcenterGuestUserData) GetOrganizationOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Organization, true
}

// SetOrganization sets field value
func (o *VcenterGuestUserData) SetOrganization(v string) {
	o.Organization = v
}

// GetProductKey returns the ProductKey field value
func (o *VcenterGuestUserData) GetProductKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductKey
}

// GetProductKeyOk returns a tuple with the ProductKey field value
// and a boolean to check if the value has been set.
func (o *VcenterGuestUserData) GetProductKeyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ProductKey, true
}

// SetProductKey sets field value
func (o *VcenterGuestUserData) SetProductKey(v string) {
	o.ProductKey = v
}

func (o VcenterGuestUserData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["computer_name"] = o.ComputerName
	}
	if true {
		toSerialize["full_name"] = o.FullName
	}
	if true {
		toSerialize["organization"] = o.Organization
	}
	if true {
		toSerialize["product_key"] = o.ProductKey
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterGuestUserData struct {
	value *VcenterGuestUserData
	isSet bool
}

func (v NullableVcenterGuestUserData) Get() *VcenterGuestUserData {
	return v.value
}

func (v *NullableVcenterGuestUserData) Set(val *VcenterGuestUserData) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterGuestUserData) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterGuestUserData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterGuestUserData(val *VcenterGuestUserData) *NullableVcenterGuestUserData {
	return &NullableVcenterGuestUserData{value: val, isSet: true}
}

func (v NullableVcenterGuestUserData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterGuestUserData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


