/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterVmGuestIdentityInfo struct for VcenterVmGuestIdentityInfo
type VcenterVmGuestIdentityInfo struct {
	Name VcenterVmGuestOS `json:"name"`
	Family VcenterVmGuestOSFamily `json:"family"`
	FullName VapiStdLocalizableMessage `json:"full_name"`
	// Hostname of the guest operating system.
	HostName string `json:"host_name"`
	// IP address assigned by the guest operating system. If unset the guest does not have an IP address.
	IpAddress *string `json:"ip_address,omitempty"`
}

// NewVcenterVmGuestIdentityInfo instantiates a new VcenterVmGuestIdentityInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterVmGuestIdentityInfo(name VcenterVmGuestOS, family VcenterVmGuestOSFamily, fullName VapiStdLocalizableMessage, hostName string) *VcenterVmGuestIdentityInfo {
	this := VcenterVmGuestIdentityInfo{}
	this.Name = name
	this.Family = family
	this.FullName = fullName
	this.HostName = hostName
	return &this
}

// NewVcenterVmGuestIdentityInfoWithDefaults instantiates a new VcenterVmGuestIdentityInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterVmGuestIdentityInfoWithDefaults() *VcenterVmGuestIdentityInfo {
	this := VcenterVmGuestIdentityInfo{}
	return &this
}

// GetName returns the Name field value
func (o *VcenterVmGuestIdentityInfo) GetName() VcenterVmGuestOS {
	if o == nil {
		var ret VcenterVmGuestOS
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *VcenterVmGuestIdentityInfo) GetNameOk() (*VcenterVmGuestOS, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *VcenterVmGuestIdentityInfo) SetName(v VcenterVmGuestOS) {
	o.Name = v
}

// GetFamily returns the Family field value
func (o *VcenterVmGuestIdentityInfo) GetFamily() VcenterVmGuestOSFamily {
	if o == nil {
		var ret VcenterVmGuestOSFamily
		return ret
	}

	return o.Family
}

// GetFamilyOk returns a tuple with the Family field value
// and a boolean to check if the value has been set.
func (o *VcenterVmGuestIdentityInfo) GetFamilyOk() (*VcenterVmGuestOSFamily, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Family, true
}

// SetFamily sets field value
func (o *VcenterVmGuestIdentityInfo) SetFamily(v VcenterVmGuestOSFamily) {
	o.Family = v
}

// GetFullName returns the FullName field value
func (o *VcenterVmGuestIdentityInfo) GetFullName() VapiStdLocalizableMessage {
	if o == nil {
		var ret VapiStdLocalizableMessage
		return ret
	}

	return o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value
// and a boolean to check if the value has been set.
func (o *VcenterVmGuestIdentityInfo) GetFullNameOk() (*VapiStdLocalizableMessage, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.FullName, true
}

// SetFullName sets field value
func (o *VcenterVmGuestIdentityInfo) SetFullName(v VapiStdLocalizableMessage) {
	o.FullName = v
}

// GetHostName returns the HostName field value
func (o *VcenterVmGuestIdentityInfo) GetHostName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HostName
}

// GetHostNameOk returns a tuple with the HostName field value
// and a boolean to check if the value has been set.
func (o *VcenterVmGuestIdentityInfo) GetHostNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.HostName, true
}

// SetHostName sets field value
func (o *VcenterVmGuestIdentityInfo) SetHostName(v string) {
	o.HostName = v
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise.
func (o *VcenterVmGuestIdentityInfo) GetIpAddress() string {
	if o == nil || o.IpAddress == nil {
		var ret string
		return ret
	}
	return *o.IpAddress
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterVmGuestIdentityInfo) GetIpAddressOk() (*string, bool) {
	if o == nil || o.IpAddress == nil {
		return nil, false
	}
	return o.IpAddress, true
}

// HasIpAddress returns a boolean if a field has been set.
func (o *VcenterVmGuestIdentityInfo) HasIpAddress() bool {
	if o != nil && o.IpAddress != nil {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given string and assigns it to the IpAddress field.
func (o *VcenterVmGuestIdentityInfo) SetIpAddress(v string) {
	o.IpAddress = &v
}

func (o VcenterVmGuestIdentityInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["family"] = o.Family
	}
	if true {
		toSerialize["full_name"] = o.FullName
	}
	if true {
		toSerialize["host_name"] = o.HostName
	}
	if o.IpAddress != nil {
		toSerialize["ip_address"] = o.IpAddress
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterVmGuestIdentityInfo struct {
	value *VcenterVmGuestIdentityInfo
	isSet bool
}

func (v NullableVcenterVmGuestIdentityInfo) Get() *VcenterVmGuestIdentityInfo {
	return v.value
}

func (v *NullableVcenterVmGuestIdentityInfo) Set(val *VcenterVmGuestIdentityInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterVmGuestIdentityInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterVmGuestIdentityInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterVmGuestIdentityInfo(val *VcenterVmGuestIdentityInfo) *NullableVcenterVmGuestIdentityInfo {
	return &NullableVcenterVmGuestIdentityInfo{value: val, isSet: true}
}

func (v NullableVcenterVmGuestIdentityInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterVmGuestIdentityInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


