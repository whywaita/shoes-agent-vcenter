/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigFilterSpec struct for VcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigFilterSpec
type VcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigFilterSpec struct {
	// The health of the applied Key Provider Service configuration. If unset, no filtration will be performed by health.
	Health *[]VcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigHealth `json:"health,omitempty"`
	// The network address of the Key Provider Service configured for use in the Trusted Cluster. If unset, no filtration will be performed by network address.
	Address *[]VcenterTrustedInfrastructureNetworkAddress `json:"address,omitempty"`
}

// NewVcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigFilterSpec instantiates a new VcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigFilterSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigFilterSpec() *VcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigFilterSpec {
	this := VcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigFilterSpec{}
	return &this
}

// NewVcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigFilterSpecWithDefaults instantiates a new VcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigFilterSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigFilterSpecWithDefaults() *VcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigFilterSpec {
	this := VcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigFilterSpec{}
	return &this
}

// GetHealth returns the Health field value if set, zero value otherwise.
func (o *VcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigFilterSpec) GetHealth() []VcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigHealth {
	if o == nil || o.Health == nil {
		var ret []VcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigHealth
		return ret
	}
	return *o.Health
}

// GetHealthOk returns a tuple with the Health field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigFilterSpec) GetHealthOk() (*[]VcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigHealth, bool) {
	if o == nil || o.Health == nil {
		return nil, false
	}
	return o.Health, true
}

// HasHealth returns a boolean if a field has been set.
func (o *VcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigFilterSpec) HasHealth() bool {
	if o != nil && o.Health != nil {
		return true
	}

	return false
}

// SetHealth gets a reference to the given []VcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigHealth and assigns it to the Health field.
func (o *VcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigFilterSpec) SetHealth(v []VcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigHealth) {
	o.Health = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *VcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigFilterSpec) GetAddress() []VcenterTrustedInfrastructureNetworkAddress {
	if o == nil || o.Address == nil {
		var ret []VcenterTrustedInfrastructureNetworkAddress
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigFilterSpec) GetAddressOk() (*[]VcenterTrustedInfrastructureNetworkAddress, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *VcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigFilterSpec) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given []VcenterTrustedInfrastructureNetworkAddress and assigns it to the Address field.
func (o *VcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigFilterSpec) SetAddress(v []VcenterTrustedInfrastructureNetworkAddress) {
	o.Address = &v
}

func (o VcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigFilterSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Health != nil {
		toSerialize["health"] = o.Health
	}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigFilterSpec struct {
	value *VcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigFilterSpec
	isSet bool
}

func (v NullableVcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigFilterSpec) Get() *VcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigFilterSpec {
	return v.value
}

func (v *NullableVcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigFilterSpec) Set(val *VcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigFilterSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigFilterSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigFilterSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigFilterSpec(val *VcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigFilterSpec) *NullableVcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigFilterSpec {
	return &NullableVcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigFilterSpec{value: val, isSet: true}
}

func (v NullableVcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigFilterSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterTrustedInfrastructureTrustedClustersKmsServicesAppliedConfigFilterSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


