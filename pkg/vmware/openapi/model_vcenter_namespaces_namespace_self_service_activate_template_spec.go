/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterNamespacesNamespaceSelfServiceActivateTemplateSpec struct for VcenterNamespacesNamespaceSelfServiceActivateTemplateSpec
type VcenterNamespacesNamespaceSelfServiceActivateTemplateSpec struct {
	// When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.namespaces.NamespaceTemplate. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.namespaces.NamespaceTemplate.
	Template string `json:"template"`
	// Namespace Self Service permission to subjects.
	Permissions []VcenterNamespacesNamespaceTemplatesSubject `json:"permissions"`
	// Resource quotas that the template defines. Resource quota on the namespace. Refer to vcenter.namespace_management.NamespaceResourceOptions.Info#createResourceQuotaType and use vcenter.namespace_management.NamespaceResourceOptions#get for retrieving the type for the value for this field. For an example of this, see ResourceQuotaOptionsV1.
	ResourceSpec map[string]interface{} `json:"resource_spec"`
	// Storage associated with the self service namespace.
	StorageSpecs []VcenterNamespacesInstancesStorageSpec `json:"storage_specs"`
	// vSphere Namespaces network objects to be associated with the namespace. The values of this list need to reference names of pre-existing Networks.Info structures. The field must be left unset if the cluster hosting the namespace uses NSXT_CONTAINER_PLUGIN as the network provider, since the network(s) for this namespace will be managed by NSX-T Container Plugin. If field is unset when the cluster hosting the namespace uses VSPHERE_NETWORK as its network provider, the namespace will automatically be associated with the cluster's Supervisor Primary Workload Network. The field currently accepts at most only 1 vSphere Namespaces network object reference. When clients pass a value of this structure as a parameter, the field must contain identifiers for the resource type: ClusterComputeResource. When operations return a value of this structure as a result, the field will contain identifiers for the resource type: ClusterComputeResource.
	Networks *[]string `json:"networks,omitempty"`
}

// NewVcenterNamespacesNamespaceSelfServiceActivateTemplateSpec instantiates a new VcenterNamespacesNamespaceSelfServiceActivateTemplateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterNamespacesNamespaceSelfServiceActivateTemplateSpec(template string, permissions []VcenterNamespacesNamespaceTemplatesSubject, resourceSpec map[string]interface{}, storageSpecs []VcenterNamespacesInstancesStorageSpec) *VcenterNamespacesNamespaceSelfServiceActivateTemplateSpec {
	this := VcenterNamespacesNamespaceSelfServiceActivateTemplateSpec{}
	this.Template = template
	this.Permissions = permissions
	this.ResourceSpec = resourceSpec
	this.StorageSpecs = storageSpecs
	return &this
}

// NewVcenterNamespacesNamespaceSelfServiceActivateTemplateSpecWithDefaults instantiates a new VcenterNamespacesNamespaceSelfServiceActivateTemplateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterNamespacesNamespaceSelfServiceActivateTemplateSpecWithDefaults() *VcenterNamespacesNamespaceSelfServiceActivateTemplateSpec {
	this := VcenterNamespacesNamespaceSelfServiceActivateTemplateSpec{}
	return &this
}

// GetTemplate returns the Template field value
func (o *VcenterNamespacesNamespaceSelfServiceActivateTemplateSpec) GetTemplate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Template
}

// GetTemplateOk returns a tuple with the Template field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespacesNamespaceSelfServiceActivateTemplateSpec) GetTemplateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Template, true
}

// SetTemplate sets field value
func (o *VcenterNamespacesNamespaceSelfServiceActivateTemplateSpec) SetTemplate(v string) {
	o.Template = v
}

// GetPermissions returns the Permissions field value
func (o *VcenterNamespacesNamespaceSelfServiceActivateTemplateSpec) GetPermissions() []VcenterNamespacesNamespaceTemplatesSubject {
	if o == nil {
		var ret []VcenterNamespacesNamespaceTemplatesSubject
		return ret
	}

	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespacesNamespaceSelfServiceActivateTemplateSpec) GetPermissionsOk() (*[]VcenterNamespacesNamespaceTemplatesSubject, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Permissions, true
}

// SetPermissions sets field value
func (o *VcenterNamespacesNamespaceSelfServiceActivateTemplateSpec) SetPermissions(v []VcenterNamespacesNamespaceTemplatesSubject) {
	o.Permissions = v
}

// GetResourceSpec returns the ResourceSpec field value
func (o *VcenterNamespacesNamespaceSelfServiceActivateTemplateSpec) GetResourceSpec() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.ResourceSpec
}

// GetResourceSpecOk returns a tuple with the ResourceSpec field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespacesNamespaceSelfServiceActivateTemplateSpec) GetResourceSpecOk() (*map[string]interface{}, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ResourceSpec, true
}

// SetResourceSpec sets field value
func (o *VcenterNamespacesNamespaceSelfServiceActivateTemplateSpec) SetResourceSpec(v map[string]interface{}) {
	o.ResourceSpec = v
}

// GetStorageSpecs returns the StorageSpecs field value
func (o *VcenterNamespacesNamespaceSelfServiceActivateTemplateSpec) GetStorageSpecs() []VcenterNamespacesInstancesStorageSpec {
	if o == nil {
		var ret []VcenterNamespacesInstancesStorageSpec
		return ret
	}

	return o.StorageSpecs
}

// GetStorageSpecsOk returns a tuple with the StorageSpecs field value
// and a boolean to check if the value has been set.
func (o *VcenterNamespacesNamespaceSelfServiceActivateTemplateSpec) GetStorageSpecsOk() (*[]VcenterNamespacesInstancesStorageSpec, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.StorageSpecs, true
}

// SetStorageSpecs sets field value
func (o *VcenterNamespacesNamespaceSelfServiceActivateTemplateSpec) SetStorageSpecs(v []VcenterNamespacesInstancesStorageSpec) {
	o.StorageSpecs = v
}

// GetNetworks returns the Networks field value if set, zero value otherwise.
func (o *VcenterNamespacesNamespaceSelfServiceActivateTemplateSpec) GetNetworks() []string {
	if o == nil || o.Networks == nil {
		var ret []string
		return ret
	}
	return *o.Networks
}

// GetNetworksOk returns a tuple with the Networks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterNamespacesNamespaceSelfServiceActivateTemplateSpec) GetNetworksOk() (*[]string, bool) {
	if o == nil || o.Networks == nil {
		return nil, false
	}
	return o.Networks, true
}

// HasNetworks returns a boolean if a field has been set.
func (o *VcenterNamespacesNamespaceSelfServiceActivateTemplateSpec) HasNetworks() bool {
	if o != nil && o.Networks != nil {
		return true
	}

	return false
}

// SetNetworks gets a reference to the given []string and assigns it to the Networks field.
func (o *VcenterNamespacesNamespaceSelfServiceActivateTemplateSpec) SetNetworks(v []string) {
	o.Networks = &v
}

func (o VcenterNamespacesNamespaceSelfServiceActivateTemplateSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["template"] = o.Template
	}
	if true {
		toSerialize["permissions"] = o.Permissions
	}
	if true {
		toSerialize["resource_spec"] = o.ResourceSpec
	}
	if true {
		toSerialize["storage_specs"] = o.StorageSpecs
	}
	if o.Networks != nil {
		toSerialize["networks"] = o.Networks
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterNamespacesNamespaceSelfServiceActivateTemplateSpec struct {
	value *VcenterNamespacesNamespaceSelfServiceActivateTemplateSpec
	isSet bool
}

func (v NullableVcenterNamespacesNamespaceSelfServiceActivateTemplateSpec) Get() *VcenterNamespacesNamespaceSelfServiceActivateTemplateSpec {
	return v.value
}

func (v *NullableVcenterNamespacesNamespaceSelfServiceActivateTemplateSpec) Set(val *VcenterNamespacesNamespaceSelfServiceActivateTemplateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterNamespacesNamespaceSelfServiceActivateTemplateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterNamespacesNamespaceSelfServiceActivateTemplateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterNamespacesNamespaceSelfServiceActivateTemplateSpec(val *VcenterNamespacesNamespaceSelfServiceActivateTemplateSpec) *NullableVcenterNamespacesNamespaceSelfServiceActivateTemplateSpec {
	return &NullableVcenterNamespacesNamespaceSelfServiceActivateTemplateSpec{value: val, isSet: true}
}

func (v NullableVcenterNamespacesNamespaceSelfServiceActivateTemplateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterNamespacesNamespaceSelfServiceActivateTemplateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


