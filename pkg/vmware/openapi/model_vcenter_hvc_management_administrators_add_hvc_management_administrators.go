/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterHvcManagementAdministratorsAddHvcManagementAdministrators struct for VcenterHvcManagementAdministratorsAddHvcManagementAdministrators
type VcenterHvcManagementAdministratorsAddHvcManagementAdministrators struct {
	// Name of the new group to be added. Ex - xyz@abc.com where xyz is the group name and abc.com is the domain name
	GroupName *string `json:"group_name,omitempty"`
}

// NewVcenterHvcManagementAdministratorsAddHvcManagementAdministrators instantiates a new VcenterHvcManagementAdministratorsAddHvcManagementAdministrators object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterHvcManagementAdministratorsAddHvcManagementAdministrators() *VcenterHvcManagementAdministratorsAddHvcManagementAdministrators {
	this := VcenterHvcManagementAdministratorsAddHvcManagementAdministrators{}
	return &this
}

// NewVcenterHvcManagementAdministratorsAddHvcManagementAdministratorsWithDefaults instantiates a new VcenterHvcManagementAdministratorsAddHvcManagementAdministrators object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterHvcManagementAdministratorsAddHvcManagementAdministratorsWithDefaults() *VcenterHvcManagementAdministratorsAddHvcManagementAdministrators {
	this := VcenterHvcManagementAdministratorsAddHvcManagementAdministrators{}
	return &this
}

// GetGroupName returns the GroupName field value if set, zero value otherwise.
func (o *VcenterHvcManagementAdministratorsAddHvcManagementAdministrators) GetGroupName() string {
	if o == nil || o.GroupName == nil {
		var ret string
		return ret
	}
	return *o.GroupName
}

// GetGroupNameOk returns a tuple with the GroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterHvcManagementAdministratorsAddHvcManagementAdministrators) GetGroupNameOk() (*string, bool) {
	if o == nil || o.GroupName == nil {
		return nil, false
	}
	return o.GroupName, true
}

// HasGroupName returns a boolean if a field has been set.
func (o *VcenterHvcManagementAdministratorsAddHvcManagementAdministrators) HasGroupName() bool {
	if o != nil && o.GroupName != nil {
		return true
	}

	return false
}

// SetGroupName gets a reference to the given string and assigns it to the GroupName field.
func (o *VcenterHvcManagementAdministratorsAddHvcManagementAdministrators) SetGroupName(v string) {
	o.GroupName = &v
}

func (o VcenterHvcManagementAdministratorsAddHvcManagementAdministrators) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GroupName != nil {
		toSerialize["group_name"] = o.GroupName
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterHvcManagementAdministratorsAddHvcManagementAdministrators struct {
	value *VcenterHvcManagementAdministratorsAddHvcManagementAdministrators
	isSet bool
}

func (v NullableVcenterHvcManagementAdministratorsAddHvcManagementAdministrators) Get() *VcenterHvcManagementAdministratorsAddHvcManagementAdministrators {
	return v.value
}

func (v *NullableVcenterHvcManagementAdministratorsAddHvcManagementAdministrators) Set(val *VcenterHvcManagementAdministratorsAddHvcManagementAdministrators) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterHvcManagementAdministratorsAddHvcManagementAdministrators) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterHvcManagementAdministratorsAddHvcManagementAdministrators) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterHvcManagementAdministratorsAddHvcManagementAdministrators(val *VcenterHvcManagementAdministratorsAddHvcManagementAdministrators) *NullableVcenterHvcManagementAdministratorsAddHvcManagementAdministrators {
	return &NullableVcenterHvcManagementAdministratorsAddHvcManagementAdministrators{value: val, isSet: true}
}

func (v NullableVcenterHvcManagementAdministratorsAddHvcManagementAdministrators) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterHvcManagementAdministratorsAddHvcManagementAdministrators) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


