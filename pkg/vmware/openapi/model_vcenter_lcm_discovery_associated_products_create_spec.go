/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterLcmDiscoveryAssociatedProductsCreateSpec struct for VcenterLcmDiscoveryAssociatedProductsCreateSpec
type VcenterLcmDiscoveryAssociatedProductsCreateSpec struct {
	// The name of the product.
	ProductName string `json:"product_name"`
	// Current product version.
	Version string `json:"version"`
	// The list of hostname/IPs of the instances of the VMware products deployed in the environment.
	Deployments *[]string `json:"deployments,omitempty"`
}

// NewVcenterLcmDiscoveryAssociatedProductsCreateSpec instantiates a new VcenterLcmDiscoveryAssociatedProductsCreateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterLcmDiscoveryAssociatedProductsCreateSpec(productName string, version string) *VcenterLcmDiscoveryAssociatedProductsCreateSpec {
	this := VcenterLcmDiscoveryAssociatedProductsCreateSpec{}
	this.ProductName = productName
	this.Version = version
	return &this
}

// NewVcenterLcmDiscoveryAssociatedProductsCreateSpecWithDefaults instantiates a new VcenterLcmDiscoveryAssociatedProductsCreateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterLcmDiscoveryAssociatedProductsCreateSpecWithDefaults() *VcenterLcmDiscoveryAssociatedProductsCreateSpec {
	this := VcenterLcmDiscoveryAssociatedProductsCreateSpec{}
	return &this
}

// GetProductName returns the ProductName field value
func (o *VcenterLcmDiscoveryAssociatedProductsCreateSpec) GetProductName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductName
}

// GetProductNameOk returns a tuple with the ProductName field value
// and a boolean to check if the value has been set.
func (o *VcenterLcmDiscoveryAssociatedProductsCreateSpec) GetProductNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ProductName, true
}

// SetProductName sets field value
func (o *VcenterLcmDiscoveryAssociatedProductsCreateSpec) SetProductName(v string) {
	o.ProductName = v
}

// GetVersion returns the Version field value
func (o *VcenterLcmDiscoveryAssociatedProductsCreateSpec) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *VcenterLcmDiscoveryAssociatedProductsCreateSpec) GetVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *VcenterLcmDiscoveryAssociatedProductsCreateSpec) SetVersion(v string) {
	o.Version = v
}

// GetDeployments returns the Deployments field value if set, zero value otherwise.
func (o *VcenterLcmDiscoveryAssociatedProductsCreateSpec) GetDeployments() []string {
	if o == nil || o.Deployments == nil {
		var ret []string
		return ret
	}
	return *o.Deployments
}

// GetDeploymentsOk returns a tuple with the Deployments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterLcmDiscoveryAssociatedProductsCreateSpec) GetDeploymentsOk() (*[]string, bool) {
	if o == nil || o.Deployments == nil {
		return nil, false
	}
	return o.Deployments, true
}

// HasDeployments returns a boolean if a field has been set.
func (o *VcenterLcmDiscoveryAssociatedProductsCreateSpec) HasDeployments() bool {
	if o != nil && o.Deployments != nil {
		return true
	}

	return false
}

// SetDeployments gets a reference to the given []string and assigns it to the Deployments field.
func (o *VcenterLcmDiscoveryAssociatedProductsCreateSpec) SetDeployments(v []string) {
	o.Deployments = &v
}

func (o VcenterLcmDiscoveryAssociatedProductsCreateSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["product_name"] = o.ProductName
	}
	if true {
		toSerialize["version"] = o.Version
	}
	if o.Deployments != nil {
		toSerialize["deployments"] = o.Deployments
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterLcmDiscoveryAssociatedProductsCreateSpec struct {
	value *VcenterLcmDiscoveryAssociatedProductsCreateSpec
	isSet bool
}

func (v NullableVcenterLcmDiscoveryAssociatedProductsCreateSpec) Get() *VcenterLcmDiscoveryAssociatedProductsCreateSpec {
	return v.value
}

func (v *NullableVcenterLcmDiscoveryAssociatedProductsCreateSpec) Set(val *VcenterLcmDiscoveryAssociatedProductsCreateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterLcmDiscoveryAssociatedProductsCreateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterLcmDiscoveryAssociatedProductsCreateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterLcmDiscoveryAssociatedProductsCreateSpec(val *VcenterLcmDiscoveryAssociatedProductsCreateSpec) *NullableVcenterLcmDiscoveryAssociatedProductsCreateSpec {
	return &NullableVcenterLcmDiscoveryAssociatedProductsCreateSpec{value: val, isSet: true}
}

func (v NullableVcenterLcmDiscoveryAssociatedProductsCreateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterLcmDiscoveryAssociatedProductsCreateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


