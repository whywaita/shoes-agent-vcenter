/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterOvfLibraryItemStorageGroupMapping struct for VcenterOvfLibraryItemStorageGroupMapping
type VcenterOvfLibraryItemStorageGroupMapping struct {
	Type VcenterOvfLibraryItemStorageGroupMappingType `json:"type"`
	// Target datastore to be used for the storage group.
	DatastoreId *string `json:"datastore_id,omitempty"`
	// Target storage profile to be used for the storage group.
	StorageProfileId *string `json:"storage_profile_id,omitempty"`
	Provisioning *VcenterOvfDiskProvisioningType `json:"provisioning,omitempty"`
}

// NewVcenterOvfLibraryItemStorageGroupMapping instantiates a new VcenterOvfLibraryItemStorageGroupMapping object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterOvfLibraryItemStorageGroupMapping(type_ VcenterOvfLibraryItemStorageGroupMappingType) *VcenterOvfLibraryItemStorageGroupMapping {
	this := VcenterOvfLibraryItemStorageGroupMapping{}
	this.Type = type_
	return &this
}

// NewVcenterOvfLibraryItemStorageGroupMappingWithDefaults instantiates a new VcenterOvfLibraryItemStorageGroupMapping object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterOvfLibraryItemStorageGroupMappingWithDefaults() *VcenterOvfLibraryItemStorageGroupMapping {
	this := VcenterOvfLibraryItemStorageGroupMapping{}
	return &this
}

// GetType returns the Type field value
func (o *VcenterOvfLibraryItemStorageGroupMapping) GetType() VcenterOvfLibraryItemStorageGroupMappingType {
	if o == nil {
		var ret VcenterOvfLibraryItemStorageGroupMappingType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *VcenterOvfLibraryItemStorageGroupMapping) GetTypeOk() (*VcenterOvfLibraryItemStorageGroupMappingType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *VcenterOvfLibraryItemStorageGroupMapping) SetType(v VcenterOvfLibraryItemStorageGroupMappingType) {
	o.Type = v
}

// GetDatastoreId returns the DatastoreId field value if set, zero value otherwise.
func (o *VcenterOvfLibraryItemStorageGroupMapping) GetDatastoreId() string {
	if o == nil || o.DatastoreId == nil {
		var ret string
		return ret
	}
	return *o.DatastoreId
}

// GetDatastoreIdOk returns a tuple with the DatastoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterOvfLibraryItemStorageGroupMapping) GetDatastoreIdOk() (*string, bool) {
	if o == nil || o.DatastoreId == nil {
		return nil, false
	}
	return o.DatastoreId, true
}

// HasDatastoreId returns a boolean if a field has been set.
func (o *VcenterOvfLibraryItemStorageGroupMapping) HasDatastoreId() bool {
	if o != nil && o.DatastoreId != nil {
		return true
	}

	return false
}

// SetDatastoreId gets a reference to the given string and assigns it to the DatastoreId field.
func (o *VcenterOvfLibraryItemStorageGroupMapping) SetDatastoreId(v string) {
	o.DatastoreId = &v
}

// GetStorageProfileId returns the StorageProfileId field value if set, zero value otherwise.
func (o *VcenterOvfLibraryItemStorageGroupMapping) GetStorageProfileId() string {
	if o == nil || o.StorageProfileId == nil {
		var ret string
		return ret
	}
	return *o.StorageProfileId
}

// GetStorageProfileIdOk returns a tuple with the StorageProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterOvfLibraryItemStorageGroupMapping) GetStorageProfileIdOk() (*string, bool) {
	if o == nil || o.StorageProfileId == nil {
		return nil, false
	}
	return o.StorageProfileId, true
}

// HasStorageProfileId returns a boolean if a field has been set.
func (o *VcenterOvfLibraryItemStorageGroupMapping) HasStorageProfileId() bool {
	if o != nil && o.StorageProfileId != nil {
		return true
	}

	return false
}

// SetStorageProfileId gets a reference to the given string and assigns it to the StorageProfileId field.
func (o *VcenterOvfLibraryItemStorageGroupMapping) SetStorageProfileId(v string) {
	o.StorageProfileId = &v
}

// GetProvisioning returns the Provisioning field value if set, zero value otherwise.
func (o *VcenterOvfLibraryItemStorageGroupMapping) GetProvisioning() VcenterOvfDiskProvisioningType {
	if o == nil || o.Provisioning == nil {
		var ret VcenterOvfDiskProvisioningType
		return ret
	}
	return *o.Provisioning
}

// GetProvisioningOk returns a tuple with the Provisioning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterOvfLibraryItemStorageGroupMapping) GetProvisioningOk() (*VcenterOvfDiskProvisioningType, bool) {
	if o == nil || o.Provisioning == nil {
		return nil, false
	}
	return o.Provisioning, true
}

// HasProvisioning returns a boolean if a field has been set.
func (o *VcenterOvfLibraryItemStorageGroupMapping) HasProvisioning() bool {
	if o != nil && o.Provisioning != nil {
		return true
	}

	return false
}

// SetProvisioning gets a reference to the given VcenterOvfDiskProvisioningType and assigns it to the Provisioning field.
func (o *VcenterOvfLibraryItemStorageGroupMapping) SetProvisioning(v VcenterOvfDiskProvisioningType) {
	o.Provisioning = &v
}

func (o VcenterOvfLibraryItemStorageGroupMapping) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if o.DatastoreId != nil {
		toSerialize["datastore_id"] = o.DatastoreId
	}
	if o.StorageProfileId != nil {
		toSerialize["storage_profile_id"] = o.StorageProfileId
	}
	if o.Provisioning != nil {
		toSerialize["provisioning"] = o.Provisioning
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterOvfLibraryItemStorageGroupMapping struct {
	value *VcenterOvfLibraryItemStorageGroupMapping
	isSet bool
}

func (v NullableVcenterOvfLibraryItemStorageGroupMapping) Get() *VcenterOvfLibraryItemStorageGroupMapping {
	return v.value
}

func (v *NullableVcenterOvfLibraryItemStorageGroupMapping) Set(val *VcenterOvfLibraryItemStorageGroupMapping) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterOvfLibraryItemStorageGroupMapping) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterOvfLibraryItemStorageGroupMapping) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterOvfLibraryItemStorageGroupMapping(val *VcenterOvfLibraryItemStorageGroupMapping) *NullableVcenterOvfLibraryItemStorageGroupMapping {
	return &NullableVcenterOvfLibraryItemStorageGroupMapping{value: val, isSet: true}
}

func (v NullableVcenterOvfLibraryItemStorageGroupMapping) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterOvfLibraryItemStorageGroupMapping) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


