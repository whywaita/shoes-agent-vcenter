/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterTrustedInfrastructurePrincipalInfo struct for VcenterTrustedInfrastructurePrincipalInfo
type VcenterTrustedInfrastructurePrincipalInfo struct {
	// The certificates used by the STS to sign tokens for this vCenter.
	Certificates []VcenterTrustedInfrastructureX509CertChain `json:"certificates"`
	// The service which created and signed the security token.
	Issuer string `json:"issuer"`
	Principal VcenterTrustedInfrastructureStsPrincipal `json:"principal"`
	// The user-friednly name of the vCenter.
	Name string `json:"name"`
}

// NewVcenterTrustedInfrastructurePrincipalInfo instantiates a new VcenterTrustedInfrastructurePrincipalInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterTrustedInfrastructurePrincipalInfo(certificates []VcenterTrustedInfrastructureX509CertChain, issuer string, principal VcenterTrustedInfrastructureStsPrincipal, name string) *VcenterTrustedInfrastructurePrincipalInfo {
	this := VcenterTrustedInfrastructurePrincipalInfo{}
	this.Certificates = certificates
	this.Issuer = issuer
	this.Principal = principal
	this.Name = name
	return &this
}

// NewVcenterTrustedInfrastructurePrincipalInfoWithDefaults instantiates a new VcenterTrustedInfrastructurePrincipalInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterTrustedInfrastructurePrincipalInfoWithDefaults() *VcenterTrustedInfrastructurePrincipalInfo {
	this := VcenterTrustedInfrastructurePrincipalInfo{}
	return &this
}

// GetCertificates returns the Certificates field value
func (o *VcenterTrustedInfrastructurePrincipalInfo) GetCertificates() []VcenterTrustedInfrastructureX509CertChain {
	if o == nil {
		var ret []VcenterTrustedInfrastructureX509CertChain
		return ret
	}

	return o.Certificates
}

// GetCertificatesOk returns a tuple with the Certificates field value
// and a boolean to check if the value has been set.
func (o *VcenterTrustedInfrastructurePrincipalInfo) GetCertificatesOk() (*[]VcenterTrustedInfrastructureX509CertChain, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Certificates, true
}

// SetCertificates sets field value
func (o *VcenterTrustedInfrastructurePrincipalInfo) SetCertificates(v []VcenterTrustedInfrastructureX509CertChain) {
	o.Certificates = v
}

// GetIssuer returns the Issuer field value
func (o *VcenterTrustedInfrastructurePrincipalInfo) GetIssuer() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Issuer
}

// GetIssuerOk returns a tuple with the Issuer field value
// and a boolean to check if the value has been set.
func (o *VcenterTrustedInfrastructurePrincipalInfo) GetIssuerOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Issuer, true
}

// SetIssuer sets field value
func (o *VcenterTrustedInfrastructurePrincipalInfo) SetIssuer(v string) {
	o.Issuer = v
}

// GetPrincipal returns the Principal field value
func (o *VcenterTrustedInfrastructurePrincipalInfo) GetPrincipal() VcenterTrustedInfrastructureStsPrincipal {
	if o == nil {
		var ret VcenterTrustedInfrastructureStsPrincipal
		return ret
	}

	return o.Principal
}

// GetPrincipalOk returns a tuple with the Principal field value
// and a boolean to check if the value has been set.
func (o *VcenterTrustedInfrastructurePrincipalInfo) GetPrincipalOk() (*VcenterTrustedInfrastructureStsPrincipal, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Principal, true
}

// SetPrincipal sets field value
func (o *VcenterTrustedInfrastructurePrincipalInfo) SetPrincipal(v VcenterTrustedInfrastructureStsPrincipal) {
	o.Principal = v
}

// GetName returns the Name field value
func (o *VcenterTrustedInfrastructurePrincipalInfo) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *VcenterTrustedInfrastructurePrincipalInfo) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *VcenterTrustedInfrastructurePrincipalInfo) SetName(v string) {
	o.Name = v
}

func (o VcenterTrustedInfrastructurePrincipalInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["certificates"] = o.Certificates
	}
	if true {
		toSerialize["issuer"] = o.Issuer
	}
	if true {
		toSerialize["principal"] = o.Principal
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterTrustedInfrastructurePrincipalInfo struct {
	value *VcenterTrustedInfrastructurePrincipalInfo
	isSet bool
}

func (v NullableVcenterTrustedInfrastructurePrincipalInfo) Get() *VcenterTrustedInfrastructurePrincipalInfo {
	return v.value
}

func (v *NullableVcenterTrustedInfrastructurePrincipalInfo) Set(val *VcenterTrustedInfrastructurePrincipalInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterTrustedInfrastructurePrincipalInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterTrustedInfrastructurePrincipalInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterTrustedInfrastructurePrincipalInfo(val *VcenterTrustedInfrastructurePrincipalInfo) *NullableVcenterTrustedInfrastructurePrincipalInfo {
	return &NullableVcenterTrustedInfrastructurePrincipalInfo{value: val, isSet: true}
}

func (v NullableVcenterTrustedInfrastructurePrincipalInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterTrustedInfrastructurePrincipalInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


