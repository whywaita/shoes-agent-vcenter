/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// VcenterVmGuestProcessesSummary struct for VcenterVmGuestProcessesSummary
type VcenterVmGuestProcessesSummary struct {
	// The process name.
	Name string `json:"name"`
	// The process ID.
	Pid int64 `json:"pid"`
	// The process owner.
	Owner string `json:"owner"`
	// The full command line of the process.
	Command string `json:"command"`
	// The start time of the process.
	Started time.Time `json:"started"`
}

// NewVcenterVmGuestProcessesSummary instantiates a new VcenterVmGuestProcessesSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterVmGuestProcessesSummary(name string, pid int64, owner string, command string, started time.Time) *VcenterVmGuestProcessesSummary {
	this := VcenterVmGuestProcessesSummary{}
	this.Name = name
	this.Pid = pid
	this.Owner = owner
	this.Command = command
	this.Started = started
	return &this
}

// NewVcenterVmGuestProcessesSummaryWithDefaults instantiates a new VcenterVmGuestProcessesSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterVmGuestProcessesSummaryWithDefaults() *VcenterVmGuestProcessesSummary {
	this := VcenterVmGuestProcessesSummary{}
	return &this
}

// GetName returns the Name field value
func (o *VcenterVmGuestProcessesSummary) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *VcenterVmGuestProcessesSummary) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *VcenterVmGuestProcessesSummary) SetName(v string) {
	o.Name = v
}

// GetPid returns the Pid field value
func (o *VcenterVmGuestProcessesSummary) GetPid() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Pid
}

// GetPidOk returns a tuple with the Pid field value
// and a boolean to check if the value has been set.
func (o *VcenterVmGuestProcessesSummary) GetPidOk() (*int64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Pid, true
}

// SetPid sets field value
func (o *VcenterVmGuestProcessesSummary) SetPid(v int64) {
	o.Pid = v
}

// GetOwner returns the Owner field value
func (o *VcenterVmGuestProcessesSummary) GetOwner() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value
// and a boolean to check if the value has been set.
func (o *VcenterVmGuestProcessesSummary) GetOwnerOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Owner, true
}

// SetOwner sets field value
func (o *VcenterVmGuestProcessesSummary) SetOwner(v string) {
	o.Owner = v
}

// GetCommand returns the Command field value
func (o *VcenterVmGuestProcessesSummary) GetCommand() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Command
}

// GetCommandOk returns a tuple with the Command field value
// and a boolean to check if the value has been set.
func (o *VcenterVmGuestProcessesSummary) GetCommandOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Command, true
}

// SetCommand sets field value
func (o *VcenterVmGuestProcessesSummary) SetCommand(v string) {
	o.Command = v
}

// GetStarted returns the Started field value
func (o *VcenterVmGuestProcessesSummary) GetStarted() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Started
}

// GetStartedOk returns a tuple with the Started field value
// and a boolean to check if the value has been set.
func (o *VcenterVmGuestProcessesSummary) GetStartedOk() (*time.Time, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Started, true
}

// SetStarted sets field value
func (o *VcenterVmGuestProcessesSummary) SetStarted(v time.Time) {
	o.Started = v
}

func (o VcenterVmGuestProcessesSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["pid"] = o.Pid
	}
	if true {
		toSerialize["owner"] = o.Owner
	}
	if true {
		toSerialize["command"] = o.Command
	}
	if true {
		toSerialize["started"] = o.Started
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterVmGuestProcessesSummary struct {
	value *VcenterVmGuestProcessesSummary
	isSet bool
}

func (v NullableVcenterVmGuestProcessesSummary) Get() *VcenterVmGuestProcessesSummary {
	return v.value
}

func (v *NullableVcenterVmGuestProcessesSummary) Set(val *VcenterVmGuestProcessesSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterVmGuestProcessesSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterVmGuestProcessesSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterVmGuestProcessesSummary(val *VcenterVmGuestProcessesSummary) *NullableVcenterVmGuestProcessesSummary {
	return &NullableVcenterVmGuestProcessesSummary{value: val, isSet: true}
}

func (v NullableVcenterVmGuestProcessesSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterVmGuestProcessesSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


