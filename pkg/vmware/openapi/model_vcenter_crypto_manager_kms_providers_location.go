/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterCryptoManagerKmsProvidersLocation struct for VcenterCryptoManagerKmsProvidersLocation
type VcenterCryptoManagerKmsProvidersLocation struct {
	// Provider configuration download URL
	Url string `json:"url"`
	DownloadToken VcenterCryptoManagerKmsProvidersToken `json:"download_token"`
}

// NewVcenterCryptoManagerKmsProvidersLocation instantiates a new VcenterCryptoManagerKmsProvidersLocation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterCryptoManagerKmsProvidersLocation(url string, downloadToken VcenterCryptoManagerKmsProvidersToken) *VcenterCryptoManagerKmsProvidersLocation {
	this := VcenterCryptoManagerKmsProvidersLocation{}
	this.Url = url
	this.DownloadToken = downloadToken
	return &this
}

// NewVcenterCryptoManagerKmsProvidersLocationWithDefaults instantiates a new VcenterCryptoManagerKmsProvidersLocation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterCryptoManagerKmsProvidersLocationWithDefaults() *VcenterCryptoManagerKmsProvidersLocation {
	this := VcenterCryptoManagerKmsProvidersLocation{}
	return &this
}

// GetUrl returns the Url field value
func (o *VcenterCryptoManagerKmsProvidersLocation) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *VcenterCryptoManagerKmsProvidersLocation) GetUrlOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *VcenterCryptoManagerKmsProvidersLocation) SetUrl(v string) {
	o.Url = v
}

// GetDownloadToken returns the DownloadToken field value
func (o *VcenterCryptoManagerKmsProvidersLocation) GetDownloadToken() VcenterCryptoManagerKmsProvidersToken {
	if o == nil {
		var ret VcenterCryptoManagerKmsProvidersToken
		return ret
	}

	return o.DownloadToken
}

// GetDownloadTokenOk returns a tuple with the DownloadToken field value
// and a boolean to check if the value has been set.
func (o *VcenterCryptoManagerKmsProvidersLocation) GetDownloadTokenOk() (*VcenterCryptoManagerKmsProvidersToken, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DownloadToken, true
}

// SetDownloadToken sets field value
func (o *VcenterCryptoManagerKmsProvidersLocation) SetDownloadToken(v VcenterCryptoManagerKmsProvidersToken) {
	o.DownloadToken = v
}

func (o VcenterCryptoManagerKmsProvidersLocation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["download_token"] = o.DownloadToken
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterCryptoManagerKmsProvidersLocation struct {
	value *VcenterCryptoManagerKmsProvidersLocation
	isSet bool
}

func (v NullableVcenterCryptoManagerKmsProvidersLocation) Get() *VcenterCryptoManagerKmsProvidersLocation {
	return v.value
}

func (v *NullableVcenterCryptoManagerKmsProvidersLocation) Set(val *VcenterCryptoManagerKmsProvidersLocation) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterCryptoManagerKmsProvidersLocation) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterCryptoManagerKmsProvidersLocation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterCryptoManagerKmsProvidersLocation(val *VcenterCryptoManagerKmsProvidersLocation) *NullableVcenterCryptoManagerKmsProvidersLocation {
	return &NullableVcenterCryptoManagerKmsProvidersLocation{value: val, isSet: true}
}

func (v NullableVcenterCryptoManagerKmsProvidersLocation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterCryptoManagerKmsProvidersLocation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


