/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterGuestCustomizationSpecsSpec struct for VcenterGuestCustomizationSpecsSpec
type VcenterGuestCustomizationSpecsSpec struct {
	// The fingerprint is a unique identifier for a given version of the configuration. Each change to the configuration will update this value. A client cannot change this value. If specified when updating a specification, the changes will only be applied if the current fingerprint matches the specified fingerprint. This field can be used to guard against updates that has happened between the specification content was read and until it is applied.
	Fingerprint string `json:"fingerprint"`
	Spec VcenterGuestCustomizationSpec `json:"spec"`
	// Description of the specification.
	Description string `json:"description"`
	// Name of the specification.
	Name string `json:"name"`
}

// NewVcenterGuestCustomizationSpecsSpec instantiates a new VcenterGuestCustomizationSpecsSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterGuestCustomizationSpecsSpec(fingerprint string, spec VcenterGuestCustomizationSpec, description string, name string) *VcenterGuestCustomizationSpecsSpec {
	this := VcenterGuestCustomizationSpecsSpec{}
	this.Fingerprint = fingerprint
	this.Spec = spec
	this.Description = description
	this.Name = name
	return &this
}

// NewVcenterGuestCustomizationSpecsSpecWithDefaults instantiates a new VcenterGuestCustomizationSpecsSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterGuestCustomizationSpecsSpecWithDefaults() *VcenterGuestCustomizationSpecsSpec {
	this := VcenterGuestCustomizationSpecsSpec{}
	return &this
}

// GetFingerprint returns the Fingerprint field value
func (o *VcenterGuestCustomizationSpecsSpec) GetFingerprint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Fingerprint
}

// GetFingerprintOk returns a tuple with the Fingerprint field value
// and a boolean to check if the value has been set.
func (o *VcenterGuestCustomizationSpecsSpec) GetFingerprintOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Fingerprint, true
}

// SetFingerprint sets field value
func (o *VcenterGuestCustomizationSpecsSpec) SetFingerprint(v string) {
	o.Fingerprint = v
}

// GetSpec returns the Spec field value
func (o *VcenterGuestCustomizationSpecsSpec) GetSpec() VcenterGuestCustomizationSpec {
	if o == nil {
		var ret VcenterGuestCustomizationSpec
		return ret
	}

	return o.Spec
}

// GetSpecOk returns a tuple with the Spec field value
// and a boolean to check if the value has been set.
func (o *VcenterGuestCustomizationSpecsSpec) GetSpecOk() (*VcenterGuestCustomizationSpec, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Spec, true
}

// SetSpec sets field value
func (o *VcenterGuestCustomizationSpecsSpec) SetSpec(v VcenterGuestCustomizationSpec) {
	o.Spec = v
}

// GetDescription returns the Description field value
func (o *VcenterGuestCustomizationSpecsSpec) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *VcenterGuestCustomizationSpecsSpec) GetDescriptionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *VcenterGuestCustomizationSpecsSpec) SetDescription(v string) {
	o.Description = v
}

// GetName returns the Name field value
func (o *VcenterGuestCustomizationSpecsSpec) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *VcenterGuestCustomizationSpecsSpec) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *VcenterGuestCustomizationSpecsSpec) SetName(v string) {
	o.Name = v
}

func (o VcenterGuestCustomizationSpecsSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["fingerprint"] = o.Fingerprint
	}
	if true {
		toSerialize["spec"] = o.Spec
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterGuestCustomizationSpecsSpec struct {
	value *VcenterGuestCustomizationSpecsSpec
	isSet bool
}

func (v NullableVcenterGuestCustomizationSpecsSpec) Get() *VcenterGuestCustomizationSpecsSpec {
	return v.value
}

func (v *NullableVcenterGuestCustomizationSpecsSpec) Set(val *VcenterGuestCustomizationSpecsSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterGuestCustomizationSpecsSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterGuestCustomizationSpecsSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterGuestCustomizationSpecsSpec(val *VcenterGuestCustomizationSpecsSpec) *NullableVcenterGuestCustomizationSpecsSpec {
	return &NullableVcenterGuestCustomizationSpecsSpec{value: val, isSet: true}
}

func (v NullableVcenterGuestCustomizationSpecsSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterGuestCustomizationSpecsSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


