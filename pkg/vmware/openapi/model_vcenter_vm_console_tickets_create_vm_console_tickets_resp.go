/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterVmConsoleTicketsCreateVmConsoleTicketsResp struct for VcenterVmConsoleTicketsCreateVmConsoleTicketsResp
type VcenterVmConsoleTicketsCreateVmConsoleTicketsResp struct {
	Value VcenterVmConsoleTicketsSummary `json:"value"`
}

// NewVcenterVmConsoleTicketsCreateVmConsoleTicketsResp instantiates a new VcenterVmConsoleTicketsCreateVmConsoleTicketsResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterVmConsoleTicketsCreateVmConsoleTicketsResp(value VcenterVmConsoleTicketsSummary) *VcenterVmConsoleTicketsCreateVmConsoleTicketsResp {
	this := VcenterVmConsoleTicketsCreateVmConsoleTicketsResp{}
	this.Value = value
	return &this
}

// NewVcenterVmConsoleTicketsCreateVmConsoleTicketsRespWithDefaults instantiates a new VcenterVmConsoleTicketsCreateVmConsoleTicketsResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterVmConsoleTicketsCreateVmConsoleTicketsRespWithDefaults() *VcenterVmConsoleTicketsCreateVmConsoleTicketsResp {
	this := VcenterVmConsoleTicketsCreateVmConsoleTicketsResp{}
	return &this
}

// GetValue returns the Value field value
func (o *VcenterVmConsoleTicketsCreateVmConsoleTicketsResp) GetValue() VcenterVmConsoleTicketsSummary {
	if o == nil {
		var ret VcenterVmConsoleTicketsSummary
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *VcenterVmConsoleTicketsCreateVmConsoleTicketsResp) GetValueOk() (*VcenterVmConsoleTicketsSummary, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *VcenterVmConsoleTicketsCreateVmConsoleTicketsResp) SetValue(v VcenterVmConsoleTicketsSummary) {
	o.Value = v
}

func (o VcenterVmConsoleTicketsCreateVmConsoleTicketsResp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterVmConsoleTicketsCreateVmConsoleTicketsResp struct {
	value *VcenterVmConsoleTicketsCreateVmConsoleTicketsResp
	isSet bool
}

func (v NullableVcenterVmConsoleTicketsCreateVmConsoleTicketsResp) Get() *VcenterVmConsoleTicketsCreateVmConsoleTicketsResp {
	return v.value
}

func (v *NullableVcenterVmConsoleTicketsCreateVmConsoleTicketsResp) Set(val *VcenterVmConsoleTicketsCreateVmConsoleTicketsResp) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterVmConsoleTicketsCreateVmConsoleTicketsResp) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterVmConsoleTicketsCreateVmConsoleTicketsResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterVmConsoleTicketsCreateVmConsoleTicketsResp(val *VcenterVmConsoleTicketsCreateVmConsoleTicketsResp) *NullableVcenterVmConsoleTicketsCreateVmConsoleTicketsResp {
	return &NullableVcenterVmConsoleTicketsCreateVmConsoleTicketsResp{value: val, isSet: true}
}

func (v NullableVcenterVmConsoleTicketsCreateVmConsoleTicketsResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterVmConsoleTicketsCreateVmConsoleTicketsResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


