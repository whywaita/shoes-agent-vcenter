/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterDeploymentSourceInfo struct for VcenterDeploymentSourceInfo
type VcenterDeploymentSourceInfo struct {
	// The IP address or DNS resolvable name of the source vCenter Server.
	Hostname string `json:"hostname"`
	// Source vCenter Server version.
	Version string `json:"version"`
	DeploymentType VcenterDeploymentApplianceType `json:"deployment_type"`
	DeploymentSize VcenterDeploymentApplianceSize `json:"deployment_size"`
	// The SSO domain name of the source vCenter Server.
	SsoDomainName string `json:"sso_domain_name"`
	// The domain name of the Active Directory server to which the source vCenter Server is joined.
	ActiveDirectoryDomain string `json:"active_directory_domain"`
	// IP addresses of the DNS servers of the Active Directory server.
	DnsServers []string `json:"dns_servers"`
	DataMigrationInfo *VcenterDeploymentDataMigrationInfo `json:"data_migration_info,omitempty"`
}

// NewVcenterDeploymentSourceInfo instantiates a new VcenterDeploymentSourceInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterDeploymentSourceInfo(hostname string, version string, deploymentType VcenterDeploymentApplianceType, deploymentSize VcenterDeploymentApplianceSize, ssoDomainName string, activeDirectoryDomain string, dnsServers []string) *VcenterDeploymentSourceInfo {
	this := VcenterDeploymentSourceInfo{}
	this.Hostname = hostname
	this.Version = version
	this.DeploymentType = deploymentType
	this.DeploymentSize = deploymentSize
	this.SsoDomainName = ssoDomainName
	this.ActiveDirectoryDomain = activeDirectoryDomain
	this.DnsServers = dnsServers
	return &this
}

// NewVcenterDeploymentSourceInfoWithDefaults instantiates a new VcenterDeploymentSourceInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterDeploymentSourceInfoWithDefaults() *VcenterDeploymentSourceInfo {
	this := VcenterDeploymentSourceInfo{}
	return &this
}

// GetHostname returns the Hostname field value
func (o *VcenterDeploymentSourceInfo) GetHostname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value
// and a boolean to check if the value has been set.
func (o *VcenterDeploymentSourceInfo) GetHostnameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Hostname, true
}

// SetHostname sets field value
func (o *VcenterDeploymentSourceInfo) SetHostname(v string) {
	o.Hostname = v
}

// GetVersion returns the Version field value
func (o *VcenterDeploymentSourceInfo) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *VcenterDeploymentSourceInfo) GetVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *VcenterDeploymentSourceInfo) SetVersion(v string) {
	o.Version = v
}

// GetDeploymentType returns the DeploymentType field value
func (o *VcenterDeploymentSourceInfo) GetDeploymentType() VcenterDeploymentApplianceType {
	if o == nil {
		var ret VcenterDeploymentApplianceType
		return ret
	}

	return o.DeploymentType
}

// GetDeploymentTypeOk returns a tuple with the DeploymentType field value
// and a boolean to check if the value has been set.
func (o *VcenterDeploymentSourceInfo) GetDeploymentTypeOk() (*VcenterDeploymentApplianceType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DeploymentType, true
}

// SetDeploymentType sets field value
func (o *VcenterDeploymentSourceInfo) SetDeploymentType(v VcenterDeploymentApplianceType) {
	o.DeploymentType = v
}

// GetDeploymentSize returns the DeploymentSize field value
func (o *VcenterDeploymentSourceInfo) GetDeploymentSize() VcenterDeploymentApplianceSize {
	if o == nil {
		var ret VcenterDeploymentApplianceSize
		return ret
	}

	return o.DeploymentSize
}

// GetDeploymentSizeOk returns a tuple with the DeploymentSize field value
// and a boolean to check if the value has been set.
func (o *VcenterDeploymentSourceInfo) GetDeploymentSizeOk() (*VcenterDeploymentApplianceSize, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DeploymentSize, true
}

// SetDeploymentSize sets field value
func (o *VcenterDeploymentSourceInfo) SetDeploymentSize(v VcenterDeploymentApplianceSize) {
	o.DeploymentSize = v
}

// GetSsoDomainName returns the SsoDomainName field value
func (o *VcenterDeploymentSourceInfo) GetSsoDomainName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SsoDomainName
}

// GetSsoDomainNameOk returns a tuple with the SsoDomainName field value
// and a boolean to check if the value has been set.
func (o *VcenterDeploymentSourceInfo) GetSsoDomainNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SsoDomainName, true
}

// SetSsoDomainName sets field value
func (o *VcenterDeploymentSourceInfo) SetSsoDomainName(v string) {
	o.SsoDomainName = v
}

// GetActiveDirectoryDomain returns the ActiveDirectoryDomain field value
func (o *VcenterDeploymentSourceInfo) GetActiveDirectoryDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActiveDirectoryDomain
}

// GetActiveDirectoryDomainOk returns a tuple with the ActiveDirectoryDomain field value
// and a boolean to check if the value has been set.
func (o *VcenterDeploymentSourceInfo) GetActiveDirectoryDomainOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ActiveDirectoryDomain, true
}

// SetActiveDirectoryDomain sets field value
func (o *VcenterDeploymentSourceInfo) SetActiveDirectoryDomain(v string) {
	o.ActiveDirectoryDomain = v
}

// GetDnsServers returns the DnsServers field value
func (o *VcenterDeploymentSourceInfo) GetDnsServers() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.DnsServers
}

// GetDnsServersOk returns a tuple with the DnsServers field value
// and a boolean to check if the value has been set.
func (o *VcenterDeploymentSourceInfo) GetDnsServersOk() (*[]string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DnsServers, true
}

// SetDnsServers sets field value
func (o *VcenterDeploymentSourceInfo) SetDnsServers(v []string) {
	o.DnsServers = v
}

// GetDataMigrationInfo returns the DataMigrationInfo field value if set, zero value otherwise.
func (o *VcenterDeploymentSourceInfo) GetDataMigrationInfo() VcenterDeploymentDataMigrationInfo {
	if o == nil || o.DataMigrationInfo == nil {
		var ret VcenterDeploymentDataMigrationInfo
		return ret
	}
	return *o.DataMigrationInfo
}

// GetDataMigrationInfoOk returns a tuple with the DataMigrationInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterDeploymentSourceInfo) GetDataMigrationInfoOk() (*VcenterDeploymentDataMigrationInfo, bool) {
	if o == nil || o.DataMigrationInfo == nil {
		return nil, false
	}
	return o.DataMigrationInfo, true
}

// HasDataMigrationInfo returns a boolean if a field has been set.
func (o *VcenterDeploymentSourceInfo) HasDataMigrationInfo() bool {
	if o != nil && o.DataMigrationInfo != nil {
		return true
	}

	return false
}

// SetDataMigrationInfo gets a reference to the given VcenterDeploymentDataMigrationInfo and assigns it to the DataMigrationInfo field.
func (o *VcenterDeploymentSourceInfo) SetDataMigrationInfo(v VcenterDeploymentDataMigrationInfo) {
	o.DataMigrationInfo = &v
}

func (o VcenterDeploymentSourceInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["hostname"] = o.Hostname
	}
	if true {
		toSerialize["version"] = o.Version
	}
	if true {
		toSerialize["deployment_type"] = o.DeploymentType
	}
	if true {
		toSerialize["deployment_size"] = o.DeploymentSize
	}
	if true {
		toSerialize["sso_domain_name"] = o.SsoDomainName
	}
	if true {
		toSerialize["active_directory_domain"] = o.ActiveDirectoryDomain
	}
	if true {
		toSerialize["dns_servers"] = o.DnsServers
	}
	if o.DataMigrationInfo != nil {
		toSerialize["data_migration_info"] = o.DataMigrationInfo
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterDeploymentSourceInfo struct {
	value *VcenterDeploymentSourceInfo
	isSet bool
}

func (v NullableVcenterDeploymentSourceInfo) Get() *VcenterDeploymentSourceInfo {
	return v.value
}

func (v *NullableVcenterDeploymentSourceInfo) Set(val *VcenterDeploymentSourceInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterDeploymentSourceInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterDeploymentSourceInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterDeploymentSourceInfo(val *VcenterDeploymentSourceInfo) *NullableVcenterDeploymentSourceInfo {
	return &NullableVcenterDeploymentSourceInfo{value: val, isSet: true}
}

func (v NullableVcenterDeploymentSourceInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterDeploymentSourceInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


