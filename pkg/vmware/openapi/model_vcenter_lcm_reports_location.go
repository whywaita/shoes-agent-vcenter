/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterLcmReportsLocation struct for VcenterLcmReportsLocation
type VcenterLcmReportsLocation struct {
	// Report Download URI.
	Uri string `json:"uri"`
	DownloadFileToken VcenterLcmReportsToken `json:"download_file_token"`
}

// NewVcenterLcmReportsLocation instantiates a new VcenterLcmReportsLocation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterLcmReportsLocation(uri string, downloadFileToken VcenterLcmReportsToken) *VcenterLcmReportsLocation {
	this := VcenterLcmReportsLocation{}
	this.Uri = uri
	this.DownloadFileToken = downloadFileToken
	return &this
}

// NewVcenterLcmReportsLocationWithDefaults instantiates a new VcenterLcmReportsLocation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterLcmReportsLocationWithDefaults() *VcenterLcmReportsLocation {
	this := VcenterLcmReportsLocation{}
	return &this
}

// GetUri returns the Uri field value
func (o *VcenterLcmReportsLocation) GetUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uri
}

// GetUriOk returns a tuple with the Uri field value
// and a boolean to check if the value has been set.
func (o *VcenterLcmReportsLocation) GetUriOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Uri, true
}

// SetUri sets field value
func (o *VcenterLcmReportsLocation) SetUri(v string) {
	o.Uri = v
}

// GetDownloadFileToken returns the DownloadFileToken field value
func (o *VcenterLcmReportsLocation) GetDownloadFileToken() VcenterLcmReportsToken {
	if o == nil {
		var ret VcenterLcmReportsToken
		return ret
	}

	return o.DownloadFileToken
}

// GetDownloadFileTokenOk returns a tuple with the DownloadFileToken field value
// and a boolean to check if the value has been set.
func (o *VcenterLcmReportsLocation) GetDownloadFileTokenOk() (*VcenterLcmReportsToken, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DownloadFileToken, true
}

// SetDownloadFileToken sets field value
func (o *VcenterLcmReportsLocation) SetDownloadFileToken(v VcenterLcmReportsToken) {
	o.DownloadFileToken = v
}

func (o VcenterLcmReportsLocation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["uri"] = o.Uri
	}
	if true {
		toSerialize["download_file_token"] = o.DownloadFileToken
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterLcmReportsLocation struct {
	value *VcenterLcmReportsLocation
	isSet bool
}

func (v NullableVcenterLcmReportsLocation) Get() *VcenterLcmReportsLocation {
	return v.value
}

func (v *NullableVcenterLcmReportsLocation) Set(val *VcenterLcmReportsLocation) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterLcmReportsLocation) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterLcmReportsLocation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterLcmReportsLocation(val *VcenterLcmReportsLocation) *NullableVcenterLcmReportsLocation {
	return &NullableVcenterLcmReportsLocation{value: val, isSet: true}
}

func (v NullableVcenterLcmReportsLocation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterLcmReportsLocation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


