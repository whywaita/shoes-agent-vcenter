/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterCertificateManagementVcenterTlsCsrCreateCertificateManagementVcenterTlsCsrResp struct for VcenterCertificateManagementVcenterTlsCsrCreateCertificateManagementVcenterTlsCsrResp
type VcenterCertificateManagementVcenterTlsCsrCreateCertificateManagementVcenterTlsCsrResp struct {
	Value VcenterCertificateManagementVcenterTlsCsrInfo `json:"value"`
}

// NewVcenterCertificateManagementVcenterTlsCsrCreateCertificateManagementVcenterTlsCsrResp instantiates a new VcenterCertificateManagementVcenterTlsCsrCreateCertificateManagementVcenterTlsCsrResp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterCertificateManagementVcenterTlsCsrCreateCertificateManagementVcenterTlsCsrResp(value VcenterCertificateManagementVcenterTlsCsrInfo) *VcenterCertificateManagementVcenterTlsCsrCreateCertificateManagementVcenterTlsCsrResp {
	this := VcenterCertificateManagementVcenterTlsCsrCreateCertificateManagementVcenterTlsCsrResp{}
	this.Value = value
	return &this
}

// NewVcenterCertificateManagementVcenterTlsCsrCreateCertificateManagementVcenterTlsCsrRespWithDefaults instantiates a new VcenterCertificateManagementVcenterTlsCsrCreateCertificateManagementVcenterTlsCsrResp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterCertificateManagementVcenterTlsCsrCreateCertificateManagementVcenterTlsCsrRespWithDefaults() *VcenterCertificateManagementVcenterTlsCsrCreateCertificateManagementVcenterTlsCsrResp {
	this := VcenterCertificateManagementVcenterTlsCsrCreateCertificateManagementVcenterTlsCsrResp{}
	return &this
}

// GetValue returns the Value field value
func (o *VcenterCertificateManagementVcenterTlsCsrCreateCertificateManagementVcenterTlsCsrResp) GetValue() VcenterCertificateManagementVcenterTlsCsrInfo {
	if o == nil {
		var ret VcenterCertificateManagementVcenterTlsCsrInfo
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *VcenterCertificateManagementVcenterTlsCsrCreateCertificateManagementVcenterTlsCsrResp) GetValueOk() (*VcenterCertificateManagementVcenterTlsCsrInfo, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *VcenterCertificateManagementVcenterTlsCsrCreateCertificateManagementVcenterTlsCsrResp) SetValue(v VcenterCertificateManagementVcenterTlsCsrInfo) {
	o.Value = v
}

func (o VcenterCertificateManagementVcenterTlsCsrCreateCertificateManagementVcenterTlsCsrResp) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterCertificateManagementVcenterTlsCsrCreateCertificateManagementVcenterTlsCsrResp struct {
	value *VcenterCertificateManagementVcenterTlsCsrCreateCertificateManagementVcenterTlsCsrResp
	isSet bool
}

func (v NullableVcenterCertificateManagementVcenterTlsCsrCreateCertificateManagementVcenterTlsCsrResp) Get() *VcenterCertificateManagementVcenterTlsCsrCreateCertificateManagementVcenterTlsCsrResp {
	return v.value
}

func (v *NullableVcenterCertificateManagementVcenterTlsCsrCreateCertificateManagementVcenterTlsCsrResp) Set(val *VcenterCertificateManagementVcenterTlsCsrCreateCertificateManagementVcenterTlsCsrResp) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterCertificateManagementVcenterTlsCsrCreateCertificateManagementVcenterTlsCsrResp) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterCertificateManagementVcenterTlsCsrCreateCertificateManagementVcenterTlsCsrResp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterCertificateManagementVcenterTlsCsrCreateCertificateManagementVcenterTlsCsrResp(val *VcenterCertificateManagementVcenterTlsCsrCreateCertificateManagementVcenterTlsCsrResp) *NullableVcenterCertificateManagementVcenterTlsCsrCreateCertificateManagementVcenterTlsCsrResp {
	return &NullableVcenterCertificateManagementVcenterTlsCsrCreateCertificateManagementVcenterTlsCsrResp{value: val, isSet: true}
}

func (v NullableVcenterCertificateManagementVcenterTlsCsrCreateCertificateManagementVcenterTlsCsrResp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterCertificateManagementVcenterTlsCsrCreateCertificateManagementVcenterTlsCsrResp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


