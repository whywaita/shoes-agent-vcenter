/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpec struct for VcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpec
type VcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpec struct {
	Type VcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpecSourceType `json:"type"`
	// The service's unique ID. This field is optional and it is only relevant when the value of Services.CreateSpec.type is SERVICE. When clients pass a value of this structure as a parameter, the field must be an identifier for the resource type: vcenter.trusted_infrastructure.attestation.Service. When operations return a value of this structure as a result, the field will be an identifier for the resource type: vcenter.trusted_infrastructure.attestation.Service.
	Service *string `json:"service,omitempty"`
	// The attestation cluster's unique ID. This field is optional and it is only relevant when the value of Services.CreateSpec.type is CLUSTER.
	TrustAuthorityCluster *string `json:"trust_authority_cluster,omitempty"`
}

// NewVcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpec instantiates a new VcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpec(type_ VcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpecSourceType) *VcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpec {
	this := VcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpec{}
	this.Type = type_
	return &this
}

// NewVcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpecWithDefaults instantiates a new VcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpecWithDefaults() *VcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpec {
	this := VcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpec{}
	return &this
}

// GetType returns the Type field value
func (o *VcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpec) GetType() VcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpecSourceType {
	if o == nil {
		var ret VcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpecSourceType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *VcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpec) GetTypeOk() (*VcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpecSourceType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *VcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpec) SetType(v VcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpecSourceType) {
	o.Type = v
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *VcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpec) GetService() string {
	if o == nil || o.Service == nil {
		var ret string
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpec) GetServiceOk() (*string, bool) {
	if o == nil || o.Service == nil {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *VcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpec) HasService() bool {
	if o != nil && o.Service != nil {
		return true
	}

	return false
}

// SetService gets a reference to the given string and assigns it to the Service field.
func (o *VcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpec) SetService(v string) {
	o.Service = &v
}

// GetTrustAuthorityCluster returns the TrustAuthorityCluster field value if set, zero value otherwise.
func (o *VcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpec) GetTrustAuthorityCluster() string {
	if o == nil || o.TrustAuthorityCluster == nil {
		var ret string
		return ret
	}
	return *o.TrustAuthorityCluster
}

// GetTrustAuthorityClusterOk returns a tuple with the TrustAuthorityCluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpec) GetTrustAuthorityClusterOk() (*string, bool) {
	if o == nil || o.TrustAuthorityCluster == nil {
		return nil, false
	}
	return o.TrustAuthorityCluster, true
}

// HasTrustAuthorityCluster returns a boolean if a field has been set.
func (o *VcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpec) HasTrustAuthorityCluster() bool {
	if o != nil && o.TrustAuthorityCluster != nil {
		return true
	}

	return false
}

// SetTrustAuthorityCluster gets a reference to the given string and assigns it to the TrustAuthorityCluster field.
func (o *VcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpec) SetTrustAuthorityCluster(v string) {
	o.TrustAuthorityCluster = &v
}

func (o VcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if o.Service != nil {
		toSerialize["service"] = o.Service
	}
	if o.TrustAuthorityCluster != nil {
		toSerialize["trust_authority_cluster"] = o.TrustAuthorityCluster
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpec struct {
	value *VcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpec
	isSet bool
}

func (v NullableVcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpec) Get() *VcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpec {
	return v.value
}

func (v *NullableVcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpec) Set(val *VcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpec(val *VcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpec) *NullableVcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpec {
	return &NullableVcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpec{value: val, isSet: true}
}

func (v NullableVcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterTrustedInfrastructureTrustedClustersAttestationServicesCreateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


