/*
vcenter

VMware vCenter Server provides a centralized platform for managing your VMware vSphere environments

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VcenterIdentityProvidersOidcUpdateSpec struct for VcenterIdentityProvidersOidcUpdateSpec
type VcenterIdentityProvidersOidcUpdateSpec struct {
	// Endpoint to retrieve the provider metadata If unset, leaves value unchanged.
	DiscoveryEndpoint *string `json:"discovery_endpoint,omitempty"`
	// Client identifier to connect to the provider If unset, leaves value unchanged.
	ClientId *string `json:"client_id,omitempty"`
	// The secret shared between the client and the provider If unset, leaves value unchanged.
	ClientSecret *string `json:"client_secret,omitempty"`
	// The map used to transform an OAuth2 claim to a corresponding claim that vCenter Server understands. Currently only the key \"perms\" is supported. The key \"perms\" is used for mapping the \"perms\" claim of incoming JWT. The value is another map with an external group as the key and a vCenter Server group as value. If unset, leaves value unchanged.
	ClaimMap *[]VcenterIdentityProvidersOauth2CreateSpecClaimMap `json:"claim_map,omitempty"`
}

// NewVcenterIdentityProvidersOidcUpdateSpec instantiates a new VcenterIdentityProvidersOidcUpdateSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVcenterIdentityProvidersOidcUpdateSpec() *VcenterIdentityProvidersOidcUpdateSpec {
	this := VcenterIdentityProvidersOidcUpdateSpec{}
	return &this
}

// NewVcenterIdentityProvidersOidcUpdateSpecWithDefaults instantiates a new VcenterIdentityProvidersOidcUpdateSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVcenterIdentityProvidersOidcUpdateSpecWithDefaults() *VcenterIdentityProvidersOidcUpdateSpec {
	this := VcenterIdentityProvidersOidcUpdateSpec{}
	return &this
}

// GetDiscoveryEndpoint returns the DiscoveryEndpoint field value if set, zero value otherwise.
func (o *VcenterIdentityProvidersOidcUpdateSpec) GetDiscoveryEndpoint() string {
	if o == nil || o.DiscoveryEndpoint == nil {
		var ret string
		return ret
	}
	return *o.DiscoveryEndpoint
}

// GetDiscoveryEndpointOk returns a tuple with the DiscoveryEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterIdentityProvidersOidcUpdateSpec) GetDiscoveryEndpointOk() (*string, bool) {
	if o == nil || o.DiscoveryEndpoint == nil {
		return nil, false
	}
	return o.DiscoveryEndpoint, true
}

// HasDiscoveryEndpoint returns a boolean if a field has been set.
func (o *VcenterIdentityProvidersOidcUpdateSpec) HasDiscoveryEndpoint() bool {
	if o != nil && o.DiscoveryEndpoint != nil {
		return true
	}

	return false
}

// SetDiscoveryEndpoint gets a reference to the given string and assigns it to the DiscoveryEndpoint field.
func (o *VcenterIdentityProvidersOidcUpdateSpec) SetDiscoveryEndpoint(v string) {
	o.DiscoveryEndpoint = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *VcenterIdentityProvidersOidcUpdateSpec) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterIdentityProvidersOidcUpdateSpec) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *VcenterIdentityProvidersOidcUpdateSpec) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *VcenterIdentityProvidersOidcUpdateSpec) SetClientId(v string) {
	o.ClientId = &v
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise.
func (o *VcenterIdentityProvidersOidcUpdateSpec) GetClientSecret() string {
	if o == nil || o.ClientSecret == nil {
		var ret string
		return ret
	}
	return *o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterIdentityProvidersOidcUpdateSpec) GetClientSecretOk() (*string, bool) {
	if o == nil || o.ClientSecret == nil {
		return nil, false
	}
	return o.ClientSecret, true
}

// HasClientSecret returns a boolean if a field has been set.
func (o *VcenterIdentityProvidersOidcUpdateSpec) HasClientSecret() bool {
	if o != nil && o.ClientSecret != nil {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given string and assigns it to the ClientSecret field.
func (o *VcenterIdentityProvidersOidcUpdateSpec) SetClientSecret(v string) {
	o.ClientSecret = &v
}

// GetClaimMap returns the ClaimMap field value if set, zero value otherwise.
func (o *VcenterIdentityProvidersOidcUpdateSpec) GetClaimMap() []VcenterIdentityProvidersOauth2CreateSpecClaimMap {
	if o == nil || o.ClaimMap == nil {
		var ret []VcenterIdentityProvidersOauth2CreateSpecClaimMap
		return ret
	}
	return *o.ClaimMap
}

// GetClaimMapOk returns a tuple with the ClaimMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VcenterIdentityProvidersOidcUpdateSpec) GetClaimMapOk() (*[]VcenterIdentityProvidersOauth2CreateSpecClaimMap, bool) {
	if o == nil || o.ClaimMap == nil {
		return nil, false
	}
	return o.ClaimMap, true
}

// HasClaimMap returns a boolean if a field has been set.
func (o *VcenterIdentityProvidersOidcUpdateSpec) HasClaimMap() bool {
	if o != nil && o.ClaimMap != nil {
		return true
	}

	return false
}

// SetClaimMap gets a reference to the given []VcenterIdentityProvidersOauth2CreateSpecClaimMap and assigns it to the ClaimMap field.
func (o *VcenterIdentityProvidersOidcUpdateSpec) SetClaimMap(v []VcenterIdentityProvidersOauth2CreateSpecClaimMap) {
	o.ClaimMap = &v
}

func (o VcenterIdentityProvidersOidcUpdateSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DiscoveryEndpoint != nil {
		toSerialize["discovery_endpoint"] = o.DiscoveryEndpoint
	}
	if o.ClientId != nil {
		toSerialize["client_id"] = o.ClientId
	}
	if o.ClientSecret != nil {
		toSerialize["client_secret"] = o.ClientSecret
	}
	if o.ClaimMap != nil {
		toSerialize["claim_map"] = o.ClaimMap
	}
	return json.Marshal(toSerialize)
}

type NullableVcenterIdentityProvidersOidcUpdateSpec struct {
	value *VcenterIdentityProvidersOidcUpdateSpec
	isSet bool
}

func (v NullableVcenterIdentityProvidersOidcUpdateSpec) Get() *VcenterIdentityProvidersOidcUpdateSpec {
	return v.value
}

func (v *NullableVcenterIdentityProvidersOidcUpdateSpec) Set(val *VcenterIdentityProvidersOidcUpdateSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableVcenterIdentityProvidersOidcUpdateSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableVcenterIdentityProvidersOidcUpdateSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVcenterIdentityProvidersOidcUpdateSpec(val *VcenterIdentityProvidersOidcUpdateSpec) *NullableVcenterIdentityProvidersOidcUpdateSpec {
	return &NullableVcenterIdentityProvidersOidcUpdateSpec{value: val, isSet: true}
}

func (v NullableVcenterIdentityProvidersOidcUpdateSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVcenterIdentityProvidersOidcUpdateSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


